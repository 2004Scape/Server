generator kysely {
    provider = "prisma-kysely"

    output       = "../../src/db"
    fileName     = "types.ts"
    enumFileName = "enums.ts"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// players

model account {
    id Int @id @default(autoincrement())

    username String @unique
    password String

    registration_ip   String?
    registration_date DateTime @default(now())

    logged_in  Int       @default(0)
    login_time DateTime?

    muted_until  DateTime?
    banned_until DateTime?

    staffmodlevel Int @default(0)
}

model account_session {
    id Int @id @default(autoincrement())

    account_id   Int
    world        Int    @default(0)
    profile      String @default("main")
    session_uuid String

    timestamp  DateTime
    coord      Int
    event      String
    event_type Int      @default(-1)
}

// website

model newspost {
    id Int @id @default(autoincrement())

    category Int
    title    String
    content  String  @db.MediumText
    slug     String?

    created DateTime @default(now())
    updated DateTime @default(now()) @updatedAt
}

model hiscore {
    account_id Int
    profile    String   @default("main")
    type       Int
    level      Int
    value      Int
    date       DateTime @default(now()) @updatedAt

    @@id([account_id, profile, type])
}

// upped value size to 8 bytes used for larger values e.g. total xp tracking
model hiscore_large {
    account_id Int
    profile    String   @default("main")
    type       Int
    level      Int
    value      BigInt
    date       DateTime @default(now()) @updatedAt

    @@id([account_id, profile, type])
}

model npc_hiscore {
    id Int @id @default(autoincrement())

    npc_id     Int
    account_id Int
    kill_count Int @default(0)
}

// social

model friendlist {
    account_id        Int
    friend_account_id Int

    @@id([account_id, friend_account_id])
}

model ignorelist {
    account_id        Int
    ignore_account_id Int

    @@id([account_id, ignore_account_id])
}

model public_chat {
    id      Int    @id @default(autoincrement())
    profile String @default("main")

    account_id Int
    message    String
    date       DateTime @default(now())
}

model private_chat {
    id      Int    @id @default(autoincrement())
    profile String @default("main")

    from_account_id Int
    to_account_id   Int
    message         String
    date            DateTime @default(now())
}
