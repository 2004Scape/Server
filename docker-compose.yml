# version: "3.8"
# Compose V2 doesn't require a version anymore: `version` is obsolete

services:
  # --------------- Dev --------------- #
  # 
  # This launches the development server (no auth/db, only the game)
  # Uses .env for environment variables
  2004scape:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "${WEB_PORT}:80"
      - "${NODE_PORT}:43594"
    profiles:
      - dev
    env_file:
      - .env
  
  # --------------- Production --------------- #
  # Everything below is for production build 
  # 
  # MySQL Database service, uses MariaDB
  db:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    profiles:
      - prod
    env_file:
      - .env_prod
    # Migration waits till our database is up and running
    # Stops if failed 5 times, 10 second intervals
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASS}"]
      interval: 10s
      retries: 5
      start_period: 10s

  # Migration service (this should be deleted afterwards)
  # Runs database migrations after database is setup successfully
  db_migrate:
    build: .
    command: ["/bin/bash", "-c", "npm run db:migrate"]
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - prod
    env_file:
      - .env_prod
    deploy:
      restart_policy:
        condition: none
    restart: "no"

  # Website service, pull remote repository, and run it 
  website:
    image: node:latest
    working_dir: /usr/src/app
    # Creates a default world configuration
    # TODO: This is a bit hacky, make this configurable
    # TODO: Forces http
    # TODO: Currently uses custom branch (where https redirect is fixed)
    # git clone https://github.com/2004Scape/Website.git
    # git clone -b fix/https_env_var https://github.com/Rohanlogs/2004Scape-Website.git
    command: ["/bin/bash", "-c", "git clone -b fix/https_env_var https://github.com/Rohanlogs/2004Scape-Website.git /usr/src/app && mkdir -p /usr/src/app/data/config && echo '[{\"id\": 10, \"region\": \"Local Development\", \"address\": \"http://localhost:${WEB_PORT}\", \"members\": \"true\", \"portOffset\": 0}]' > /usr/src/app/data/config/worlds.json && cd /usr/src/app && npm install && npm start"]
    profiles:
      - prod
    env_file:
      - .env_prod
    # Important, we have to keep separate ports with web service & game 
    environment:
      WEB_PORT: 3000
    ports: 
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      retries: 5
      start_period: 10s

  login:
    build: .
    command: ["npm", "run", "login"]
    depends_on:
      - website
    profiles:
      - prod
    env_file:
      - .env_prod
    ports:
      - "${LOGIN_PORT}:43500"

  logger:
    build: .
    command: ["npm", "run", "logger"]
    depends_on:
      - login
    profiles:
      - prod
    env_file:
      - .env_prod
    ports:
      - "${LOGGER_PORT}:43501"

  friend:
    build: .
    command: ["npm", "run", "friend"]
    depends_on:
      - logger
    profiles:
      - prod
    env_file:
      - .env_prod
    ports:
      - "${FRIEND_PORT}:45099"

  # Server composer  
  server:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["npm", "run", "start"]
    environment:
      # Important: point host into its docker service names
      # Don't change these, unless you know what you're doing:
      - LOGGER_HOST=logger
      - FRIEND_HOST=friend
      - LOGIN_HOST=login
      - DB_HOST=db
    depends_on:
      website:
        # Wait for website to launch successfully 
        # This essentially waits till the entire thing is done
        # Server build is quite fast, so after this is done, it should pretty much be live 
        condition: service_healthy
    profiles:
      - prod
    ports:
      - "${WEB_PORT}:80"
      - "${NODE_PORT}:43594"
      - "${WEB_MANAGEMENT_PORT}:8898"
      - 43595:43595
    env_file:
      - .env_prod
