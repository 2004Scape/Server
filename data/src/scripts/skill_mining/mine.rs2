// Clay Rocks
[oploc1,_mining_rock] ~mine(loc_param(mining_rock_level));

// "hidden" op
[oploc3,_mining_rock] ~mine_rock(~pickaxe_checker);

[proc,mine](int $levelreq)
%skill_anim = 0;
%skill_sound = 0;
if (%skill_clock < map_clock) {
    %skill_clock = calc(map_clock + 3);
    p_oploc(1);
} else {
    ~mining_first_swing($levelreq);
}

[proc,mining_first_swing](int $levelreq)
def_int $is_empty = loc_param(mining_rock_empty);
if ($is_empty = ^true) {
    anim(null, 0);
    mes("There is currently no ore available in this rock.");
    return;
}

if (stat(mining) < $levelreq) {
    anim(null, 0);
    mes("You need a mining level of <tostring($levelreq)> to mine this rock.");
    return;
}

def_obj $pickaxe = ~pickaxe_checker;
if ($pickaxe = null) {
    ~mesbox("You need a pickaxe to mine this rock. You do not have a pickaxe which you have the Mining level to use.");
    return;
}

// def_obj $rock_output = loc_param(mining_rock_output);
// def_int $number = inv_total(inv, $rock_output);
// def_int $overflow = inv_itemspace2(inv, $rock_output, 1, inv_size(inv));

// mes("Number: <tostring($number)> Overflow: <tostring($overflow)> Last Slot: <tostring(last_slot)>");

// if ($overflow >= $number) {
//    def_string $rock_ore_name = loc_param(mining_ore_name);
//     mes("Your inventory is too full to hold anymore <$rock_ore_name>.");
//     return;
// }

mes("You swing your pick at the rock.");
~mine_rock($pickaxe);

[proc,mine_rock](obj $pickaxe)
def_int $mining_rate = oc_param($pickaxe, mining_rate);

if (%skill_clock = map_clock) { // add mining_rate to map_clock
    mes("How often is this running?");
    if (stat_random(stat(mining), loc_param(rock_chance_low), loc_param(rock_chance_high)) = true) {

        def_obj $rock_output = loc_param(mining_rock_output);
        def_int $rock_exp = loc_param(mining_rock_exp);
        def_string $rock_ore_name = loc_param(mining_ore_name);

        mes("You mine some <$rock_ore_name>.");
        inv_add(inv, $rock_output, 1);
        givexp(mining, $rock_exp);
        anim(null, 0);
        return;
    }
    %skill_clock = calc(map_clock + $mining_rate);
}

if (%skill_anim < 1) {
    %skill_anim = 4;
    def_seq $mining_anim = oc_param($pickaxe, mining_animation);
    anim($mining_anim, 0);
}
%skill_anim = calc(%skill_anim - 1);

p_oploc(3);