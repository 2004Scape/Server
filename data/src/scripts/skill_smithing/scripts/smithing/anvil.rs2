[oplocu,loc_2783]
if (oc_category(last_item) = category_151) @smithing_anvil_interface(last_item);


[label,smithing_anvil_interface](obj $last_item)
def_struct $struct = oc_param($last_item, smithing_anvil_struct);
def_int $level = struct_param($struct, levelrequired);

// check if high enough level
if (stat(smithing) < $level) {
    ~mesbox("You need a Smithing level of at least <tostring($level)> to work <lowercase(oc_name(struct_param($struct, namedobj)))>.");
    return;
}
// check if player has a hammer
if (inv_total(inv, hammer) < 1) {
    ~mesbox("You need a hammer to work the metal with.");
    return;
}

// def_inv $column1 = struct_param($struct, invcolumn1);
// def_inv $column2 = struct_param($struct, invcolumn2);
// def_inv $column3 = struct_param($struct, invcolumn3);
// def_inv $column4 = struct_param($struct, invcolumn4);
// def_inv $column5 = struct_param($struct, invcolumn5);

switch_obj ($last_item)
{
    case bronze_bar : 
        inv_transmit(bronze1, smithing:column1);
        inv_transmit(bronze2, smithing:column2);
        inv_transmit(bronze3, smithing:column3);
        inv_transmit(bronze4, smithing:column4);
        inv_transmit(bronze5, smithing:column5);
    case iron_bar :
        inv_transmit(iron1, smithing:column1);
        inv_transmit(iron2, smithing:column2);
        inv_transmit(iron3, smithing:column3);
        inv_transmit(iron4, smithing:column4);
        inv_transmit(iron5, smithing:column5);
    case steel_bar :
        inv_transmit(steel1, smithing:column1);
        inv_transmit(steel2, smithing:column2);
        inv_transmit(steel3, smithing:column3);
        inv_transmit(steel4, smithing:column4);
        inv_transmit(steel5, smithing:column5);
    case mithril_bar :
        inv_transmit(mithril1, smithing:column1);
        inv_transmit(mithril2, smithing:column2);
        inv_transmit(mithril3, smithing:column3);
        inv_transmit(mithril4, smithing:column4);
        inv_transmit(mithril5, smithing:column5);
    case adamantite_bar :
        inv_transmit(adamant1, smithing:column1);
        inv_transmit(adamant2, smithing:column2);
        inv_transmit(adamant3, smithing:column3);
        inv_transmit(adamant4, smithing:column4);
        inv_transmit(adamant5, smithing:column5);
    case runite_bar :
        inv_transmit(rune1, smithing:column1);
        inv_transmit(rune2, smithing:column2);
        inv_transmit(rune3, smithing:column3);
        inv_transmit(rune4, smithing:column4);
        inv_transmit(rune5, smithing:column5);
    case default : @nothing_interesting_happens;
}

if_opentop(smithing);


/**
[label,attempt_smithing](obj $last_item)

db_find(smithing:bar, $last_item);
def_dbrow $data = db_findnext;
if ($data = null) {
    @nothing_interesting_happens;
}
*/


// def_string $pocket = db_getfield($data, pickpocket:pocket, 0);
// def_int $current_level = stat(thieving);
// def_int $thieving_level = db_getfield($data, pickpocket:level, 0);
// if ($current_level < $thieving_level) {
//     ~mesbox("You need level <tostring($thieving_level)> thieving to pick the <$pocket>.");
//     return;
// }


//sound=anvil, anvil2, anvil_4