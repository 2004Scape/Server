[opheldu,achey_logs]
switch_obj(last_useitem) {
    case knife : @make_ogre_shafts;
    case tinderbox : @light_achey_inv(last_slot);
    case default : ~displaymessage(^dm_default);
}

// In osrs, achey logs are special. when you tinderbox -> log, it goes through a different firemaking script.
// In this different script, the log drops before some of the inzone checks. And in the trawler minigame
// you're actually able to firemake with achey logs when its flooding, but not with normal logs
[label,light_achey_inv](int $slot)
def_obj $log = inv_getobj(inv, $slot);
def_int $level = oc_param($log, levelrequire);

if (stat(firemaking) < $level) {
    mes("You need a Firemaking level of <tostring($level)> to burn <oc_name($log)>.");
    return;
}
// check if the coord is already occupied by an interactable loc
if (map_locaddunsafe(coord) = true | map_blocked(coord) = true) {
    mes("You can't light a fire here.");
    return;
}

inv_dropslot(inv, coord, $slot, ^lootdrop_duration);
if (~inzone_coord_pair_table(bank_zones, coord) = true) {
    mes("You can't light a fire here.");
    return;
}
// check if they have tinderbox
if(inv_total(inv, tinderbox) < 1) {
    mes("You need a tinderbox to light a fire.");
    return;
}
if (%action_delay < map_clock) {
    p_stopaction;
    anim(human_createfire, 0);
    sound_synth(tinderbox_strike, 0, 0);
    mes("You attempt to light the logs.");
    %action_delay = calc(map_clock + 3);
} else if (%action_delay = map_clock) {
    if(stat_random(stat(firemaking), 64, 512) = true) { // firemaking roll
        %action_delay = calc(map_clock + 4);
        ~push_player(obj_coord);
        ~firemaking_success(obj_coord, $log); // if fully blocked then just light the log and dont move
        return;
    } else {
        // if fails, then reattempt to light
        anim(human_createfire, 0);
        sound_synth(tinderbox_strike, 0, 0);
        %action_delay = calc(map_clock + 4);
    }
}
p_opobj(4);