// trigger for logs on ground
[opobj4,_category_22]
    @light_logs_ground;

[opobju,_category_22]
if (last_useitem = tinderbox) {
    @light_logs_ground;
} else {
    ~displaymessage(^dm_default);
}

// opheldu for logs is handled in fletching
[opheldu,tinderbox]
if (last_useitem = tutorial_logs) {
    @tut_light_logs_inv(last_useslot);
    return;
}

switch_category(oc_category(last_useitem)) {
    case category_22 : @light_logs_inv(last_useslot);
    case light_source_unlit: @ignite_light_source(last_useitem);
    case default : ~displaymessage(^dm_default);
}

[label,light_logs_ground]
def_obj $log = obj_type;
// check level first
def_int $level = oc_param($log, levelrequire);
if (stat(firemaking) < $level) {
    mes("You need a Firemaking level of <tostring($level)> to burn <oc_name($log)>.");
    return;
}
// check if the coord is already occupied by an interactable loc
// unconfirmed
if (map_locaddunsafe(obj_coord) = true | ~inzone_coord_pair_table(bank_zones, coord) = true) {
    mes("You can't light a fire here.");
    return;
}
// check if they have tinderbox
if(inv_total(inv, tinderbox) < 1) {
    mes("You need a tinderbox to light a fire.");
    return;
}
// party pete goes here, after tinderbox check
if (~inzone_coord_pair_table(party_room_zones, coord) = true) {
    mes("Party Pete won't be happy if you light a fire here."); // osrs
    return;
}
// 4t cycle
if (%action_delay < map_clock) {
    p_stopaction;
    anim(human_createfire, 0);
    sound_synth(tinderbox_strike, 0, 0);
    mes("You attempt to light the logs.");
    %action_delay = calc(map_clock + 3);
} else if (%action_delay = map_clock) {
    if(stat_random(stat(firemaking), 64, 512) = true) { // firemaking roll
        %action_delay = calc(map_clock + 4);
        def_coord $fire_coord = obj_coord;
        if (~in_duel_arena = true) {
            // https://youtu.be/L3OwjH-iXQU
            //  - could still fm in the duel arena. 
            //  - It just didnt move the player at all
            // https://oldschool.runescape.wiki/w/Update:RS2_-_more_fixes/changes
            //  - "Fixed: You could select a duel with the no movement option and then plant flowers or light a fire so you weren't standing next to your opponent."
            p_delay(0);
            anim(null, 0);
            ~firemaking_success($fire_coord, $log);
            return;
        }
        // attempt to firemaking each direction: west east south north
        // if player isnt standing on the log anymore, the fire is lit
        mes("WEST");
        if (lineofwalk(coord, movecoord(coord, -1, 0, 0)) = true & coord = $fire_coord) { // check west
            mes("Before p_teleport: <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, -1, 0, 0));
            mes("After p_teleport: <~coord_tostring(coord)>");
            p_delay(0);
            mes("After p_delay: <~coord_tostring(coord)>");
        }
        mes("EAST");
        if (lineofwalk(coord, movecoord(coord, 1, 0, 0)) = true & coord = $fire_coord) { // check east
            mes("EAST - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 1, 0, 0));
            p_delay(0);
        }
        mes("SOUTH");
        if (lineofwalk(coord, movecoord(coord, 0, 0, -1)) = true & coord = $fire_coord) { // check south
            mes("SOUTH - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 0, 0, -1));
            p_delay(0);
        }
        mes("NORTH");
        if (lineofwalk(coord, movecoord(coord, 0, 0, 1)) = true & coord = $fire_coord) { // check north
            mes("NORTH - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 0, 0, 1));
            p_delay(0);
        }
        // if fully blocked then just light the log and dont move
        ~firemaking_success($fire_coord, $log);
        return;
    } else {
        // if fails, then reattempt to light
        anim(human_createfire, 0);
        sound_synth(tinderbox_strike, 0, 0);
        %action_delay = calc(map_clock + 3);
    }
}
p_opobj(4); // interact with obj again

[label,light_logs_inv](int $slot)
def_obj $log = inv_getobj(inv, $slot);
def_int $level = oc_param($log, levelrequire);

if (stat(firemaking) < $level) {
    mes("You need a Firemaking level of <tostring($level)> to burn <oc_name($log)>.");
    return;
}
// check if the coord is already occupied by an interactable loc
if (map_locaddunsafe(coord) = true | map_blocked(coord) = true) {
    mes("You can't light a fire here.");
    return;
}
if (~inzone_coord_pair_table(bank_zones, coord) = true) {
    mes("You can't light a fire here.");
    return;
}
// check if they have tinderbox
if(inv_total(inv, tinderbox) < 1) {
    mes("You need a tinderbox to light a fire.");
    return;
}
// party pete goes here, after tinderbox check
if (~inzone_coord_pair_table(party_room_zones, coord) = true) {
    // osrs
    mes("Party Pete won't be happy if you light a fire here.");
    return;
}

obj_add(coord, $log, 1, ^lootdrop_duration);
inv_delslot(inv, $slot);
if (%action_delay < map_clock) {
    anim(human_createfire, 0);
    sound_synth(tinderbox_strike, 0, 0);
    mes("You attempt to light the logs.");
    %action_delay = calc(map_clock + 3);
} else if (%action_delay = map_clock) {
    p_opobj(4);
    if(stat_random(stat(firemaking), 64, 512) = true) { // firemaking roll
        %action_delay = calc(map_clock + 4);
        def_coord $fire_coord = obj_coord;
        def_coord $dest_coord = coord;
        if (~in_duel_arena = true) {
            // https://youtu.be/L3OwjH-iXQU
            //  - could still fm in the duel arena. 
            //  - It just didnt move the player at all
            // https://oldschool.runescape.wiki/w/Update:RS2_-_more_fixes/changes
            //  - "Fixed: You could select a duel with the no movement option and then plant flowers or light a fire so you weren't standing next to your opponent."
            p_delay(1);
            anim(null, 0);
            ~firemaking_success($fire_coord, $log);
            return;
        }
        // attempt to firemaking each direction: west east south north
        // if player isnt standing on the log anymore, the fire is lit
        mes("WEST");
        if (lineofwalk(coord, movecoord(coord, -1, 0, 0)) = true & coord = $fire_coord) { // check west
            mes("Before p_teleport: <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, -1, 0, 0));
            mes("After p_teleport: <~coord_tostring(coord)>");
            p_delay(1);
            mes("After p_delay: <~coord_tostring(coord)>");
        }
        mes("EAST");
        if (lineofwalk(coord, movecoord(coord, 1, 0, 0)) = true & coord = $fire_coord) { // check east
            mes("EAST - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 1, 0, 0));
            p_delay(1);
        }
        mes("SOUTH");
        if (lineofwalk(coord, movecoord(coord, 0, 0, -1)) = true & coord = $fire_coord) { // check south
            mes("SOUTH - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 0, 0, -1));
            p_delay(1);
        }
        mes("NORTH");
        if (lineofwalk(coord, movecoord(coord, 0, 0, 1)) = true & coord = $fire_coord) { // check north
            mes("NORTH - <~coord_tostring(coord)>");
            p_teleport(movecoord(coord, 0, 0, 1));
            p_delay(1);
        }
        // if fully blocked then just light the log and dont move
        ~firemaking_success($fire_coord, $log);
        return;
    } else {
        // if fails, then reattempt to light
        anim(human_createfire, 0);
        sound_synth(tinderbox_strike, 0, 0);
        %action_delay = calc(map_clock + 3);
    }
}

p_stopaction;
p_opobj(4);

[proc,firemaking_success](coord $fire_coord, obj $log)
obj_del;
givexp(firemaking, oc_param($log, productexp));
sound_synth(fire_lit, 0, 0);
facesquare($fire_coord);
//mes("<tostring(map_clock)>, <tostring(%action_delay)>: The fire catches and the logs begin to burn.");
mes("The fire catches and the logs begin to burn.");
def_int $delay = calc(100 + random(100)); // firemaking length: https://archive.is/zF5hb
loc_add($fire_coord, loc_2732, 1, centrepiece_straight, $delay);
world_delay($delay);
obj_add($fire_coord, ashes, 1, 100);
