[ai_queue2,_]
if (npc_getmode = none) {
    return;
}

def_int $damage = 1;// randominc(%com_maxhit); TODO needs player pointer
npc_damage(^hitmark_damage, $damage);

// TODO this is for flinching players (pvp etc)
//if (autoretaliateenabled && action_clock < gameClock()) action_clock = gameClock() + (weaponSpeed / 2)

if (npc_stat(hitpoints) <= 0) {
    npc_setmode(none);
    npc_queue(3, 1);
}

[ai_queue3,_]
npc_anim(human_death, 0);
npc_delay(2);
npc_del;

[ai_opplayer2,_]
if (%npc_action_delay > map_clock) {
    return;
}
if_close;
npc_anim(human_unarmedpunch, 0);

def_int $attack_roll;
def_int $maxhit_roll;
$attack_roll, $maxhit_roll = ~npc_combat_stat;

npc_say("Clock: <tostring(map_clock)>, Attack Roll: <tostring($attack_roll)>, Max Hit: <tostring($maxhit_roll)>");

def_int $damage = randominc($maxhit_roll);
if ($damage = 0) {
    damage(uid, ^hitmark_block, 0);
} else {
    damage(uid, ^hitmark_damage, $damage);
}

def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
anim(oc_param($weapon, defend_anim), 0);
%npc_action_delay = add(map_clock, nc_param(npc_type, attackrate));
%combat_logout_delay = add(map_clock, 17); // 10 seconds

[proc,npc_combat_stat]()(int, int)
def_int $attack_level = npc_stat(attack);
def_int $strength_level = npc_stat(strength);

def_int $attackbonus = npc_param(attackbonus);
def_int $strengthbonus = npc_param(strengthbonus);
def_int $attackstyle = npc_param(attackstyle);

//npc_say("Attack Level: <tostring($attack_level)>, Strength Level: <tostring($strength_level)>, Style: <tostring($attackstyle)>");

def_int $attack = ~combat_melee_attack_roll(~combat_stat_attack($attackbonus, $attack_level, 1), $attackbonus);
def_int $maxhit = ~combat_melee_maximum_hit(~combat_stat_strength($strengthbonus, $strength_level, 1), $strengthbonus);
return($attack, $maxhit);

[proc,npc_combat_get_defence_roll]()(int)
def_int $defence_level = npc_stat(defence);
def_int $defencebonus = ~npc_combat_get_defencebonus;
return(~combat_melee_defence_roll(add($defence_level, 9), $defencebonus));

// requires player pointer and npc pointer.
[proc,npc_combat_get_defencebonus]()(int)
def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
switch_int (~combat_style($weapon)) {
    case ^stab:
        return(npc_param(stabdefence));
    case ^slash:
        return(npc_param(slashdefence));
    case ^crush:
        return(npc_param(crushdefence));
    case ^ranged:
        return(npc_param(rangedefence));
    case ^magic:
        return(npc_param(magicdefence));
}
error("combat style of <tostring(~combat_style($weapon))> not defined in switch for npc_combat_get_defencebonus");

