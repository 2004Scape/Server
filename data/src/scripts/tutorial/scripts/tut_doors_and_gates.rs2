[proc,tut_island_survial_gate]
if (%tutorial_progress < 120) {
    ~mesbox("You need to talk to the Survival Guide and complete her tasks before you are allowed to proceed through this gate.");
    return;
}
if (%tutorial_progress = 120) {
    %tutorial_progress = 130;
    ~set_tutorial_progress;
}
loc_findallzone(coord);
while(loc_findnext = true) {
    if(loc_category = tutorial_gate) {
        def_coord $central_coord = loc_coord;
        def_int $orig_angle = loc_angle;
        def_loc $type = loc_type;
        loc_change(loc_83, 2);
        if($type = loc_3015) {
             loc_add(movecoord($central_coord, 1, 0, 0), loc_49, 1, loc_shape, 2);
             loc_add(movecoord($central_coord, 2, 0, 0), loc_50, 1, loc_shape, 2);
        }
    }
}
sound_synth(door_open, 0, 0);
p_delay(0);

// Survival Tutor Gate
[oploc1,_tutorial_gate]
if(coordx(coord) <= coordx(loc_coord)) {
    p_teleport(movecoord(loc_coord, 1, 0, 0));
    ~tut_island_survial_gate;
    return;
}
p_teleport(loc_coord);
~tut_island_survial_gate;

// Runescape guide door
[oploc1,loc_3014]
if (%tutorial_progress < 4) {
    ~mesbox("You need to talk to the 'Runescape Guide' before you are allowed to proceed through this door.");
    return;
}

hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = 4) {
    %tutorial_progress = 10;
    ~tutorial_step_moving_around;
}

// Door to Master Chef
[oploc1,loc_3017]
hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = 130) {
    %tutorial_progress = ^chef_start;
    ~set_tutorial_progress;
}

// Door exiting Master Chef's house
[oploc1,loc_3018]
if (%tutorial_progress < 180) {
    ~mesbox("You need to finish the Cooking Guide's tasks first.");
    return;
}

hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = 180) {
    %tutorial_progress = 190;
    ~set_tutorial_progress;
}

// Door to Quest Guide's house
[oploc1,loc_3019]
hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = 200) {
    %tutorial_progress = ^quest_guide_start;
    ~set_tutorial_progress;
}

// Ladder to Mine
[oploc1,loc_3029]
if (%tutorial_progress < 250) {
    npc_findallzone(0_48_48_12_52);
    while (npc_findnext = true) {
        if (npc_type = npc_949) @quest_guide_not_ready_to_leave_yet;
    }

    npc_findallzone(0_48_48_16_48);
    while (npc_findnext = true) {
        if (npc_type = npc_949) @quest_guide_not_ready_to_leave_yet;
    }
    return;
}
p_arrivedelay;
if (%tutorial_progress = 250) {
    %tutorial_progress = 260;
}
~set_tutorial_progress;
@climb_ladder(movecoord(coord, 0, 0, 6400), false);

// Ladder out of mine to quest guide
[oploc1,loc_3028]
p_arrivedelay;
@climb_ladder(movecoord(coord, 0, 0, -6400), true);

// TODO: THIS WHOLE THING
// Gate to Combat Instructor
[oploc1,loc_3021]
if (%tutorial_progress < ^mining_instructor_finished) {
    ~mesbox("Should probs finish that mining part first dood.");
    return;
}
if (%tutorial_progress = ^mining_instructor_finished) {
    %tutorial_progress = ^combat_instructor_start;
    ~set_tutorial_progress;
}
 ~open_and_close_door(loc_3021, ~check_axis(coord, loc_coord, loc_angle), false);

// TODO: this whole thing again
// Gate into Rat Pen
[oploc1,loc_3022]
if (%tutorial_progress < ^combat_instructor_opened_combat_interface) {
    if (npc_finduid(~npc_within_distance(0_48_148_35_38, npc_944, 10)) = true) {
        @combat_instructor_get_away_from_there;
    }
}

if (%tutorial_progress > ^combat_instructor_before_attacking_ranged) {
    if (npc_finduid(~npc_within_distance(0_48_148_35_38, npc_944, 10)) = true) {
        @combat_instructor_dont_enter_the_pit_ranged;
    }
}

if (%tutorial_progress = ^combat_instructor_opened_combat_interface) {
    %tutorial_progress = ^combat_instructor_before_attacking_melee;
    ~set_tutorial_progress;
}
 ~open_and_close_door(loc_3022, ~check_axis(coord, loc_coord, loc_angle), false);

[oploc1,loc_3030]
if (%tutorial_progress < ^combat_instructor_after_attacking_ranged) {
    if (npc_finduid(~npc_within_distance(0_48_148_35_38, npc_944, 10)) = true) {
        @combat_instructor_youre_not_ready_to_continue;
    }
}
p_arrivedelay;
if(%tutorial_progress = ^combat_instructor_after_attacking_ranged) {
    %tutorial_progress = ^tutorial_open_banking;
    ~set_tutorial_progress;
}
@climb_ladder(movecoord(coord, 0, 0, -6400), true);

[oploc1,loc_3031]
p_arrivedelay;
@climb_ladder(movecoord(coord, 0, 0, 6400), false);

[oploc1,loc_3024]
if (%tutorial_progress < ^tutorial_opened_bank) {
    ~mesbox("You need to open your bank first.");
    return;
}
hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = ^tutorial_opened_bank) {
    %tutorial_progress = ^tutorial_opened_financial_advisor_door;
    ~set_tutorial_progress;
}

[oploc1,loc_3025]
if (%tutorial_progress < ^financial_advisor_talked_to) {
    ~mesbox("You need to talk to the Financial Advisor before you are allowed to proceed through this door.");
    return;
}
hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = ^financial_advisor_talked_to) {
    %tutorial_progress = ^tutorial_exit_financial_advisors_room;
    ~set_tutorial_progress;
}

[oploc1,loc_3026]
if (%tutorial_progress < ^brother_brace_finish) {
    ~mesbox("You need to finish Brother Brace's tasks before you are allowed to proceed through this door.");
    return;
}
hint_stop();
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
~open_and_close_door(loc_param(next_loc_stage), $is_outside, false);
if (%tutorial_progress = ^brother_brace_finish) {
    %tutorial_progress = ^tutorial_exit_chapel;
    ~set_tutorial_progress;
}
