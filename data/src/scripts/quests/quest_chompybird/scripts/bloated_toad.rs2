[opheld4,bloated_toad]
// release all
// TODO spawns toad(s?) on the ground
inv_del(inv, bloated_toad, inv_size(inv));
mes("You release the toads and see them hop off into the distance.");

[opheld5,bloated_toad]
// release
// TODO spawn toad on the ground
inv_delslot(inv, last_slot);
mes("You release the toad and see it hop off into the distance.");

[opheld1,bloated_toad]
if (%chompybird_progress < ^chompybird_shown_toad) {
    // TODO confirm line breaks, currently overruns
    ~objbox(bloated_toad,"You're not sure where Rantz told you to place the bloated toad. You decide to wait and ask him where to place it.");
    return;
}

// TODO tbc which quest states show this message
// TODO tbc distance
if (distance(coord, 0_41_46_12_21) > 5) {
    mes("This is too far away for Rantz to shoot the chompy bird.");
    return;
}

// TODO tbc any npc? or just toads
npc_findallany(coord, 0, 0);
if (npc_findnext = true) {
    mes("There is a bloated toad already placed at this location.");
    return;
}

anim(human_pickupfloor, 0);
inv_del(inv, bloated_toad, 1);

if (%chompybird_progress = ^chompybird_shown_toad) {
    %chompybird_progress = ^chompybird_dropped_toad;
}

p_delay(0);

if (p_finduid(uid) = true) {
    npc_add(coord, bloated_toad, 101);
    %quest_chompybird_baiter = uid;
    npc_queue(4, 0, 25);

    mes("You carefully place the bloated toad bait.");

    p_delay(0);
    if (lineofwalk(coord, movecoord(coord, -1, 0, 0)) = true) { // check west
        p_teleport(movecoord(coord, -1, 0, 0));
        p_delay(0);
        return;
    }

    if (lineofwalk(coord, movecoord(coord, 1, 0, 0)) = true) { // check east
        p_teleport(movecoord(coord, 1, 0, 0));
        p_delay(0);
        return;
    }

    if (lineofwalk(coord, movecoord(coord, 0, 0, 1)) = true) { // check south
        p_teleport(movecoord(coord, 0, 0, 1));
        p_delay(0);
        return;
    }

    if (lineofwalk(coord, movecoord(coord, 0, 0, -1)) = true) { // check north
        p_teleport(movecoord(coord, 0, 0, -1));
        p_delay(0);
        return;
    }
}

/**
 * Handle a Bloated Toad rolling to spawn a Chompy Bird
 *
 * last_int is used for state tracking:
 *  - how many times the toad has been rolled
 *  - whether the toad has spawned a Chompy Bird
 */
[ai_queue4,bloated_toad]
def_boolean $chompy_already_spawned = false;
if (last_int >= 10) {
    $chompy_already_spawned = true;
}

def_boolean $toad_should_explode = false;
if (last_int = 3 | last_int = 13) {
    $toad_should_explode = true;
}

def_int $next_state = calc(last_int + 1);

def_boolean $should_spawn_chompy = false;
if ($chompy_already_spawned = false & random(5) = 1) {
    $should_spawn_chompy = true;

    $next_state = calc($next_state + 10);
}

if ($toad_should_explode = true) {
    ~toad_explode();
} else {
    npc_queue(4, $next_state, 25);
}

if ($should_spawn_chompy = true) {
    ~spawn_chompy_bird(npc_coord, %quest_chompybird_baiter);
}

[proc,toad_explode]()
// TODO in OSRS this isn't sent with a height
spotanim_map(chompy_toad_exploding, npc_coord, 0, 30);

huntall(npc_coord, 1, 1);
while (.huntnext = true) {
    .mes("You're hit by bits of exploding toad!");

    .sound_synth(toad_burst, 0, 20);
    // is damage random per-player or per-toad?
    .queue(damage_player, calc(random(1) + 1), 0);
}

// The toad is being eaten by the Chompy
[ai_queue5,bloated_toad]
npc_delay(3);

// TODO do we need to check that the Chompy is still there and eating the toad?
//      should test on OSRS to confirm

npc_say("!!Croak!!");
npc_delay(2);
npc_del;
