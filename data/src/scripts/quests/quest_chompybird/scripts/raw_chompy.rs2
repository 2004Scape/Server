[opheldu,raw_chompy]
switch_obj (last_useitem)
{
    case cabbage, tomato, potato, equa_leaves, doogle_leaves :
        @quest_chompybird_add_ingredients_to_chompy_message;
    case default : ~displaymessage(^dm_default);
};


[label,quest_chompybird_add_ingredients_to_chompy_message]
// message taken from OSRS
~mesbox("You can only add ingredients when you're cooking a chompy bird. Ensure you have the seasonings you want to use in your inventory when cooking the chompy bird and you will use them automatically when cooking.");

[oplocu,ogre_spitroast]
if (stat(cooking) < 30) { // before obj check
    mes("You need a cooking level of 30 to use the spit roast.");
    return;
}

if (last_useitem ! raw_chompy) {
    ~displaymessage(^dm_default);
    return;
}

if (%chompybird_progress < ^chompybird_told_to_cook_chompy) {
    if(npc_find(coord, chompybird_rantz, 10, 0) = true) { // range from osrs
        if(%chompybird_progress = ^chompybird_player_killed_chompy) {
            ~chatnpc("<p,quiz>Hey, what' you's doin?");
            @rantz_show_chompy;
        }
        ~chatnpc("<p,angry>Hey, you..leave dat alone! You need to get da chompy before use dat.");
    } else {
        mes("Perhaps you'd better get permission before you use this?");
    }
    return;
}
if (%chompybird_progress = ^chompybird_told_to_cook_chompy) {
    @cook_chompy_quest;
}

if (%chompybird_progress = ^chompybird_chompy_cooked) {
    // todo what if the player no longer has the original chompy? Does it still auto-hand in?
    if(inv_total(inv, seasoned_chompy) = 0) {
        @cook_chompy_quest;
    }
    if (npc_find(loc_coord, chompybird_rantz, 10, 0) = true) {
        @hand_chompy_to_rantz;
    }
    return;
}

if(%chompybird_progress = ^chompybird_complete) {
    @cook_chompy_offquest;
}

~displaymessage(^dm_default);


[label,cook_chompy_offquest]
mes("You carefully place the chompy bird on the spit-roast.");
inv_del(inv, raw_chompy, 1);
// Temp note: dur updated
loc_change(ogre_spitroast_raw_chompy, 5);
loc_anim(spit_anim);
anim(human_cooking, 0);
sound_synth(spit_roast, 0, 0);
p_delay(2);
    
def_boolean $passes_roll = stat_random(stat(cooking), 200, 255);
if ($passes_roll = true) {
    mes("You start to cook the chompy... it takes some time.");
    // Temp note: dur updated
    loc_change(ogre_spitroast_cooked_chompy, 5);
    loc_anim(spit_anim);
    anim(human_cooking, 0);
    p_delay(2);
    anim(human_pickuptable, 0);
    mes("Eventually the chompy is cooked.");
    inv_add(inv, cooked_chompy, 1);
    stat_advance(cooking, 140);
} else {
    mes("You accidentally burn the chompy.");
    // Temp note: dur updated
    loc_change(ogre_spitroast_burnt_chompy, 5);
    loc_anim(spit_anim);
    anim(human_cooking, 0);
    p_delay(2);
    anim(human_pickuptable, 0);
    inv_add(inv, ruined_chompy, 1);
    p_delay(1);
}


[label,cook_chompy_quest]
def_int $bugs_ingredient = getbit_range(%chompybird_kills, ^chompybird_varbit_bugs_flavour_start, ^chompybird_varbit_bugs_flavour_end);
def_int $fycie_ingredient = getbit_range(%chompybird_kills, ^chompybird_varbit_fycie_flavour_start, ^chompybird_varbit_fycie_flavour_end);

if ($bugs_ingredient = 0) {
    ~mesbox("You need to find what Bugs wants on the chompy bird before you can cook it.");
    return;
}

if($fycie_ingredient = 0) {
    ~mesbox("You need to find what Fycie wants with her chompy bird before you can cook it.");
    return;
}

def_int $rantz_ingredient = getbit_range(%chompybird_kills, ^chompybird_varbit_rantz_flavour, ^chompybird_varbit_rantz_flavour);

def_boolean $has_rantz_ingredient = false;

def_string $rantz_ingredient_name;
def_string $bugs_ingredient_name;
def_string $fycie_ingredient_name;

if ($rantz_ingredient = 0)
{
    if (inv_total(inv, potato) > 0)
    {
        $has_rantz_ingredient = true;
    }

    $rantz_ingredient_name = "potato";
}
else if ($rantz_ingredient = 1)
{
    if (inv_total(inv, onion) > 0)
    {
        $has_rantz_ingredient = true;
    }
    
    $rantz_ingredient_name = "onion";
}

def_boolean $has_bugs_ingredient = false;

if ($bugs_ingredient = 1)
{
    if (inv_total(inv, equa_leaves) > 0)
    {
        $has_bugs_ingredient = true;
    }

    $bugs_ingredient_name = "equa leaves";
}
else if ($bugs_ingredient = 2)
{
    if (inv_total(inv, cabbage) > 0)
    {
        $has_bugs_ingredient = true;
    }

    $bugs_ingredient_name = "cabbage";
}

def_boolean $has_fycie_ingredient = false;

if ($fycie_ingredient = 1)
{
    if (inv_total(inv, tomato) > 0)
    {
        $has_fycie_ingredient = true;
    }

    $fycie_ingredient_name = "tomato";
}
else if ($fycie_ingredient = 2)
{
    if (inv_total(inv, doogle_leaves) > 0)
    {
        $has_fycie_ingredient = true;
    }

    $fycie_ingredient_name = "doogle leaves";
}

if ($has_rantz_ingredient = false | $has_bugs_ingredient = false | $has_fycie_ingredient = false) {
    ~mesbox("You don't have all the ingredients yet to cook the chompy bird for the ogre family.");
    ~mesbox("Remember what the Ogre family wanted? Rantz wanted <$rantz_ingredient_name>. Fycie wanted <$fycie_ingredient_name>. Bugs wanted <$bugs_ingredient_name>.");
    return;
}

mes("You carefully place the chompy bird on the spit-roast.");
inv_del(inv, raw_chompy, 1);
// Temp note: dur updated
loc_change(ogre_spitroast_raw_chompy, 5);
loc_anim(spit_anim);
anim(human_cooking, 0);
sound_synth(spit_roast, 0, 0);
p_delay(2);
    
def_boolean $passes_roll = stat_random(stat(cooking), 200, 255);
if ($passes_roll = true) {
    mes("You add the other ingredients and cook the food.");
    %chompybird_progress = ^chompybird_chompy_cooked;
    ~delete_chompy_ingredients($rantz_ingredient, $bugs_ingredient, $fycie_ingredient);
    // Temp note: dur updated
    loc_change(ogre_spitroast_cooked_chompy, 5);
    loc_anim(spit_anim);
    anim(human_cooking, 0);
    p_delay(2);
    anim(human_pickuptable, 0);
    mes("Eventually the chompy is cooked.");
    inv_add(inv, seasoned_chompy, 1);
    stat_advance(cooking, 142);
    p_delay(1);
    ~objbox(seasoned_chompy, "You use the <$rantz_ingredient_name>, <$bugs_ingredient_name> and the <$fycie_ingredient_name>|with the chompy bird to make a seasoned chompy.", 250, 0, divide(^objbox_height, 2));
} else {
    mes("You accidentally burn the chompy.");
    ~delete_chompy_ingredients($rantz_ingredient, $bugs_ingredient, $fycie_ingredient);
    // Temp note: dur updated
    loc_change(ogre_spitroast_burnt_chompy, 5);
    loc_anim(spit_anim);
    anim(human_cooking, 0);
    p_delay(2);
    anim(human_pickuptable, 0);
    inv_add(inv, ruined_chompy, 1);
    p_delay(1);
}

[proc,delete_chompy_ingredients](int $rantz_ingredient, int $bugs_ingredient, int $fycie_ingredient)
if ($rantz_ingredient = 0)
{
    inv_del(inv, potato, 1);
}
else if ($rantz_ingredient = 1)
{
    inv_del(inv, onion, 1);
}

if ($bugs_ingredient = 1)
{
    inv_del(inv, equa_leaves, 1);
}
else if ($bugs_ingredient = 2)
{
    inv_del(inv, cabbage, 1);
}

if ($fycie_ingredient = 1)
{
    inv_del(inv, tomato, 1);
}
else if ($fycie_ingredient = 2)
{
    inv_del(inv, doogle_leaves, 1);
}