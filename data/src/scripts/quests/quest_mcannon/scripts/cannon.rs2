[proc,cannon_belongs_to_player]()(boolean)
if (loc_coord = %mcannon_coord) {
    return(true);
}
return(false);

[proc,cannon_setup_random_coord]()(coord)
def_int $i = 0;
def_coord $coord = coord;
while ($i < 50) {
    switch_int (random(16)) {
        case 0 : $coord = movecoord(coord, -2, 0, 2);
        case 1 : $coord = movecoord(coord, -1, 0, 2);
        case 2 : $coord = movecoord(coord, 0, 0, 2);
        case 3 : $coord = movecoord(coord, 1, 0, 2);
        case 4 : $coord = movecoord(coord, 2, 0, 2);
        case 5 : $coord = movecoord(coord, 2, 0, -2);
        case 6 : $coord = movecoord(coord, 1, 0, -2);
        case 7 : $coord = movecoord(coord, 0, 0, -2);
        case 8 : $coord = movecoord(coord, -1, 0, -2);
        case 9 : $coord = movecoord(coord, -2, 0, -2);
        case 10 : $coord = movecoord(coord, -2, 0, -1);
        case 11 : $coord = movecoord(coord, -2, 0, 0);
        case 12 : $coord = movecoord(coord, -2, 0, 1);
        case 13 : $coord = movecoord(coord, 2, 0, 1);
        case 14 : $coord = movecoord(coord, 2, 0, 0);
        case 15 : $coord = movecoord(coord, 2, 0, -1);
    }
    // checks line of walk both ways in osrs
    if (lineofwalk($coord, coord) = true & lineofwalk(coord, $coord) = true) {
        return ($coord);
    }

    
    $i = add($i, 1);
}
return(null);

[opheld1,cannon_base]
if (%mcannon_coord ! null) {
    if (loc_find(%mcannon_coord, cannon) = true) {
        return;
    }
}
// https://oldschool.runescape.wiki/w/Update:Spirit_trees,_clues_%26_more!
// - "Cannons can no longer be setup within the Party room and can now be placed where the Party room used to be."
if (~inzone_coord_pair_table(party_room_zones, coord) = true) {
    mes("Party Pete won't be happy if you set up a cannon here."); // osrs
    return;
}
if (~inzone_coord_pair_table(bank_zones, coord) = true | ~in_duel_arena(coord) = true) { // guessing they dont let u set up at duel arena at all, esp with nomovement duels
    mes("You can't set up a cannon here."); // osrs
    return;
}
if (map_locaddunsafe(movecoord(coord, -1, 0, -1)) = true) {
    mes("There isn't enough space to set up here."); // osrs just checks sw coord for loc's
    return;
}
def_coord $center = coord;
if (map_blocked($center) = true | // center
    map_blocked(movecoord($center, 0, 0, 1)) = true | // north
    map_blocked(movecoord($center, 1, 0, 1)) = true | // north-east
    map_blocked(movecoord($center, 1, 0, 0)) = true | // east
    map_blocked(movecoord($center, 1, 0, -1)) = true | // south-east
    map_blocked(movecoord($center, 0, 0, -1)) = true | // south
    map_blocked(movecoord($center, -1, 0, -1)) = true | // south-west
    map_blocked(movecoord($center, -1, 0, 0)) = true) // west
{
    mes("There isn't enough space to set up here."); // osrs
    return;
}
def_coord $setupcoord = ~cannon_setup_random_coord;
// def_coord $setupcoord = map_findsquare(coord, 2, 2, ^map_findsquare_lineofwalk); // seems to be slightly diff than osrs
if ($setupcoord = null) {
    mes("There isn't enough space to set up here.");
    return;
}
~forcewalk2($setupcoord);

def_coord $origin = movecoord($center, -1, 0, -1); // south-west tile
%mcannon_coord = $origin;
// %mcannon_world = map_world;
%mcannon_ammo = 0;

facesquare($center);
anim(human_pickupfloor, 0);
inv_del(inv, cannon_base, 1);
loc_add($origin, cannon_base, 0, centrepiece_straight, 2500);
mes("You place the cannon base on the ground."); // https://youtu.be/TeQXQDaawO0?t=227

// ------- cannon base -------
[oploc1,cannon_base]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
%mcannon_coord = null;
mes("You pick up the cannon,");
mes("It's really heavy.");
sound_synth(pick, 0, 0);
inv_add(inv, cannon_base, 1);
loc_del(1);

[oplocu,cannon_base]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
if (last_useitem = cannon_stand) {
    anim(human_pickupfloor, 0);
    inv_del(inv, cannon_stand, 1);
    loc_add(%mcannon_coord, cannon_stand, 0, centrepiece_straight, 2500);
    mes("You add the stand.");
} else {
    ~displaymessage(^dm_default);
}
// --------------

// ------- cannon stand -------
[oploc1,cannon_stand]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
%mcannon_coord = null;
mes("You pick up the cannon,");
mes("It's really heavy.");
sound_synth(pick, 0, 0);
inv_add(inv, cannon_base, 1);
inv_add(inv, cannon_stand, 1);
loc_del(1);

[oplocu,cannon_stand]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
if (last_useitem = cannon_barrels) {
    anim(human_pickupfloor, 0);
    inv_del(inv, cannon_barrels, 1);
    loc_add(%mcannon_coord, cannon_barrels, 0, centrepiece_straight, 2500);
    mes("You add the barrels.");
} else {
    ~displaymessage(^dm_default);
}
// --------------

// ------- cannon barrels -------
[oploc1,cannon_barrels]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
%mcannon_coord = null;
mes("You pick up the cannon,");
mes("It's really heavy.");
sound_synth(pick, 0, 0);
inv_add(inv, cannon_base, 1);
inv_add(inv, cannon_stand, 1);
inv_add(inv, cannon_barrels, 1);
loc_del(1);

[oplocu,cannon_barrels]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!");
    return;
}
if (last_useitem = cannon_furnace) {
    anim(human_pickupfloor, 0);
    inv_del(inv, cannon_furnace, 1);
    loc_add(%mcannon_coord, cannon, 0, centrepiece_straight, 2500);
    settimer(cannon_decay, 2500);
    mes("You add the furnace.");
    // automatically starts spinning: https://youtu.be/TeQXQDaawO0?t=234
    // at https://youtu.be/WWyNTsMXjTE?t=26 the cannon doesnt auto rotate immediately 
    // but at https://youtu.be/WWyNTsMXjTE?t=219 the cannon does
    if (%mcannon_clock > 0) {
        settimer(cannon_rotate, 1);
    }   
} else {
    ~displaymessage(^dm_default);
}
// --------------

// ------- cannon -------
[oploc2,cannon]
if (~cannon_belongs_to_player = false) {
    mes("This is not your cannon."); // osrs
    return;
}
mes("You pick up the cannon,"); // https://youtu.be/TeQXQDaawO0?t=518
mes("It's really heavy.");
sound_synth(pick, 0, 0);
%mcannon_coord = null;
cleartimer(cannon_rotate);
cleartimer(cannon_decay);
if (inv_freespace(inv) < 4) {
    mes("You need 4 free inventory spaces to pick that up."); // osrs
    return;
}
inv_add(inv, cannon_base, 1);
inv_add(inv, cannon_stand, 1);
inv_add(inv, cannon_barrels, 1);
inv_add(inv, cannon_furnace, 1);

if (%mcannon_ammo > 0) {
    inv_add(inv, mcannonball, min(30, %mcannon_ammo));
}
%mcannon_ammo = 0;
loc_del(1);

[oploc1,cannon]
if (~cannon_belongs_to_player = false) {
    mes("That isn't your cannon!"); // https://youtu.be/aJDlEmyPpk8?t=140
    return;
}
if (gettimer(cannon_rotate) > 0) {
    mes("Your cannon is already firing."); // https://youtu.be/WWyNTsMXjTE?t=122
    return;
}
if (%mcannon_ammo < 1) {
    // current osrs reloads, but thats wrong for our version
    // https://oldschool.runescape.wiki/w/Update:Happy_Birthday!:
    // - "Left-clicking on your cannon will now let you reload it, even if it isn't currently firing."
    mes("Your cannon is out of ammo!"); // https://youtu.be/TeQXQDaawO0?t=239
    return;
}
settimer(cannon_rotate, 1);

[oplocu,cannon]
if (last_useitem = mcannonball) {
    if (~cannon_belongs_to_player = false) {
        mes("This is not your cannon."); // osrs
        return;
    }
    if (%mcannon_ammo >= 30) {
        mes("The cannon is already full of ammo."); // osrs
        return;
    }
    def_int $count = sub(30, max(%mcannon_ammo, 0));
    mes("You load the cannon with <tostring($count)> cannonballs."); // https://youtu.be/TeQXQDaawO0?t=239
    %mcannon_ammo = add(%mcannon_ammo, $count);
    inv_del(inv, mcannonball, $count);
} else {
    ~displaymessage(^dm_default);
}
// --------------


[timer,cannon_rotate]
if (loc_find(%mcannon_coord, cannon) = false) {
    cleartimer(cannon_rotate);
    return;
}
def_coord $center = movecoord(loc_coord, 1, 0, 1);
def_coord $close_range = movecoord($center, 0, 0, 3);
def_coord $medium_range = movecoord($center, 0, 0, 7);
def_coord $long_range = movecoord($center, 0, 0, 14);
// start north, going clockwise
if (%mcannon_clock = 0) {
    // automatically starts spinning: https://youtu.be/TeQXQDaawO0?t=234
    // at https://youtu.be/WWyNTsMXjTE?t=26 the cannon doesnt auto rotate immediately 
    // but at https://youtu.be/WWyNTsMXjTE?t=219 the cannon does
    if (%mcannon_ammo < 1) {
        mes("Your cannon is out of ammo!"); // https://youtu.be/TeQXQDaawO0?t=239
        cleartimer(cannon_rotate);
        return;
    }
    $close_range = movecoord($center, 0, 0, 3);
    $medium_range = movecoord($center, 0, 0, 7);
    $long_range = movecoord($center, 0, 0, 14);
    loc_anim(cannon_north_west);
} else if (%mcannon_clock = 1) {
    $close_range = movecoord($center, 2, 0, 2);
    $medium_range = movecoord($center, 5, 0, 5);
    $long_range = movecoord($center, 12, 0, 12);
    loc_anim(cannon_north);
} else if (%mcannon_clock = 2) {
    $close_range = movecoord($center, 3, 0, 0);
    $medium_range = movecoord($center, 7, 0, 0);
    $long_range = movecoord($center, 14, 0, 0);
    loc_anim(cannon_north_east);
} else if (%mcannon_clock = 3) {
    $close_range = movecoord($center, 2, 0, -2);
    $medium_range = movecoord($center, 5, 0, -5);
    $long_range = movecoord($center, 12, 0, -12);
    loc_anim(cannon_east);
} else if (%mcannon_clock = 4) {
    $close_range = movecoord($center, 0, 0, -3);
    $medium_range = movecoord($center, 0, 0, -7);
    $long_range = movecoord($center, 0, 0, -14);
    loc_anim(cannon_south_east);
} else if (%mcannon_clock = 5) {
    $close_range = movecoord($center, -2, 0, -2);
    $medium_range = movecoord($center, -5, 0, -5);
    $long_range = movecoord($center, -12, 0, -12);
    loc_anim(cannon_south);
} else if (%mcannon_clock = 6) {
    $close_range = movecoord($center, -3, 0, 0);
    $medium_range = movecoord($center, -7, 0, 0);
    $long_range = movecoord($center, -14, 0, 0);
    loc_anim(cannon_south_west);
} else if (%mcannon_clock = 7) {
    $close_range = movecoord($center, -2, 0, 2);
    $medium_range = movecoord($center, -5, 0, 5);
    $long_range = movecoord($center, -12, 0, 12);
    loc_anim(cannon_west);
}
%mcannon_clock = modulo(add(%mcannon_clock, 1), 8);

~player_combat_stat;

// check close range
npc_huntall($close_range, 1, 1);
while (npc_huntnext = true) {
    if (lineofsight($center, npc_coord) = true) {
        jump(cannon_fire);
    }
}

// check med range
npc_huntall($medium_range, 2, 1);
while (npc_huntnext = true) {
    if (lineofsight($center, npc_coord) = true) {
        jump(cannon_fire);
    }
}
// check long range
npc_huntall($long_range, 5, 1);
while (npc_huntnext = true) {
    if (lineofsight($center, npc_coord) = true) {
        jump(cannon_fire);
    }
}


[label,cannon_fire]
if (%mcannon_ammo < 1) {
    return;
}
if (~npc_is_attackable = false) {
    return;
}
if (npc_stat(hitpoints) = 0) {
    return;
}
if (~player_in_combat_check = false) { // https://youtu.be/TeQXQDaawO0?t=247
    return;
}
// map_projanim	id=53, starttime=0, endtime=40, angle=2, progress=11, startheight=36, endheight=35
// (coord $coord, npc_uid $uid, spotanim $spotanim, int $startheight, int $endheight, int $delay, int $angle, int $length, int $offset, int $step)(int)
def_int $duration = ~npc_projectile(movecoord(%mcannon_coord, 1, 0, 1), npc_uid, spotanim_53, 36, 35, 0, 2, 40, 0, 13);
%mcannon_ammo = sub(%mcannon_ammo, 1);
sound_synth(mcannon_fire, 0, 0);
def_int $damage = 0;
if (~player_npc_hit_roll(%damagetype) = true) {
    $damage = randominc(min(30, npc_param(max_dealt)));
    $damage = min($damage, npc_stat(hitpoints));
    stat_advance(ranged, multiply(20, $damage));
}

npc_heropoints($damage);
~npc_retaliate(divide($duration, 30));
npc_queue(2, $damage, divide($duration, 30));

[timer,cannon_decay]
mes("Your cannon has decayed."); // https://runescape.wiki/w/Update:Patch_Notes_(6_May_2009)
cleartimer(cannon_decay);
cleartimer(cannon_rotate);
