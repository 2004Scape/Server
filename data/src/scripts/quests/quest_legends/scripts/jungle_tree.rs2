[oploc1,_jungle_tree] @start_chop_jungle;
[oploc1,_jungle_bush] @start_chop_jungle;
[oploc3,_jungle_tree] @chop_jungle;
[oploc3,_jungle_bush] @chop_jungle;

// the success rates in here don't feel quite right, probably need tweaking
[label,start_chop_jungle]
if (inv_total(inv, thkaramjamap) = 0 & inv_total(inv, thkaramjamapcomp) = 0 & %legends_progress < ^legends_complete) {
    ~mesbox("You'll get lost in this jungle without a map. You decide not to go any further.");
    return;
}
def_namedobj $axe = ~woodcutting_axe_checker(false);
if ($axe = null) {
    // OSRS message
    ~mesbox("You'll need an axe to get through this rough jungle. You don't think it would be a good idea to continue without one you've got the level to use.");
    if (~inzone_coord_pair_table(kharazi_dense_jungle, coord) = true) {
        @dense_jungle_escape;
    }
    return;
}
if (inv_total(inv, machette) = 0 & inv_total(worn, machette) = 0) {
    // Says bush even for tree
    ~mesbox("You need a machete to cut your way through this dense jungle bush.");
    if (~inzone_coord_pair_table(kharazi_dense_jungle, coord) = true) {
        @dense_jungle_escape;
    }
    return;
}
def_int $bowl_water_count = inv_total(inv, goldbowl_water);
def_int $bowl_pure_water_count = inv_total(inv, goldbowl_pure);
def_int $blessed_bowl_water_count = inv_total(inv, goldbowlbless_water);
def_int $blessed_bowl_pure_water_count = inv_total(inv, goldbowlbless_pure);

if (calc($bowl_water_count + $bowl_pure_water_count + $blessed_bowl_water_count + $blessed_bowl_pure_water_count) > 0) {
        mes("The heat in this jungle is terrific.");
        mes("The water from your golden bowl evaporates.");
        if ($bowl_water_count > 0) {
            inv_del(inv, goldbowl_water, $bowl_water_count);
            inv_add(inv, goldbowl_empty, $bowl_water_count);
        }
        if ($bowl_pure_water_count > 0) {
            inv_del(inv, goldbowl_pure, $bowl_pure_water_count);
            inv_add(inv, goldbowl_empty, $bowl_pure_water_count);
        }
        if ($blessed_bowl_water_count > 0) {
            inv_del(inv, goldbowlbless_water, $blessed_bowl_water_count);
            inv_add(inv, goldbowlbless_empty, $blessed_bowl_water_count);
        }
        if ($blessed_bowl_pure_water_count > 0) {
            inv_del(inv, goldbowlbless_pure, $blessed_bowl_pure_water_count);
            inv_add(inv, goldbowlbless_empty, $blessed_bowl_pure_water_count);
        }
    }
db_find(woodcutting_trees:tree, loc_type);
def_dbrow $data = db_findnext;
if ($data = null) {
    ~displaymessage(^dm_default);
    return;
}

if (%action_delay < map_clock) {
    if (loc_category = jungle_bush) {
        %action_delay = calc(map_clock + 3);
        %skill_anim = calc(map_clock + 1);
    } else {
        %action_delay = calc(map_clock + 5);
        %skill_anim = calc(map_clock + 5);
    }
    p_oploc(1);
} else {
    if (loc_category = jungle_bush) {
        mes("You swing your machete at the jungle plant.");
    }
    else {
        anim(struct_param(oc_param($axe, woodcutting_struct), skill_anim), 0);
        mes("You swing your axe at the tree.");
    }

    @chop_jungle;
}

[label,chop_jungle]
// check if player has axe and level, ifso return best axe
def_namedobj $axe = ~woodcutting_axe_checker(true);
if ($axe = null) {
    return;
}
// find tree in db
db_find(woodcutting_trees:tree, loc_type);
def_dbrow $data = db_findnext;
if ($data = null) {
    ~displaymessage(^dm_default);
    return;
}
def_namedobj $product = db_getfield($data, woodcutting_trees:product, 0);
// play animation every 4 ticks, 2t for jungle bush
// make sure this is before the skill clock check, else theres a few cases where the skill anim
// gets redefined after skill(anim, null)
if (%skill_anim <= map_clock) {
    if (loc_category = jungle_bush) {
        %skill_anim = calc(map_clock + 2);
        anim(human_machette_chop, 0);
    }
    else {
        %skill_anim = calc(map_clock + 4);
        anim(struct_param(oc_param($axe, woodcutting_struct), skill_anim), 0);
    }
}
// sounds plays every tick for jungle bush, not at all for the tree
if(loc_category = jungle_bush) {
    sound_synth(woodchop_4, 0, 10);
}
// this is here because theres always a tick where no mes("You swing your axe at the tree.") when spam clicking on tree
// this tick is when you get you get a roll. so that means that skill clock is set next tick after roll is given
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
}
if (%action_delay = map_clock) {
    // get lows and highs
    if(loc_category = jungle_bush) sound_synth(woodchop_4, 0, 10); // double sound
    def_int $respawnrate = db_getfield($data, woodcutting_trees:respawnrate, 0);
    def_int $deplete_chance = 4; // 3/4 chance to deplete - this is a guess
    // axe does not seem to have any effect, wc level does? (need more data)
    if (stat_random(woodcutting, 70, 233) = true) {
        // Jungle trees/bushes just silently fail to give logs/xp if no space
        // There's also a chance to receive no logs. This seems to be about a 50% chance (tested w/100 rolls on OSRS)
        if (inv_freespace(inv) > 0 & random(2) = 0) {
            mes("You get some <lowercase(oc_name($product))>.");
            stat_advance(woodcutting, db_getfield($data, woodcutting_trees:productexp, 0));
            inv_add(inv, $product, 1);
        }
        if (random($deplete_chance) <= 2) {
            $respawnrate = ~scale_by_playercount($respawnrate);
            loc_change(loc_param(next_loc_stage), $respawnrate);
            // set skill anim so it doesnt continue after depletion
            anim(null, 0);
            def_coord $dest = coord;
            // If you chop jungle that you're standing on, you don't move forward
            if (coord ! loc_coord) {
                $dest = ~movecoord_indirection(coord, ~coord_direction(coord, loc_coord), 2);
            }
            else {
                mes("This way is blocked off, no chance to get through here!");
                return;
            }

            // todo: test on OSRS
            if (map_blocked($dest) = true & ~jungle_at_dest($dest) = false) {
                mes("This way is blocked off, no chance to get through here!");
            }
            else {
                if (loc_category = jungle_tree) {
                    mes("You hack your way through the tree.");
                }
                else {
                    mes("You hack your way through the jungle bush.");
                }
                // Same message even when leaving the jungle
                mes("You move deeper into the jungle.");
                p_teleport($dest);
                p_delay(0);
            }
            return;
        } 
    }
}
p_oploc(3);

[proc,jungle_at_dest](coord $dest)(boolean)
if (.loc_find($dest, jungle_bush_1) = true | .loc_find($dest, jungle_bush_2) = true | 
    .loc_find($dest, jungle_tree_1) = true | .loc_find($dest, jungle_tree_2) = true | 
    .loc_find($dest, jungle_tree_3) = true) {
        return (true);
}
return (false);

[label,dense_jungle_escape]
~mesbox("It looks like you're lost in the jungle!|Would you like to try and scrabble out?");
def_int $op = ~p_choice2_header("Yes, I'll scrabble out of this jungle.", 1, "No, I think I can find my own way out.", 2, "Scrabble out of jungle?");
if($op = 2) {
    mes("You decide to stay where you are.");
    return;
}
if(inzone(0_45_45_50_57,0_45_45_61_61,coord) = true) p_teleport(0_45_45_57_63);
else if(inzone(0_44_45_42_54,0_44_45_57_59,coord) = true) p_teleport(0_44_45_50_61);
else if(inzone(0_43_45_37_55,0_43_45_50_61,coord) = true) p_teleport(0_43_45_43_62);
else p_teleport(0_44_45_4_61); // other 2 zones tele to same pos
mes("You scrabble out of the jungle.");
mes("You're scratched to pieces by the dense jungle trees,");
mes("but at least you're alive and out of the jungle.");
~damage_self(1);