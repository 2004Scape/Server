[oploc1,loc_3309]
def_int $dir; 
def_coord $end;
if(coordz(coord) > coordz(loc_coord)) {
    $dir = ^exact_south;
    $end = movecoord(loc_coord, 0, 0, -1);
} else if(coordz(coord) < coordz(loc_coord)) {
    $dir = ^exact_north;
    $end = movecoord(loc_coord, 0, 0, 1);
} else if(coordx(coord) > coordx(loc_coord)) {
    $dir = ^exact_west;
    $end = movecoord(loc_coord, -1, 0, 0);
} else {
    $dir = ^exact_east; 
    $end = movecoord(loc_coord, 1, 0, 0);
}
mes("You climb onto the rock...");
facesquare(loc_coord);
if(stat_random(stat(agility), 95, 330) = false) {
    p_delay(0);
    anim(seq_846, 0);
    mes("...but you slip back down.");
    ~damage_self(3); // fixed dmg
    return;
}
mes("...and step down the other side.");
~agility_exactmove(human_walk_fence_north, 0, 1, coord, $end, 0, 60, $dir, true); // probably same seq for all directions

[oploc1,loc_3263]
mes("You try to cross the swamp...");
p_teleport(loc_coord);
p_delay(1);
say("Gulp!");
~bas_set_all(human_drowning);
p_delay(2);
mes("...but you are pulled below.");
p_delay(0);
~update_bas;
p_teleport(0_38_150_53_49);
anim(seq_534, 0);
say("Aargh!");
p_delay(1);
~damage_self(calc((stat(hitpoints) * 15) / 100));

[oploc1,loc_3265]
mes("You climb up the pile of mud...");
mes("It leads into darkness, the stench is unbearable.");
p_delay(3);
p_teleport(0_38_151_50_51);
p_delay(1);
mes("You surface by the swamp, covered in muck.");

[oploc1,loc_3236]
~mesbox("The other end of the pipe is blocked by a grill.");

[oploc1,loc_3235]
p_arrivedelay;
mes("You open the grate.");
loc_change(loc_3236, 9);
~agility_exactmove(human_pipesqueeze, 30, 3, coord, movecoord(coord, 0, 0, 3), 30, 126, ^exact_north, true);
sound_synth(squeeze_in, 0, 0);
mes("You crawl through the pipe.");
~change_merged_loc(movecoord(coord, 0, 0, 1));
~agility_exactmove(human_pipesqueeze, 30, 3, coord, movecoord(coord, 0, 0, 3), 30, 126, ^exact_north, true);
mes("You hear the grate slam shut behind you.");
stat_advance(agility, 30);
sound_synth(squeeze_in, 0, 0);
sound_synth(grate_close, 0, 0);

[oplocu,loc_2275]
if(last_useitem = rope & loc_find(0_38_151_28_35, loc_2276) = true) {
    @upass_rock_ropeswing;
}
~displaymessage(^dm_default);

[oplocu,loc_2276]
if(last_useitem = rope) {
    @upass_rock_ropeswing;
}
~displaymessage(^dm_default);

[label,upass_rock_ropeswing]
def_coord $start_pos = 0_38_151_30_35;
p_delay(0);
if(%upass_rockswing_used >= map_clock) {
    // https://youtu.be/ZxF473zUZfQ?si=LcCRb0zeRxdtWay_&t=438
    ~mesbox("The rock is being used.");
    return;
}
%upass_rockswing_used = calc(map_clock + 5);
~forcemove($start_pos);
p_delay(1);
facesquare(movecoord(coord, 1, 0, 0));
mes("You tie the rope to the rock...");
anim(seq_775, 0);
p_delay(0);
inv_del(inv, rope, 1);
loc_change(loc_2273, 4);
p_delay(0);
// https://youtu.be/zGVrFETj96E?si=-LiJOUm_2GMCx7VU&t=144
if(stat_random(stat(agility), 100, 410) = false) {
    mes("You try to swing but fall in to the darkness.");
    p_teleport(0_38_150_53_49);
    say("Aargh!");
    p_delay(1);
    ~damage_self(calc((stat(hitpoints) * 15) / 100));
    mes("You've lost your rope.");
    return;
}
loc_anim(rope_swing);
~agility_exactmove(human_ropeswing, 20, 0, $start_pos, movecoord($start_pos, 4, 0, 0), 45, 70, ^exact_east, false);
mes("You skillfully swing across.");
mes("The rope gets tangled in some stalagmites.");
p_delay(1);
mes("You've lost your rope.");

[oploc1,loc_2274]
def_coord $start_pos = movecoord(loc_coord, 4, 0, 0);
def_int $delay = distance(coord, $start_pos);
if(coordz(coord) < coordz($start_pos)) {
    mes("You cannot do that from here.");
    return;
}
p_delay(0);
p_teleport($start_pos);
if(%barb_ropeswing_used >= map_clock) {
    ~mesbox("The rope swing is being used");
    return;
}
%barb_ropeswing_used = calc(map_clock + 3);
p_delay($delay);
loc_anim(rope_swing);
~agility_exactmove(human_ropeswing, 20, 1, $start_pos, movecoord($start_pos, -5, 0, 0), 45, 70, ^exact_west, false);
mes("You skillfully swing across.");

[debugproc,st]
mes("test");
settimer(upass_trap, 1);

[oploc1,loc_3234]
// https://youtu.be/PZvZhKg-T9A?si=mupz2AP54KUFKJzw&t=733
~mesbox("The markings appear to be holes in the wall... It's a trap!");
def_int $choice = ~p_choice2_header("Yes, I'll give it a go.", 1, "No thanks, I'll leave it alone.", 2, "Do you want to try and disarm it?");
if($choice = 2) {
    return;
}
if_close;
mes("You try to disarm the trap...");
anim(human_pickpocket, 0);
sound_synth(lockeddoor, 0, 0);
p_delay(2); // 2 ticks
// TODO: check these numbers
if(stat_random(stat(thieving), 90, 410) = false) {
    mes("...and fail, activating the trap!");
    loc_anim(seq_459);
    say("Ouch!");
    ~damage_self(calc(((stat(hitpoints) * 10) / 100) + 1)); // unlike activating, this doesn't seem to queue
    return;
}
mes("...and succeed, you quickly walk past.");
if(coordx(coord) > coordx(loc_coord)) {
    ~forcemove(movecoord(coord, -2, 0, 0));
} else {
    ~forcemove(movecoord(coord, 2, 0, 0));
}

// these traps both appear to run on a softtimer (and the damage is strongqueued which will if_close) on OSRS
// since neither function existed on RS2 launch we will assume regular timer
[timer,upass_trap]
if (loc_find(coord, loc_3234) = true | loc_find(movecoord(coord, 0, 0, -1), loc_3234) = true) {
    loc_anim(seq_459);
    say("Ouch!");
    queue(damage_player, 0, calc(((stat(hitpoints) * 10) / 100) + 1));
} else if (loc_find(coord, loc_3230) = true) {
    if(loc_find(movecoord(loc_coord, -1, 0, 0), loc_3232) = true | loc_find(movecoord(loc_coord, 0, 0, -1), loc_3232) = true) loc_anim(seq_462);
    say("Ouch!");
    queue(damage_player, 0, calc(((stat_base(hitpoints) * 8) / 100) + 1));
    world_delay(1);
    loc_anim(seq_463);
}

[oploc1,loc_3230]
~mesbox("The rock appears to move slightly as you touch it...|It's a trap!|You don't see any way to disarm it,|maybe you can find a way to cross over it...");

[oplocu,loc_3230]
if(last_useitem = plank) {
    mes("You place the plank across the flat rock...");
    anim(human_pickupfloor, 0);
    sound_synth(put_down, 0, 0);
    p_delay(1);
    mes("...and quickly walk over.");
    loc_del(4);
    if(coordz(coord) > coordz(loc_coord)) {
        loc_add(loc_coord, loc_3231, 0, grounddecor, 4);
        ~forcemove(movecoord(loc_coord, 0, 0, -1));
    } else if(coordz(coord) < coordz(loc_coord)) {
        loc_add(loc_coord, loc_3231, 0, grounddecor, 4);
        ~forcemove(movecoord(loc_coord, 0, 0, 1));
    } else if(coordx(coord) > coordx(loc_coord)) {
        loc_add(loc_coord, loc_3231, 1, grounddecor, 4);
        ~forcemove(movecoord(loc_coord, -1, 0, 0));
    } else {
        loc_add(loc_coord, loc_3231, 1, grounddecor, 4);
        ~forcemove(movecoord(loc_coord, 1, 0, 0));
    }
}

[oploc1,loc_3339]
~mesbox("The rock appears to move slightly as you touch it... It's a trap!");
def_int $choice = ~p_choice2_header("Yes, I'll give it a go.", 1, "No thanks, I'll leave it alone.", 2, "Do you want to try and disarm it?");
if($choice = 2) {
    return;
}
if_close;
mes("You try to disarm the trap...");
anim(human_pickpocket, 0);
sound_synth(lockeddoor, 0, 0);
p_delay(2); // 2 ticks
// TODO: check these numbers
if(stat_random(stat(thieving), 90, 410) = false) {
    mes("...and fail, activating the trap!");
    @upass_orboflight_trap;
}
if(inv_freespace(inv) = 0 | inv_total(inv, obj_1481) > 0 | testbit(%upass_map_mechanisms, oc_param(obj_1481, orb_bit)) = true) {
    mes("...and succed, you hear it resetting after a few seconds.");
    return;
}
inv_add(inv, obj_1481, 1);
//if(obj_find(loc_coord, obj_2529) = true) obj_del; pull main lol
if(loc_find(loc_coord, loc_3361) = true) loc_del(48); // 48t in rs3
mes("...and succeed long enough to take the Orb.");

[oploc1,loc_3238]
mes("You put your foot on the ledge and try to edge across...");
def_coord $dest = 0_37_150_6_38;
def_seq $seq = human_ledge_walk_right;
if(coordz(coord) < coordz(loc_coord)) {
    $seq = human_ledge_walk_left;
    $dest = movecoord($dest, 0, 0, 6);
}
anim(human_ledge_on_left, 0);
~agility_force_move(0, $seq, 0_37_150_6_42);
if(stat_random(stat(agility), 210, 260) = false) {
    anim(human_sidestep_fall, 0);
    mes("You fall in to the rat pit.");
    p_delay(0);
    p_exactmove(coord, movecoord(coord, -2, 0, 0), 0, 12, ^exact_north);
    p_delay(0);
    ~damage_self(calc(((stat(hitpoints) * 15) / 100) + 1));
    sound_synth(human_hit2, 0, 20);
    p_delay(0);
    return;
}
~agility_force_move(0, $seq, $dest);
if(coordz(coord) > coordz(loc_coord)) {
    p_teleport(movecoord(coord, 1, 0, 0));
    p_delay(0);
}
