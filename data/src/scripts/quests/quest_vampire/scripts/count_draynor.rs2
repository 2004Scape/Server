[ai_queue3,count_draynor](int $arg) // do nothing
[ai_queue4,count_draynor](int $arg) gosub(npc_death);
[ai_opplayer2,count_draynor] @count_draynor_attack;

[ai_queue2,count_draynor](int $damage)
~npc_default_damage($damage);
if (npc_stat(hitpoints) = 0) {
    if (npc_findhero = true) {
        if (p_finduid(uid) = true) {
            @count_draynor_use_stake;
        }
    }
    npc_statheal(hitpoints, 1, 0);
}

[label,count_draynor_attack]
gosub(npc_default_attack);
if (inv_total(inv, garlic) > 0 & random(16) = 0) {
    // TODO garlic effects
    mes("The vampire seems to weaken.");
}

[label,count_draynor_use_stake]
if (inv_total(inv, stake) = 0) {
    mes("The vampire seems to regenerate!");
    npc_statheal(hitpoints, npc_basestat(hitpoints), 0);
    npc_setmode(opplayer2);
    return;
}
if (inv_total(inv, hammer) = 0) {
    mes("You're unable to push the stake far enough in!");
    mes("The vampire seems to regenerate!");
    npc_statheal(hitpoints, npc_basestat(hitpoints), 0);
    npc_setmode(opplayer2);
    return;
}
p_delay(1);
mes("You hammer the stake into the vampire's chest!");
inv_del(inv, stake, 1);
anim(human_stake, 0);
npc_setmode(none);
npc_queue(4, 0, 0);
queue(quest_vampire_complete, 3);

[ai_timer,count_draynor]
if (finduid(%npc_attacking_uid) = true) {
    if (npc_range(coord) > 10 | coordy(coord) ! coordy(npc_coord)) {
        npc_del;
    }
}