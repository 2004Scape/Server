[oploc1,loc_2216]
~mesbox("You see a broken cart has been placed here.|You suspect it's intended to keep people out."); // OSRS lb

[oploc2,loc_2216]
if(coordx(coord) <= coordx(loc_coord)) {
    mes("You nimbly jump from one side of the cart...");
    mes("...to the other and climb down again.");
    p_telejump(movecoord(loc_coord, 3, 0, 1));
    return;
}
~mesbox("You approach the cart and see undead creatures gathering by the village gates. There is a note attached to the cart. The note says,|@red@:: Danger :: Deadly green mist DO NOT ENTER IF YOU @red@VALUE YOUR LIFE!");
if(npc_find(coord, npc_500, 8, 0) = true) {
    if(random(2) = 0) ~chatnpc("<p,shock>Hey, move away from the cart please!|It's unsafe to go in there."); // chatnpc_specific in OSRS but chatnpc on RS3
    else ~chatnpc("<p,shock>You must be a maniac to go in there!|The whole place is swarming with zombies!");
}
~mesbox("It looks as if you can climb across the cart. Would you like to try?");
switch_int(~p_choice2("Yes, I am very nimble and agile!", 1, "No, I am happy where I am thanks!", 2)) {
    case 1:
        mes("You nimbly jump from one side of the cart...");
        mes("...to the other and climb down again.");
        p_telejump(movecoord(loc_coord, -1, 0, 1));
    case 2:
        if_close;
        mes("You think better of clambering over the cart, you might get dirty.");
        p_delay(2);
        say("I'd probably have just scraped my knees up as well.");
}

[oploc1,_shilo_metalgate]
if(coordx(coord) < coordx(loc_coord)) {
    p_delay(1);
    p_teleport(loc_coord);
    ~shilo_metalgates_open;
    return;
}
~mesbox("The gate feels very cold to your touch! Are you sure you want to go through?");
switch_int(~p_choice2("Yes, I am very nimble and agile!", 1, "No, actually, I have a bad feeling about this!", 2)) {
    case 1:
        if_close;
        mes("The gates slowly begin to open...");
        p_delay(1); // 1t
        mes("Suddenly some Zombies grab you and start dragging you inside!");
        settimer(shilo_mist_timer, 16);
        ~shilo_metalgates_open;
        ~forcemove(0_44_46_54_9);
    case 2:
        if_close;
        mes("You drag your quivering body away from the gates.");
        p_delay(2); // 2t
        mes("You look around, but you don't think anyone saw you.");
}

[timer,shilo_mist_timer]
mes("A green thick mist rises from the ground and starts choking you.");
cleartimer(shilo_mist_timer);
// sound_synth swamp gas
@shilo_greenmist(coord, 0);

[label,shilo_greenmist](coord $mist_coord, int $counter)
if($counter >= 4) {
    return;
}
spotanim_map(spotanim_184, $mist_coord, 124, 3);
huntall($mist_coord, 1, 0);
while (huntnext = true) {
    queue(damage_player, 0, ~random_range(2,3));
}
world_delay(3); // might be npc_queue on a zombie or something
@shilo_greenmist($mist_coord, calc($counter + 1));

[proc,shilo_metalgates_open]
loc_findallzone(coord);
while(loc_findnext = true) {
    if(loc_category = shilo_metalgate) {
            def_coord $central_coord = loc_coord;
            def_int $orig_angle = loc_angle;
            loc_del(2);
            if(loc_type = loc_2259) {
                loc_add(movecoord($central_coord, -1, 0, 0), loc_1562, 3, loc_shape, 2);
                loc_add(movecoord($central_coord, -1, 0, 1), loc_1563, 1, loc_shape, 2);
            }
            loc_add($central_coord, loc_83, $orig_angle, loc_shape, 2);
            sound_synth(grate_open, 0, 0);
    }
}

[oploc1,_shilo_woodengate]
mes("The gate won't open.");

[oploc2,loc_2237]
if(loc_find(0_45_48_37_18, loc_2240) = true) {
    mes("The trees are already pulled apart revealing some doors.");
    return;
}
mes("You search the palm trees...");
mes("...and reveal an ancient doorway set into the side of the hill!");
if(loc_find(0_45_48_37_18, loc_2244) = true & .loc_find(0_45_48_36_18, loc_2245) = true) {
    loc_change(loc_2240, ^max_32bit_int);
    .loc_change(loc_2241, ^max_32bit_int);
    %varp_117 = setbit(%varp_117, 0);
}
// for w/e reason it handles despawn with a player timer
settimer(hide_rashiliyia_doors, 50);

[timer,hide_rashiliyia_doors]
if(loc_find(0_45_48_37_18, loc_2240) = true & .loc_find(0_45_48_36_18, loc_2241) = true) {
    loc_change(loc_2244, ^max_32bit_int);
    .loc_change(loc_2245, ^max_32bit_int);
    %varp_117 = clearbit(%varp_117, 0);
    if(distance(.loc_coord, coord) <= 2 | distance(loc_coord, coord) <= 2) mes("The trees spring back into place and hide the doors again.");
}

[proc,rashiliyia_door_logout]
if(testbit(%varp_117, 0) = true) {
    if(loc_find(0_45_48_37_18, loc_2240) = true) loc_change(loc_2244, ^max_32bit_int);
    if(loc_find(0_45_48_36_18, loc_2241) = true) loc_change(loc_2245, ^max_32bit_int);
    %varp_117 = clearbit(%varp_117, 0);
}

[oploc1,_rashiliyia_tomb_door]
~mesbox("There seems to be some sort of recepticle on the door.|Perhaps it needs a key?");

[oploc2,_rashiliyia_tomb_door]
~mesbox("Examining the door, you see that it has a very|strange lock. You're shocked to find that it seems to|be made out of bone!"); // double spaces where the linebreaks are here in OSRS

[oploc1,loc_2217]
~mesbox("It just looks like some bumpy ground.");

[oploc2,loc_2217]
~mesbox("It just looks like some bumpy ground.");

[oploc1,loc_2231]
def_int $z_dist = -4;
stat_advance(agility, 10);
if(coordx(coord) = coordx(loc_coord)) {
    mes("You can't do that from here.");
    return;
}
if(coordx(coord) > coordx(loc_coord)) {
    if(stat(agility) < 15) { // req is only checked on one side
        mes("You need an Agility level of at least 15 to climb these rocks.");
        return;
    }
    p_delay(0);
    ~agility_force_move(0, seq_737, movecoord(coord, -2, 0, 0));
    // stumble loop on both fails
    if(stat_random(stat(agility), 125, 250) = false) {
        ~agility_exactmove(seq_739, 0, 1, coord, movecoord(coord, 2, 0, 0), 0, 50, ^exact_west, false);
        anim(null, 0);
        mes("You fall and hurt yourself.");
        say("Ouch");
        ~damage_self(calc(((stat(hitpoints) * 5) / 100) + 1));
        ~damage_self(calc(((stat(hitpoints) * 5) / 100) + 1));
        return;
    }
    ~agility_force_move(0, seq_737, movecoord(coord, -2, 0, 0));
} else if (coordx(coord) < coordx(loc_coord)) {
    ~agility_exactmove(human_rock_climb, 15, 0, coord, movecoord(coord, 4, 0, 0), 0, 120, ^exact_west, false);
    if(stat_random(stat(agility), 125, 250) = false) {
        anim(seq_739, 0);
        p_delay(1);
        anim(null, 0);
        mes("You fall and hurt yourself.");
        say("Ouch");
        ~damage_self(calc(((stat(hitpoints) * 5) / 100) + 1));
        ~damage_self(calc(((stat(hitpoints) * 5) / 100) + 1));
        return;
    }
    p_delay(1);
    anim(null, 0);
}

[zone,0_43_46_24_32] settimer(cairn_island_bridge, 3);
[zoneexit,0_43_46_24_32] cleartimer(cairn_island_bridge);

[timer,cairn_island_bridge]
if(inzone(0_43_46_24_35, 0_43_46_29_35, coord) = true) {
    if(stat_random(stat(agility), 125, 250) = false) {
        // fall
        mes("You fall!");
        p_stopaction;
        cleartimer(cairn_island_bridge);
        ~set_walkbas(human_sidestep_fall);
        // stumble_loop, 10
        facesquare(movecoord(coord, 0, 0, -2));
        p_delay(0);

        ~set_walkbas(seq_766);
        if(coord = 0_43_46_24_35) p_teleport(movecoord(coord, 1, 0, -1));
        else p_teleport(movecoord(coord, -1, 0, -1));
        say("Ahhhhhhhhhh!");
        p_delay(0);

        say("Choke!");
        spotanim_map(watersplash, coord, 0, 3);
        sound_synth(pool_plop, 0, 0);
        bas_readyanim(seq_773);
        bas_turnonspot(seq_773);
        bas_walk_f(human_swim);
        bas_walk_b(human_swim);
        bas_walk_l(human_swim);
        bas_walk_r(human_swim);
        buildappearance(worn);
        p_delay(0);

        ~forcemove(0_43_46_26_33);
        say("Gulp!");
        ~forcemove(movecoord(coord, 0, 0, -2));
        ~forcemove(movecoord(coord, 1, 0, -2));
        say("Cough!");
        ~forcemove(movecoord(coord, 1, 0, -2));
        ~forcemove(movecoord(coord, 1, 0, 1));
        p_delay(0);
        ~update_bas;
        mes("You just manage to drag your pitiful frame onto the river bank.");
        mes("Though you nearly drowned in the river!");
        p_teleport(movecoord(coord, 1, 0, -1));
        ~damage_self(calc(stat(hitpoints) / 11));
        ~damage_self(calc(stat(hitpoints) / 11));
        ~damage_self(calc(stat(hitpoints) / 11));
        return;
    }
    mes("You manage to keep your balance on the bridge.");
    stat_advance(agility, 100);
    settimer(cairn_island_bridge, 20); // it's always 20 ticks
}

[oploc1,loc_2234]
~mesbox("These rocks look like they have been stacked uniformly.");

[oploc2,loc_2234]
// stage check
~mesbox("You find nothing of significance. And it does look quite scary.");

[proc,random_undead_one](npc)
switch_int(random(4)) {
    case 0: return (npc_502);
    case 1: return (npc_503);
    case 2: return (npc_504);
    case 3: return (npc_505);
}

[oplocu,loc_2217]
if(last_useitem = spade) {
    ~mesbox("You start digging...|But without knowing what you're digging for...|You decide to give up.");
    return;
}