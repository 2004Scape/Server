// Ship ladder (climb up)
[oploc1,loc_245]
p_arrivedelay;
switch_int (loc_angle) {
	case 0: p_teleport(movecoord(coord, 0, 1, 2));
	case 1: p_teleport(movecoord(coord, 2, 1, 0));
	case 2: p_teleport(movecoord(coord, 0, 1, -2));
	case 3: p_teleport(movecoord(coord, -2, 1, 0));
}

// Ship ladder (climb down)
[oploc1,loc_246]
p_arrivedelay;
switch_int (loc_angle) {
	case 0: p_teleport(movecoord(coord, 0, -1, 2));
	case 1: p_teleport(movecoord(coord, 2, -1, 0));
	case 2: p_teleport(movecoord(coord, 0, -1, -2));
	case 3: p_teleport(movecoord(coord, -2, -1, 0));
}

// Climb Up
[oploc1,loc_272]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 1, 0), true);

// Climb Down
[oploc1,loc_273]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, -1, 0), false);

// Climb-down op
[oploc1,loc_2147]
def_coord $coord = loc_coord();

// wizard tower level 0
if ($coord = 0_48_49_32_26) {
    @climb_ladder(0_48_149_32_40, false);
} else {
    mes("unhandled ladder <~coord_tostring($coord)>");
}

[oploc1,loc_1746]
p_arrivedelay;
switch_coord (loc_coord) {
    case 2_47_54_17_57: @climb_ladder(1_47_54_17_58, false); // black knights fortress ladder
    case default: @climb_ladder(movecoord(coord(), 0, -1, 0), false);   
}

[oploc1,loc_1747]
p_arrivedelay;
switch_coord (loc_coord) {
    case 0_40_53_10_49: @ladder_to_dwarf_remains; // Ladder to Dwarf Guard Tower
    case default: @climb_ladder(movecoord(coord(), 0, 1, 0), true);
}

[oploc1,loc_1748]
p_arrivedelay;
@ladder_options(movecoord(coord(), 0, 1, 0), movecoord(coord(), 0, -1, 0));

[oploc2,loc_1748]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 1, 0), true);

[oploc3,loc_1748]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, -1, 0), true);

[oploc1,loc_1749]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, -1, 0), false);

[oploc1,loc_1750]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 1, 0), true);

[oploc1,loc_1754]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 0, 6400), false);

[oploc1,loc_1755] // mining guild ladder
def_coord $coord = loc_coord;
p_arrivedelay;
if(loc_coord = 0_50_149_22_52) { // Zanaris ladder (entrance room)
    @climb_ladder(0_50_49_1_33, true);
}
@climb_ladder(movecoord(coord(), 0, 0, -6400), true);

[oploc1,loc_1757] 
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 0, -6400), true);

[oploc1,loc_1759]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 0, 6400), false);

[oploc1,loc_1765]
def_coord $coord = loc_coord();
p_arrivedelay;
switch_coord ($coord) {
    case 0_40_50_1_22 : @climb_ladder(0_40_150_1_21, false); // Monk's Friend hidden ladder
    case 0_47_60_9_9 : p_teleport(0_47_160_61_15); // kdb entrance (yes its a p_teleport)
    case default : mes("unhandled ladder <~coord_tostring($coord)>");
}

// Climb-up op
[oploc1,loc_2148]
def_coord $coord = loc_coord();

// wizard tower cellar
if ($coord = 0_48_149_31_40) {
    @climb_ladder(0_48_49_33_26, true);
} else {
    mes("unhandled ladder <~coord_tostring($coord)>");
}

[oploc1,loc_2405]
p_arrivedelay;
@climb_ladder(0_50_52_44_54, true);

[oploc1,loc_2884]
p_arrivedelay;
def_int $option = ~p_choice2_header("Climb Up.", 1, "Climb Down.", 2, "Climb up or down the ladder?");
if_close;
anim(human_reachforladdertop, 0);
p_delay(1);
if ($option = 1) {
    ~grandtree_spawn_charlie;
    p_telejump(movecoord(coord(), 0, 1, 0));
} else if ($option = 2) {
    p_telejump(movecoord(coord(), 0, -1, 0));
}

[oploc2,loc_2884]
~grandtree_spawn_charlie; // before the arrivedelay
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, 1, 0), true);

[oploc3,loc_2884]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, -1, 0), true);

[oploc1,loc_3205]
p_arrivedelay;
@climb_ladder(movecoord(coord(), 0, -1, 0), false);

[label,climb_ladder](coord $coord, boolean $up)
if ($up = true) {
    anim(human_reachforladdertop, 0);
} else {
    anim(human_pickupfloor, 0);
}
p_delay(0);
p_telejump($coord);

[label,ladder_options](coord $up, coord $down)
def_int $option = ~p_choice2_header("Climb Up.", 1, "Climb Down.", 2, "Climb up or down the ladder?");
if_close;
anim(human_reachforladdertop, 0);
p_delay(1);
if ($option = 1) {
    p_telejump($up);
} else if ($option = 2) {
    p_telejump($down);
}

[label,unhandled_ladder](coord $loccoord)
mes("Unhandled ladder: <~coord_tostring($loccoord)>");