[ai_timer,border_guard_lumby] @guard_scout_toll_fence;
[ai_timer,border_guard_alkharid] @guard_scout_toll_fence;
[opnpc1,border_guard_lumby] ~talk_to_border_guard(false, null);
[opnpc1,border_guard_alkharid] ~talk_to_border_guard(false, null);
[oploc1,loc_2882] @find_and_talk_to_border_guard;
[oploc1,loc_2883] @find_and_talk_to_border_guard;

// searches for a nearby border guard
// then starts dialogue with them
[label,find_and_talk_to_border_guard]
npc_findallzone(coord);
while (npc_findnext = true) {
    if ((npc_type = border_guard_lumby | npc_type = border_guard_alkharid) & lineofwalk(coord, npc_coord) = true) {
        ~talk_to_border_guard(true, loc_coord);
        return;
    }
}

[proc,talk_to_border_guard](boolean $from_gate, coord $loc_coord)
if (distance(coord, npc_coord) > 2) {
    return;
}

~chatplayer(happy, "Can I come through this gate?");

if ($from_gate = true) {
    // yes they face coord here after the first line
    facesquare(npc_coord);
}
npc_facesquare(coord); // TODO npc mode

if (%prince_progress = 1) {
    ~chatnpc(happy, "You may pass for free! You are a friend of Al Kharid");
    return;
}

~chatnpc(happy, "You must pay a toll of 10 gold coins to pass.");

def_int $choice = ~p_choice3("No thank you, I'll walk around.", 1, "Who does my money go to?", 2, "Yes, ok.", 3);
if ($choice = 1) {
    ~chatplayer(happy, "No, thank you. I'll walk around.");
    ~chatnpc(happy, "Ok suit yourself.");
    return;
} else if ($choice = 2) {
    ~chatplayer(happy, "Who does my money go to?");
    ~chatnpc(happy, "The money goes to the city of Al-Kharid.");
    return;
}

~chatplayer(happy, "Yes, ok.");
if (inv_total(inv, coins) < 10) {
    ~chatplayer(happy, "Oh dear, I don't actually seem to have enough money.");
    return;
}

~mesbox("You pay the guard.");
inv_del(inv, coins, 10);

// close the dialogue
if_close;

def_coord $north_coord = 0_51_50_4_28;
def_coord $south_coord = 0_51_50_4_27;
def_boolean $west = false;

// checks if we are west of the gate on the lumbridge side
if (coordx(coord) < coordx($south_coord)) {
    $west = true;
}

// check if we are standing directly next to the gate somewhere
if (~within_border_gate_toll_distance($west, $north_coord, $south_coord, $loc_coord) = true) {
    p_delay(1);
    // directly enter the gate
    ~enter_through_border_gate_toll($west, $loc_coord);
    return;
}

// check if we are north of the gate
if (coordz(coord) > coordz($north_coord)) {
    if ($west = true) {
        // if we are on the west side then our north coord
        // destination is moved over to the west
        $north_coord = movecoord($north_coord, -1, 0, 0);
    }
    // capture our coord before teleporting
    def_coord $coord = coord;
    // teleport us to the north coord and delay
    p_teleport($north_coord);
    p_delay(distance($coord, $north_coord));
}

// if we are on the west side then our south coord
// destination is moved over to the west
if ($west = true) {
    $south_coord = movecoord($south_coord, -1, 0, 0);
}
// capture our coord before teleporting
def_coord $coord = coord;
if ($coord ! $south_coord) {
    // teleport us to the south coord
    p_teleport($south_coord);
}

p_delay(add(distance($coord, $south_coord), 1));
// open the gates and teleport through
~enter_through_border_gate_toll($west, $loc_coord);

// opens the gate and blocks all 4 sides
// teleports us through the gate
// plays the gates synth when opening
// does magic
[proc,enter_through_border_gate_toll](boolean $west, coord $loc_coord)
def_coord $destination;
if ($west = true) {
    $destination = movecoord(coord, 1, 0, 0);
    $loc_coord = $destination;
} else {
    if ($loc_coord = null) {
        $destination = movecoord(coord, -1, 0, 0);
        $loc_coord = coord;
    } else {
        $destination = movecoord($loc_coord, -1, 0, 0);
    }
}

loc_findallzone($loc_coord);
while (loc_findnext = true) {
    if (loc_coord = $loc_coord & (loc_category = border_gate_toll_right | loc_category = border_gate_toll_left)) {
        if (loc_category = border_gate_toll_left) {
            ~open_border_gate_toll_left_closed;
        } else {
            ~open_border_gate_toll_right_closed;
        }
    }
}

sound_synth(grate_open, 0, 0);
facesquare($destination);
p_teleport($destination);
p_delay(0);

[proc,open_border_gate_toll_left_closed]()
loc_del(2);
loc_add(loc_coord, loc_83, loc_angle, wall_straight, 2);

def_coord $coord = ~movecoord_loc_return(~door_left_open(loc_angle));
loc_add($coord, loc_83, loc_angle, wall_straight, 2);
loc_add($coord, loc_param(next_loc_stage), calc(loc_angle + 3), wall_straight, 2);

def_coord $other = movecoord(loc_coord, 0, 0, 1);

loc_findallzone($coord);
while (loc_findnext = true) {
    if (loc_coord = $other & loc_category = border_gate_toll_right) {
        loc_del(2);
        loc_add(loc_coord, loc_83, loc_angle, wall_straight, 2);

        def_coord $coord = ~movecoord_loc_return(~door_open(loc_angle));
        loc_add($coord, loc_83, loc_angle, wall_straight, 2);
        loc_add($coord, loc_param(next_loc_stage), calc(loc_angle + 1), wall_straight, 2);
    }
}

[proc,open_border_gate_toll_right_closed]()
loc_del(2);
loc_add(loc_coord, loc_83, loc_angle, wall_straight, 2);

def_coord $coord = ~movecoord_loc_return(~door_open(loc_angle));
loc_add($coord, loc_83, loc_angle, wall_straight, 2);
loc_add($coord, loc_param(next_loc_stage), calc(loc_angle + 1), wall_straight, 2);

def_coord $other = movecoord(loc_coord, 0, 0, -1);

loc_findallzone($coord);
while (loc_findnext = true) {
    if (loc_coord = $other & loc_category = border_gate_toll_left) {
        loc_del(2);
        loc_add(loc_coord, loc_83, loc_angle, wall_straight, 2);

        def_coord $coord = ~movecoord_loc_return(~door_left_open(loc_angle));
        loc_add($coord, loc_83, loc_angle, wall_straight, 2);
        loc_add($coord, loc_param(next_loc_stage), calc(loc_angle + 3), wall_straight, 2);
    }
}

// checks if you are standing directly next to the gate on 4 sides.
[proc,within_border_gate_toll_distance](boolean $west, coord $north_coord, coord $south_coord, coord $loc_coord)(boolean)
if ($west = false & coord ! $loc_coord) { // trust me on this one
    return(false);
} else if ($west = true & coord = movecoord($north_coord, -1, 0, 0)) {
    return(true);
} else if ($west = true & coord = movecoord($south_coord, -1, 0, 0)) {
    return(true);
} else if ($west = false & coord = $north_coord) {
    return(true);
} else if ($west = false & coord = $south_coord) {
    return(true);
}
return(false);

[label,guard_scout_toll_fence]
if (random(4) ! 0) return;

def_coord $next_coord = movecoord(npc_coord, ~random_range(-1, 1), 0, ~random_range(-1, 1));

def_int $count = 0;
while ($next_coord = npc_coord & $count < 10) {
    $next_coord = movecoord(npc_coord, ~random_range(-1, 1), 0, ~random_range(-1, 1));
    $count = add($count, 1);
}

npc_facesquare($next_coord);
