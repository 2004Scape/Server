[opnpc1,professor_oddenstein]
switch_int(%haunted_progress) {
    case ^haunted_not_started, ^haunted_complete: @oddenstein_nonquest;
    case ^haunted_started: @oddenstein_looking;
    case ^haunted_spoken_to_oddenstein: @oddenstein_items;
}

[label,oddenstein_nonquest]
~chatnpc(quiz, "Be careful in here.|Lots of dangerous equipment in here.");
@multi2("What does this machine do?", oddenstein_machine, "Is this your house?", oddenstein_house);

[label,oddenstein_machine]
~chatplayer(happy, "What does this machine do?");
~chatnpc(default, "Nothing at the moment, as it's broken. It's meant to be a transmutation machine.");
~chatnpc(neutral, "It has also spent time as a time travel machine, and a dramatic lightning generator, and a thing for generating monsters.");

[label,oddenstein_house]
~chatplayer(happy, "Is this your house?");
~chatnpc(default, "No, I'm just one of the tenants. It belongs to the count who lives in the basement.");

[label,oddenstein_looking]
def_int $option = ~p_choice3("I'm looking for a guy called Ernest.", 1, "What does this machine do?", 2, "Is this your house?", 3);
if($option = 1) {
    ~chatplayer(happy, "I'm looking for a guy called Ernest.");
    ~chatnpc(neutral, "Ah Ernest, top notch bloke.|He's helping me with my experiments.");
    ~chatplayer(happy, "So you know where he is then?");
    ~chatnpc(long, "He's that chicken over there.");
    ~chatplayer(confused, "Ernest is a chicken?|Are you sure?");
    ~chatnpc(neutral, "Oh, he isn't normally a chicken, or at least he wasn't until he helped me test my pouletmorph machine.");
    ~chatnpc(default, "It was originally going to be called a transmutation machine. But after testing pouletmorph seems more appropriate.");
    @multi2("I'm glad Veronica didn't actually get engaged to a chicken.", oddenstein_chicken, "Change him back this instant!", oddenstein_change_back);
} else if($option = 2) {
    @oddenstein_machine;
} else if($option = 3) {
    @oddenstein_house;
}

[label,oddenstein_chicken]
~chatplayer(default, "I'm glad Veronica didn't actually get engaged to a chicken.");
~chatnpc(happy, "Who's Veronica?");
~chatplayer(default, "Ernest's fiancee.|She probably doesn't want to marry a chicken.");
~chatnpc(happy, "Ooh I dunno.|She could have free eggs for breakfast.");
~chatplayer(quiz, "I think you'd better change him back.");
@oddenstein_not_easy;

[label,oddenstein_change_back]
~chatplayer(angry, "Change him back this instant!");
@oddenstein_not_easy;

[label,oddenstein_not_easy]
~chatnpc(sad, "Um, it's not so easy. My machine is broken and the house gremlins have run off with some vital bits.");
~chatplayer(quiz, "Well I can look out for them.");
~chatnpc(neutral, "That would be a help. They'll be somewhere in the manor house or its grounds, the gremlins never go further than the entrance gate.");
%haunted_progress = ^haunted_spoken_to_oddenstein;
~chatnpc(default, "I'm missing the pressure gauge and a rubber tube. They've also taken my oil can, which I'm going to need to get this thing started again.");

[label,oddenstein_items]
~chatnpc(happy, "Have you found anything yet?");
if(inv_total(inv, pressure_gauge) > 0 & inv_total(inv, oil_can) > 0 & inv_total(inv, rubber_tube) > 0) {
    ~chatplayer(quiz, "I have everything!");
    ~chatnpc(long, "Give 'em here then.");
    // osrs has this as messages with p_delay, but based of rsc and similar scenarios in non-reworked quests, this is probably what it used to be (confirm this if possible)
    ~mesbox("You give a rubber tube, a pressure gauge and a can of oil to the Professer.");
    ~mesbox("Oddenstein starts up the machine.|The machine hums and shakes.|Suddenly a ray shoots out of the machine at the chicken.");
    ~change_ernest;
    inv_del(inv, pressure_gauge, 1);
    inv_del(inv, oil_can, 1);
    inv_del(inv, rubber_tube, 1);
    queue(haunted_quest_complete, 0); // reward is queued as soon as changetype completes in OSRS
    ~chatnpc_specific("Ernest", ernest_human, neutral, "Thank you sir.|It was dreadfully irritating being a chicken.|How can I ever thank you?");
    ~chatplayer(suspicious, "Well a cash reward is always nice.");
    ~chatnpc_specific("Ernest", ernest_human, quiz, "Of course, of course.");
    ~mesbox("Ernest hands you 300 coins.");
} else if(inv_total(inv, pressure_gauge) > 0 | inv_total(inv, oil_can) > 0 | inv_total(inv, rubber_tube) > 0) {
    def_string $player_items = "";
    def_string $oddenstein_items = "";
    if(inv_total(inv, oil_can) > 0) {
        $player_items = append($player_items, "|I have a can of oil.");
    } else {
        $oddenstein_items = append($oddenstein_items, "|A can of oil.");
    }
    if(inv_total(inv, pressure_gauge) > 0) {
        $player_items = append($player_items, "|I have a pressure gauge.");
    } else {
        $oddenstein_items = append($oddenstein_items, "|A rubber tube.");
    }
    if(inv_total(inv, rubber_tube) > 0) {
        $player_items = append($player_items, "|I have a rubber tube.");
    } else {
        $oddenstein_items = append($oddenstein_items, "|A pressure gauge.");
    }
    mes($player_items);
    ~chatplayer(quiz, "I have found some of the things you need:<$player_items>");
    ~chatnpc(down, "Well that's a start, you still need to find:<$oddenstein_items>");
    ~chatplayer(quiz, "Ok, I'll try and find them.");
} else {
    ~chatplayer(sad, "I'm afraid I don't have any yet!");
    ~chatnpc(default, "I need a rubber tube, a pressure gauge and a can of oil. Then your friend can stop being a chicken.");
}