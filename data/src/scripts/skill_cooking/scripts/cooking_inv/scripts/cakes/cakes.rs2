[opheldu,cake_tin]
switch_obj (last_useitem) {
    case pot_of_flour, egg, bucket_milk : @make_uncooked_cake;
    case default : ~displaymessage(^dm_default);
}
[opheldu,egg]
switch_obj (last_useitem) {
    case cake_tin : @make_uncooked_cake;
    case default : ~displaymessage(^dm_default);
}

[opheldu,bucket_milk]
switch_obj (last_useitem) {
    case cocktail_shaker : @add_cocktail_ingredient(last_item);
    case cake_tin : @make_uncooked_cake;
    case chocolate_dust : @make_chocolate_milk(last_useslot);
    case default : ~displaymessage(^dm_default);
}

[opheldu,chocolaty_milk]
switch_obj (last_useitem) {
    case snape_grass : @make_hangover_cure(last_useslot);
    case default : ~displaymessage(^dm_default);
}

[opheldu,chocolate_bar]
switch_int(oc_param(last_useitem, gnome_cooking_type)) {
    case ^gnome_cocktail: @finish_cocktail(last_useitem, last_item);
    case ^gnome_bowl, ^gnome_batta, ^gnome_crunchies: @finish_gnome_food(last_useitem, last_item);
}
switch_obj (last_useitem) {
    case cake : @make_chocolate_cake(last_slot);
    case pestle_and_mortar : ~attempt_grind_ingredient(last_useslot, last_slot);
    case half_baked_gnomebowl : @add_bowl_ingredient(last_item);
    case half_baked_crunchies : @add_crunchies_ingredient(last_item);
    case default : ~displaymessage(^dm_default);
}

[opheldu,chocolate_dust]
switch_int(oc_param(last_useitem, gnome_cooking_type)) {
    case ^gnome_cocktail: @finish_cocktail(last_useitem, last_item);
    case ^gnome_bowl, ^gnome_batta, ^gnome_crunchies: @finish_gnome_food(last_useitem, last_item);
}
switch_obj (last_useitem) {
    case cake : @make_chocolate_cake(last_slot);
    case bucket_milk : @make_chocolate_milk(last_slot);
    case default : ~displaymessage(^dm_default);
}

[opheldu,snape_grass]
switch_obj (last_useitem) {
    case chocolaty_milk : @make_hangover_cure(last_slot);
    case default : ~attempt_brew_potion(last_useslot, last_slot);
}

[opheldu,cake]
switch_obj (last_useitem) {
    case chocolate_bar, chocolate_dust : @make_chocolate_cake(last_useslot);
    case default : ~displaymessage(^dm_default);
}

[label,make_uncooked_cake]
def_obj $ignored_ingredient;
if (last_useitem = cake_tin) {
    $ignored_ingredient = inv_getobj(inv, last_slot);
} else {
    $ignored_ingredient = inv_getobj(inv, last_useslot);
}
switch_obj ($ignored_ingredient) {
    case egg : ~check_cake_ingredients(pot_of_flour, "flour", bucket_milk, "milk");
    case pot_of_flour : ~check_cake_ingredients(egg, "egg", bucket_milk, "milk");
    case bucket_milk : ~check_cake_ingredients(egg, "egg", pot_of_flour, "flour");
}
// delete 4 items
inv_del(inv, pot_of_flour, 1);
inv_del(inv, egg, 1);
inv_del(inv, bucket_milk, 1);
inv_del(inv, cake_tin, 1);
// add item (in this order)
inv_add(inv, pot_empty, 1);
inv_add(inv, uncooked_cake, 1);
inv_add(inv, bucket_empty, 1);
// display game message
mes("You mix the milk, flour, and egg together to make a raw cake mix.");

[proc,check_cake_ingredients](namedobj $ingredient1, string $ingredient_name1, namedobj $ingredient2, string $ingredient_name2)
// egg > flour > milk
def_string $string;
if (inv_total(inv, $ingredient1) < 1 & inv_total(inv, $ingredient2) < 1) {
    ~mesbox("You also need <$ingredient_name1> and <$ingredient_name2> to make a cake.");
    @exit;
}
if (inv_total(inv, $ingredient1) < 1) {
    ~mesbox("You also need <$ingredient_name1> to make a cake.");
    @exit;
} 
if (inv_total(inv, $ingredient2) < 1) {
    ~mesbox("You also need <$ingredient_name2> to make a cake.");
    @exit;
}
return;

[label,make_chocolate_cake](int $last)
if (stat(cooking) < 50) {
    // OSRS message
    ~mesbox("You need a Cooking level of 50 to make a chocolate cake.");
    return;
}
def_obj $chocolate = inv_getobj(inv, $last);
// delete chocolate and cake
inv_del(inv, $chocolate, 1);
inv_del(inv, cake, 1);
// add chocolate cake
inv_add(inv, chocolate_cake, 1);
// doesnt give xp https://web.archive.org/web/20040905213850/http://www.runehq.com/CookingSkillGuide.php
// https://classic.runescape.wiki/w/Chocolate_Cake
//stat_advance(cooking, 300);
// display message
mes("You make a chocolate cake.");

[label,make_chocolate_milk](int $last)
def_obj $chocolate = inv_getobj(inv, $last);
inv_del(inv, $chocolate, 1);
inv_del(inv, bucket_milk, 1);
inv_add(inv, chocolaty_milk, 1);
~objbox(chocolaty_milk, "You mix the chocolate into the bucket.");

[label,make_hangover_cure](int $last)
def_obj $snape_grass = inv_getobj(inv, $last);
inv_del(inv, $snape_grass, 1);
inv_del(inv, chocolaty_milk, 1);
inv_add(inv, hangover_cure, 1);
~objbox(hangover_cure, "You mix the snape grass into the bucket.");
