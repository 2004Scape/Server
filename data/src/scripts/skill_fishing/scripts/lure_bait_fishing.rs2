[opnpc1,_lure_bait_fishing] @attempt_fish_trout_salmon;
[opnpc3,_lure_bait_fishing] @attempt_fish_pike;

// hidden options
[opnpc2,_lure_bait_fishing] @fish_trout_salmon;
[opnpc4,_lure_bait_fishing] @fish_pike;

[opnpcu,_lure_bait_fishing]
~check_correct_fish_equipment(fishing_rod, fly_fishing_rod);
switch_obj(last_item) {
    case fishing_rod : @attempt_fish_pike;
    case fly_fishing_rod : @attempt_fish_trout_salmon;
    case default : @nothing_interesting_happens;
}


// trout and salmon
[label,attempt_fish_trout_salmon]
// check level
if (stat(fishing) < 20) {
    ~mesbox("You need at least 20 Fishing to lure these fish.");
}
// check if they have fishing equipment & bait
~check_fish_equipment(fly_fishing_rod);
%skill_anim = calc(%skill_anim + 1);
if (%skill_clock < map_clock) {
    %skill_clock = calc(map_clock + 4);
}
if (%skill_anim < map_clock) {
    anim(seq_622, 30);
    //mes("<tostring(map_clock)>, <tostring(%skill_clock)>, <tostring(%skill_anim)>: Start ANIM"); // debug
    %skill_anim = calc(map_clock + 5);
}
mes("You cast out your line...");
mes("You attempt to catch a fish.");
p_opnpc(2);


[label,fish_trout_salmon]
// check if inv is full
if (inv_freespace(inv) = 0) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
}
if (%skill_clock = map_clock) {
    if (stat(fishing) >= 30) {
        ~fish_roll(raw_trout, raw_salmon, feather);
    } else {
        ~fish_roll(raw_trout, null, feather);
    }
    %skill_clock = calc(map_clock + 5);
    %skill_anim = calc(map_clock - 1);
    anim(seq_623, 0);
    p_opnpc(2);
}
p_opnpc(2);


// pike
[label,attempt_fish_pike]
// check level
if (stat(fishing) < 25) {
    ~mesbox("You need at least 25 Fishing to bait these fish.");
}
// check if they have fishing equipment & bait
~check_fish_equipment(fishing_rod);
%skill_anim = calc(%skill_anim + 1);
if (%skill_clock < map_clock) {
    %skill_clock = calc(map_clock + 5);
}
if (%skill_anim < map_clock) {
    anim(seq_622, 30);
    //mes("<tostring(map_clock)>, <tostring(%skill_clock)>, <tostring(%skill_anim)>: Start ANIM"); // debug
    %skill_anim = calc(map_clock + 5);
}
mes("<tostring(map_clock)>: You cast out your line...");
mes("You attempt to catch a fish.");
p_opnpc(4);


[label,fish_pike]
// check if inv is full
if (inv_freespace(inv) = 0) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
}
if (%skill_clock = map_clock) {
    %skill_anim = calc(map_clock - 1);
    ~fish_roll(raw_pike, null, fishing_bait);
    if (randominc(5) = 5) { // 1/5 chance to recast
        mes("<tostring(map_clock)>: Recast.");
        p_opnpc(3);
    } else {
        mes("<tostring(map_clock)>: Dont recast.");
        %skill_clock = calc(map_clock + 5);
        anim(seq_623, 0);
        p_opnpc(4);
    }
} else {
    p_opnpc(4);
}