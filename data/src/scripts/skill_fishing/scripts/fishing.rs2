// when you use your equipment on the wrong fishing spot
// example: net -> harpoon spot
[label,fishing_wrong_spot_message](obj $item)
def_struct $struct = oc_param($item, fish_equipment_struct);
if ($struct = null) {
    ~displaymessage(^dm_default);
    return;
}
def_string $message = struct_param($struct, fish_wrong_spot_message);
if (string_length($message) > 0) {
    ~mesbox($message);
    return;
}
~displaymessage(^dm_default);


// checks if you actually have the fish equipment required.
// usually called right after level check, and right before inv space check.
// inv space check doesnt seem to have consistent behavior so its not included in this proc.
[proc,check_fish_equipment](namedobj $fish_equipment)(boolean)
def_struct $struct = oc_param($fish_equipment, fish_equipment_struct);
// check if they have fishing equipment
if (inv_total(inv, $fish_equipment) < 1) {
    anim(null, 0);
    ~mesbox(struct_param($struct, fish_equipment_failmessage));
    return(false);
}
// check if player has enough bait
if ($struct ! null) {
    def_namedobj $bait = struct_param($struct, baitrequired);
    if ($bait ! null & inv_total(inv, $bait) < 1) {
        anim(null, 0);
        ~mesbox("You don't have any <struct_param($struct, baitmessage)> left.");
        return(false);
    }
}
return(true);

// proc for fish rolls
[proc,fish_roll](namedobj $fish1, namedobj $fish2, namedobj $equipment, namedobj $bait)
if (npc_param(is_whirlpool) = ^true) {
    ~macro_whirlpool_attempt_take_equipment($equipment);
    return;
}

if ($fish2 ! null) { // if fish2 isnt null and roll for 2nd fish passes
    def_struct $struct2 = oc_param($fish2, fishing_struct);
    if (stat_random(stat(fishing), struct_param($struct2, success_low), struct_param($struct2, success_high)) = true) {
        if ($bait ! null) {
            // delete bait
            inv_del(inv, $bait, 1);
        }
        // give fish and display message
        inv_add(inv, $fish2, 1);
        givexp(fishing, struct_param($struct2, productexp));
        mes(struct_param($struct2, productmessage));
        return;
    }
}
if ($fish1 ! null) { // else if fish1 isnt null and roll for 1st fish passes
    def_struct $struct1 = oc_param($fish1, fishing_struct);
    if (stat_random(stat(fishing), struct_param($struct1, success_low), struct_param($struct1, success_high)) = true) {
        if ($bait ! null) {
            // delete bait
            inv_del(inv, $bait, 1);
        }
        // give fish and display message
        inv_add(inv, $fish1, 1);
        givexp(fishing, struct_param($struct1, productexp));
        mes(struct_param($struct1, productmessage));
        return;
    }
}