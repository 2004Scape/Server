// im guessing these loc fishing spots didnt have fishing spot random events?

[oploc1,loc_2027]
// check level
if (stat(fishing) < 20) {
    anim(null, 0);
    ~mesbox("You need at least 20 Fishing to lure these fish.");
    return;
}
// check if they have fishing equipment & bait
if (~check_fish_equipment(fly_fishing_rod) = false) {
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
}
if (%skill_anim < map_clock) {
    //mes("<tostring(map_clock)>, <tostring(%action_delay)>, <tostring(%skill_anim)>: Start ANIM"); // debug
    anim(human_fishing_casting, 0);
    sound_synth(fishing_cast, 0, 39);
    %skill_anim = calc(map_clock + 5);
}
mes("You cast out your line...");
p_oploc(3);

[oploc3,loc_2027]
// check level
if (stat(fishing) < 20) {
    anim(null, 0);
    ~mesbox("You need at least 20 Fishing to lure these fish.");
    return;
}
// check if they still have fishing equipment & bait
if (~check_fish_equipment(fly_fishing_rod) = false) {
    return;
}
// check if inv is full
if (inv_freespace(inv) = 0) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%skill_anim = calc(map_clock + 4)) {
    // anim(human_fishing_casting, 0);
    // sound_synth(fishing_cast, 0, 39);
    mes("You attempt to catch a fish.");
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
}
if (%action_delay = map_clock) {
    if (stat(fishing) >= 30) {
        ~fish_roll_waterfall(raw_trout, raw_salmon, feather);
    } else {
        ~fish_roll_waterfall(raw_trout, null, feather);
    }
    anim(human_fish_onspot, 0);
    p_oploc(3);
}
p_oploc(3);


[oploc2,loc_2027]
// check level
if (stat(fishing) < 25) {
    anim(null, 0);
    ~mesbox("You need at least 25 Fishing to bait these fish.");
    return;
}
// check if they have fishing equipment & bait
if (~check_fish_equipment(fishing_rod) = false) {
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 5);
}
if (%skill_anim < map_clock) { // spam clicking in osrs always plays anim
    anim(human_fishing_casting, 0);
    sound_synth(fishing_cast, 0, 39);
    %skill_anim = calc(map_clock + 5);
}
mes("You cast out your line...");
p_oploc(4);

[oploc4,loc_2027]
// check level
if (stat(fishing) < 25) {
    anim(null, 0);
    ~mesbox("You need at least 25 Fishing to bait these fish.");
    return;
}
// check if they still have fishing equipment & bait
if (~check_fish_equipment(fishing_rod) = false) {
    return;
}
// check if inv is full
if (inv_freespace(inv) = 0) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%skill_anim = calc(map_clock + 4)) {
    // anim(human_fishing_casting, 0);
    // sound_synth(fishing_cast, 0, 39);
    mes("You attempt to catch a fish.");
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
}
if (%action_delay = map_clock) {
    ~fish_roll_waterfall(raw_pike, null, fishing_bait);
    if (randominc(5) = 5) { // 1/5 chance to recast
        //mes("<tostring(map_clock)>: Recast.");
        p_oploc(2);
    } else {
        //mes("<tostring(map_clock)>: Dont recast.");
        %action_delay = calc(map_clock + 5);
        anim(human_fish_onspot, 0);
        p_oploc(4);
    }
} else {
    p_oploc(4);
}

[oplocu,loc_2027]
switch_obj(last_useitem) {
    case fishing_rod : p_oploc(2);
    case fly_fishing_rod : p_oploc(1);
    case default : @fishing_wrong_spot_message(last_useitem);
}

[proc,fish_roll_waterfall](namedobj $fish1, namedobj $fish2, namedobj $bait)
if ($fish2 ! null) { // if fish2 isnt null and roll for 2nd fish passes
    def_struct $struct2 = oc_param($fish2, fishing_struct);
    if (stat_random(stat(fishing), struct_param($struct2, success_low), struct_param($struct2, success_high)) = true) {
        if ($bait ! null) {
            // delete bait
            inv_del(inv, $bait, 1);
        }
        // give fish and display message
        inv_add(inv, $fish2, 1);
        stat_advance(fishing, struct_param($struct2, productexp));
        mes(struct_param($struct2, productmessage));
        return;
    }
}
if ($fish1 ! null) { // else if fish1 isnt null and roll for 1st fish passes
    def_struct $struct1 = oc_param($fish1, fishing_struct);
    if (stat_random(stat(fishing), struct_param($struct1, success_low), struct_param($struct1, success_high)) = true) {
        if ($bait ! null) {
            // delete bait
            inv_del(inv, $bait, 1);
        }
        // give fish and display message
        inv_add(inv, $fish1, 1);
        stat_advance(fishing, struct_param($struct1, productexp));
        mes(struct_param($struct1, productmessage));
    }
}