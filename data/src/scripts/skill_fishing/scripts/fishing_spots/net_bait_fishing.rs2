[opnpc1,_saltfish] 
//mes("<tostring(map_clock)>, <tostring(%action_delay)>");
@attempt_fish_shrimp;
[opnpc3,_saltfish]
//mes("<tostring(map_clock)>, <tostring(%action_delay)>");
@attempt_fish_sardine;

// hidden ops
[opnpc2,_saltfish] 
//mes("<tostring(map_clock)>, <tostring(%action_delay)>");
@fish_shrimp;
[opnpc4,_saltfish]
//mes("<tostring(map_clock)>, <tostring(%action_delay)>");
@fish_sardine;

[opnpcu,_saltfish]
switch_obj(last_useitem) {
    case fly_fishing_rod : ~displaymessage(^dm_default);
    case fishing_rod : @attempt_fish_sardine;
    case net : @attempt_fish_shrimp;
    case net_big : ~mesbox("The fish here aren't suitable for catching with a Big Net.");
    case default : @fishing_wrong_spot_message(last_useitem);
}


[label,attempt_fish_shrimp]
// check if they have fishing equipment
if (~check_fish_equipment(net) = false) {
    return;
}
// check if inv is full
if (inv_freespace(inv) < 1) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
    p_opnpc(1);
    return;
} 
if (%action_delay = calc(map_clock + 3)) {
    mes("You cast out your net...");
    anim(human_smallnet, 0);
    sound_synth(fishing_cast, 0, 15);
    %skill_anim = calc(map_clock + 5);
    p_opnpc(2);
} else if (%action_delay = map_clock) { 
    if (stat(fishing) >= 15) {
        ~fish_roll(raw_shrimps, raw_anchovies, net, null);
    } else {
        ~fish_roll(raw_shrimps, null, net, null);
    }
    anim(human_smallnet, 0);
    sound_synth(fishing_cast, 0, 15);
}

if (afk_event = ^true & npc_param(is_whirlpool) = ^false) {
    @macro_event_fishing(net);
}

[label,fish_shrimp]
// check if they have fishing equipment
if (~check_fish_equipment(net) = false) {
    return;
}
// check if inv is full again
if (inv_freespace(inv) < 1) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 5);
} else
if (%action_delay = map_clock) {
    if (stat(fishing) >= 15) {
        ~fish_roll(raw_shrimps, raw_anchovies, net, null);
    } else {
        ~fish_roll(raw_shrimps, null, net, null);
    }
}
// play anim every 6 ticks, and sound every 3 ticks
if (%skill_anim < map_clock) {
    %skill_anim = calc(map_clock + 5);
    anim(human_smallnet, 0);
    sound_synth(fishing_cast, 0, 15);
} else
if (%skill_anim = calc(map_clock + 2)) {
    sound_synth(fishing_cast, 0, 15);
}
p_opnpc(2);


[label,attempt_fish_sardine]
// check level
if (stat(fishing) < 5) {
    anim(null, 0);
    ~mesbox("You need at least 5 Fishing to catch these fish.");
    return;
}
// check if they have fishing equipment
if (~check_fish_equipment(fishing_rod) = false) {
    return;
}
// check if inv is full
if (inv_freespace(inv) < 1) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 5);
    p_opnpc(3);
    return;
} 
if (%action_delay = calc(map_clock + 4)) {
    mes("You cast out your line...");
    anim(human_fishing_casting, 0);
    p_opnpc(3);
    return;
} else if (%action_delay = calc(map_clock + 3)) {
    mes("You attempt to catch a fish.");
    p_opnpc(4);
} else if (%action_delay = map_clock) {
    if (stat(fishing) >= 10) {
        ~fish_roll(raw_sardine, raw_herring, fishing_rod, fishing_bait);
    } else {
        ~fish_roll(raw_sardine, null, fishing_rod, fishing_bait);
    }
}
if (afk_event = ^true & npc_param(is_whirlpool) = ^false) {
    @macro_event_fishing(fishing_rod);
}


[label,fish_sardine]
// check level
if (stat(fishing) < 5) {
    anim(null, 0);
    ~mesbox("You need at least 5 Fishing to catch these fish.");
    return;
}
// check if they still have fishing equipment & bait
if (~check_fish_equipment(fishing_rod) = false) {
    return;
}
// check if inv is full
if (inv_freespace(inv) < 1) {
    anim(null, 0);
    ~mesbox("You can't carry any more fish.");
    return;
}
if (%action_delay < map_clock) {
    %action_delay = calc(map_clock + 4);
    sound_synth(fishing_cast, 0, 0);
    anim(human_fish_onspot, 0);
}
if (%action_delay = map_clock) {
    if (stat(fishing) >= 10) {
        ~fish_roll(raw_sardine, raw_herring, fishing_rod, fishing_bait);
    } else {
        ~fish_roll(raw_sardine, null, fishing_rod, fishing_bait);
    }
}
p_opnpc(4);
