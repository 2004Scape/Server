// side interfaces are treated as modals for now. They will eventually be treated as overlays.
// since they're modals right now, they're protected by default.

// auto retaliate
[if_button,player_controls:com_2]
p_stopaction; // https://oldschool.runescape.wiki/w/Update:Slayer_Cave_%26_High_Risk_Worlds
if_close; // closes interfaces in osrs
if (p_finduid(uid) = true) {
    %auto_retaliate = ^player_auto_retaliate_on;
    return;
}
queue(set_auto_retaliate, 0, 0);

[if_button,player_controls:com_3]
p_stopaction; // https://oldschool.runescape.wiki/w/Update:Slayer_Cave_%26_High_Risk_Worlds
if_close; // might be strongqueued in osrs
if (p_finduid(uid) = true) {
    %auto_retaliate = ^player_auto_retaliate_off;
    return;
}
queue(set_auto_retaliate, 0, 1);

[queue,set_auto_retaliate](int $value)
//mes("Auto retal value <tostring($value)>");
%auto_retaliate = $value;


// Player run
[if_button,player_controls:com_4] 
if_close;
if (p_finduid(uid) = true) {
    %player_run = ^player_run_off;
    return;
}
queue(set_run, 0, 0);

[if_button,player_controls:com_5]
if_close;
if (p_finduid(uid) = true) {
    %player_run = ^player_run_on;
    return;
}
queue(set_run, 0, 1);

[queue,set_run](int $value)
%player_run = $value;

// emotes
[if_button,player_controls:com_13] @player_controls_emote(emote_cry);
[if_button,player_controls:com_14] @player_controls_emote(emote_think);
[if_button,player_controls:com_15] @player_controls_emote(emote_wave);
[if_button,player_controls:com_16] @player_controls_emote(emote_bow);
[if_button,player_controls:com_17] @player_controls_emote(emote_angry);
[if_button,player_controls:com_18] @player_controls_emote(emote_dance);
[if_button,player_controls:com_19] @player_controls_emote(emote_beckon);
[if_button,player_controls:com_20] @player_controls_emote(emote_yes);
[if_button,player_controls:com_21] @player_controls_emote(emote_no);
[if_button,player_controls:com_22] @player_controls_emote(emote_laugh);
[if_button,player_controls:com_23] @player_controls_emote(emote_cheer);
[if_button,player_controls:com_24] @player_controls_emote(emote_clap);

[label,player_controls_emote](seq $anim)
p_stopaction;
if_close;
if (p_finduid(uid) = true) {
    anim($anim, 20);
    // mes("You're already doing an emote!");
    return;
}
queue(perform_emote, 0, $anim);
// p_delay(~seqlength20ms($anim));

[queue,perform_emote](seq $anim)
anim($anim, 20);

[debugproc,delay](int $delay)
p_delay($delay);