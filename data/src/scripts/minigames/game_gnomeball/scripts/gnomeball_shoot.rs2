[if_button,gnomeball:com_6]
if_close;
if (p_finduid(uid) = false) {
    return;
}
if (loc_find(^gnomeball_goal_coord, gnome_goal) = true) {
    @gnomeball_shoot;
}

[label,gnomeball_shoot]
if (lineofsight(coord, loc_coord) = false) {
    return;
}
if (~inzone_coord_pair_table(gnomeball_zones, coord) = false) {
    mes("You may only score while on the pitch.");
    return;
}
if (inv_getobj(worn, ^wearpos_rhand) ! gnomeball) {
    mes("You need a ball in your hand to throw.");
    return;
}
if (coordx(coord) >= coordx(loc_coord)) {
    mes("You must be in front of the goal.");
    return;
}
if (distance(loc_coord, coord) > 10) {
    mes("The goal is too far away from here."); // complete guess
    return;
}
// pos: 2404 3488
p_stopaction;
mes("You throw the ball at the goal...");
cam_moveto(movecoord(loc_coord, 3, 0, 0), 300, 100, 100);
cam_lookat(coord, 250, 100, 100);
p_delay(0);
facesquare(loc_coord);
anim(seq_783, 0);
sound_synth(throw, 0, 10);
def_coord $land_coord = ~gnomeball_shoot_random(loc_coord);
def_int $duration = ~coord_projectile(coord, $land_coord, spotanim_55, 40, 2, 41, 15, 0, 11, 5);

inv_delslot(worn, ^wearpos_rhand);
~update_all(gnomeball);
p_delay(divide($duration, 30));
if ($land_coord = loc_coord) {
    mes("... and score!"); // guess
    %gnomeball = min(add(max(%gnomeball, 0), 1), 5);
    if (%gnomeball = 5) {
        mes("You win!");
        inv_add(gnomeball, gnomeball, 1);
        %gnomeball = 0;
        givexp(ranged, 300);
        givexp(agility, 300);
    } else {
        givexp(ranged, multiply(add(%gnomeball, 3), 10));
    }
    cam_moveto(movecoord(loc_coord, -5, 0, 2), 300, 10, 20);
    cam_lookat(movecoord(loc_coord, -7, 0, 5), 250, 10, 20);
    // todo: goal jingle
    if (npc_find(^gnomeball_cheer_coord1, gnome_cheerleader, 0, 0) = true) {
        npc_queue(5, 0, 0);
    }
    if (npc_find(^gnomeball_cheer_coord2, gnome_cheerleader, 0, 0) = true) {
        npc_queue(6, 0, 0);
    }  
} else {
    mes("... and miss.");
}
p_delay(3);
// cam_lookat(movecoord(loc_coord, -68, 0, -40), 0, 0, 0);
// cam_moveto(movecoord(loc_coord, 3, 0, 0), 300, 100, 0);
cam_reset;


[proc,gnomeball_shoot_random](coord $coord)(coord)
def_int $x = ~random_range(-1, 1);
def_int $z = ~random_range(-1, 1);
return($coord);
// return(movecoord($coord, $x, coordy($coord), $z));

[ai_queue5,gnome_cheerleader](int $arg)
npc_say("GOAL");
npc_anim(midget_seq_216, 0);
npc_delay(0);
npc_anim(midget_seq_216, 0);

[ai_queue6,gnome_cheerleader](int $arg)
npc_say("GOAL");
npc_delay(0);
npc_anim(midget_seq_211, 0);
npc_delay(0);
npc_anim(midget_seq_212, 0);
