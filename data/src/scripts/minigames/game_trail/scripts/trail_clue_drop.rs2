[proc,trail_geteasyclue](boolean)
if(~trail_hasclue_all = false) {
    def_namedobj $trail_clue_easy = enum(int, namedobj, trail_easy_enum, random(enum_getoutputcount(trail_easy_enum)));
    inv_add(inv, $trail_clue_easy, 1);
    return(true);
} else {
    return(false);
}

[proc,trail_getmediumclue](boolean)
if(~trail_hasclue_all = false) {
    def_namedobj $trail_clue_medium = enum(int, namedobj, trail_medium_enum, random(enum_getoutputcount(trail_medium_enum)));
    inv_add(inv, $trail_clue_medium, 1);
    return(true);
} else {
    return(false);
}

[proc,trail_gethardclue](boolean)
if(~trail_hasclue_all = false) {
    def_namedobj $trail_clue_hard = enum(int, namedobj, trail_hard_enum, random(enum_getoutputcount(trail_hard_enum)));
    inv_add(inv, $trail_clue_hard, 1);
    return(true);
} else {
    return(false);
}

[proc,trail_easycluedrop](int $rarity, coord $coord)
if_close;
if (p_finduid(uid) = true) {
    if (map_members = false | ~trail_hasclue_all = true) {
        return;
    }
    def_int $rng = random($rarity);
    if ($rng = 0) {
        def_obj $trail_clue_easy = enum(int, namedobj, trail_easy_enum, random(enum_getoutputcount(trail_easy_enum)));
        obj_add($coord, $trail_clue_easy, 1, ^lootdrop_duration);
        ~clear_trail_progress;
    }
}


[proc,trail_mediumcluedrop](int $rarity, coord $coord)
if_close;
if (p_finduid(uid) = true) {
    if (map_members = false | ~trail_hasclue_all = true) {
        return;
    }
    def_int $rng = random($rarity);
    if ($rng = 0) {
        def_obj $trail_clue_medium = enum(int, namedobj, trail_medium_enum, random(enum_getoutputcount(trail_medium_enum)));
        obj_add($coord, $trail_clue_medium, 1, ^lootdrop_duration);
        ~clear_trail_progress;
    }
}


[proc,trail_hardcluedrop](int $rarity, coord $coord) // Name leaked from bronze dragon droptable script.
if_close;
if (p_finduid(uid) = true) {
    if (map_members = false | ~trail_hasclue_all = true) {
        return;
    }
    def_int $rng = random($rarity);
    if ($rng = 0) {
        def_obj $trail_clue_hard = enum(int, namedobj, trail_hard_enum, random(enum_getoutputcount(trail_hard_enum)));
        obj_add($coord, $trail_clue_hard, 1, ^lootdrop_duration);
        ~clear_trail_progress;
    }
}

[opobj3,_trail_challenge]
if(inv_totalcat(inv, trail_challenge) > 0 | inv_totalcat(bank, trail_challenge) > 0) {
    mes("You already have a challenge scroll."); // OSRS
    return;
}
@pickup_obj(obj_coord, obj_type, obj_count);

[opobj3,_trail_puzzle]
if(inv_totalcat(inv, trail_puzzle) > 0 | inv_totalcat(bank, trail_puzzle) > 0) {
    mes("You already have a puzzle box."); // OSRS
    return;
}
@pickup_obj(obj_coord, obj_type, obj_count);

[opobj3,_trail_clue_easy] @pickup_cluescroll;
[opobj3,_trail_clue_medium] @pickup_cluescroll;
[opobj3,_trail_clue_hard] @pickup_cluescroll;
[opobj3,_trail_casket_easy] @pickup_cluescroll;
[opobj3,_trail_casket_medium] @pickup_cluescroll;
[opobj3,_trail_casket_hard] @pickup_cluescroll;

[label,pickup_cluescroll]
if(~trail_hasclue_all = true) {
    mes("You already have a clue scroll."); // OSRS
    return;
}
@pickup_obj(obj_coord, obj_type, obj_count);