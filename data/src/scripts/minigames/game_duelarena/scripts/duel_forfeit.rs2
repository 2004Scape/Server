[oploc1,duel_entrance_1] @duel_forfeit;
[oploc1,duel_entrance_2] @duel_forfeit;
[oploc1,duel_entrance_3] @duel_forfeit;
[oploc1,duel_entrance_4] @duel_forfeit;
[oploc1,duel_trapdoor] @duel_forfeit;

[label,duel_forfeit]
if (~duel_arena_forfeit_check = false) {
    return;
}
def_int $choice = ~p_choice2_header("Yes", 1, "No", 2, "Do you wish to forfeit?");
if ($choice = 2) {
    return;
}
if_close;
p_telejump(~duel_arena_finish_coord(coord));
if (.finduid(%duelpartner) = true)  {
    .%duelstatus = ^duelstatus_opponent_resigned;
    queue2(duel_arena_win, 0);
}

def_int $i = 0;
while ($i < inv_size(stakeinv)) {
    if (inv_getobj(stakeinv, $i) ! null) {
        //mes("<oc_debugname(inv_getobj(tempinv, $i))>: <tostring(inv_getnum(tempinv, $i))>");
        inv_movefromslot(stakeinv, inv, $i);
    }
    $i = calc($i + 1);
}

p_stopaction;
~stat_reset_all;
healenergy(10000);
~combat_clearqueue;
~clear_poison;
~update_all(inv_getobj(worn, ^wearpos_rhand));
%duelpartner = null;
%duelstatus = 0;