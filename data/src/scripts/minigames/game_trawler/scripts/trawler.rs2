[debugproc,t_win]
if (npc_find(^trawler_start_center_under, 0_29_75_murphy, 5, 0) = true) {
    %npc_trawler_start = sub(map_clock, 1000);
    %npc_trawler_fish_caught = 100;
}

[proc,trawler_reset]
%npc_trawler_start = null;
%npc_trawler_flood_status = 0;
%npc_trawler_fish_caught = 0;
npc_settimer(0);
def_int $i = 0;
while ($i < enum_getoutputcount(trawler_hulls)) {
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_repaired_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    $i = add($i, 1);
}

$i = 0;
while ($i < enum_getoutputcount(trawler_hulls_flooded)) {
    if (loc_find(enum(int, coord, trawler_hulls_flooded, $i), game_trawler_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    if (loc_find(enum(int, coord, trawler_hulls_flooded, $i), game_trawler_repaired_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    $i = add($i, 1);
}
// nets
if (loc_find(^trawler_start_net1, game_trawler_fish_net_broken1) = true) {
    loc_change(game_trawler_fish_net1, 1);
}
if (loc_find(^trawler_start_net2, game_trawler_fish_net_broken2) = true) {
    loc_change(game_trawler_fish_net2, 1); 
}
if (loc_find(^trawler_flood_net1, game_trawler_fish_net_broken1) = true) {
    loc_change(game_trawler_fish_net1, 1);
}
if (loc_find(^trawler_flood_net2, game_trawler_fish_net_broken2) = true) {
    loc_change(game_trawler_fish_net2, 1); 
}

[ai_timer,0_29_75_murphy]
def_int $player_count = ~playercount_coord_pair_table(trawler_game_zones);
if ($player_count < 1) {
    ~trawler_reset;
    return;
}
if (add(%npc_trawler_start, 1000) < map_clock) {
    ~trawler_win(divide(%npc_trawler_fish_caught, $player_count));
    ~trawler_reset;
    return;
}
npc_settimer(5);
def_int $leak_count = 0;

// increase water
def_int $i = 0;
while ($i < enum_getoutputcount(trawler_hulls)) {
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_leak) = true) {
        $leak_count = add($leak_count, 1);
        %npc_trawler_flood_status = add(%npc_trawler_flood_status, 1);
    }
    if (%npc_trawler_flood_status >= 100) {
        ~trawler_sink;
        ~trawler_reset;
        return;
    } else if (%npc_trawler_flood_status = 30) {
        ~trawler_flood;
    }
    $i = add($i, 1);
}
// max leaks:
// 1p = 3
// 2p = 5
def_int $max_leaks = min(add(multiply($player_count, 2), 1), 9);
def_int $leak_chance = max(divide(32, $player_count), 2);
// add new ship leaks
$i = 0;
while ($i < enum_getoutputcount(trawler_hulls) & $leak_count < $max_leaks) {
    def_coord $hull_coord = enum(int, coord, trawler_hulls, $i);
    if (loc_find($hull_coord, game_trawler_hull) = true | loc_find($hull_coord, game_trawler_repaired_leak) = true) {
        if (random($leak_chance) = 0) { // complete guess
            loc_change(game_trawler_leak, 1000);
            ~sound_synth_area(leak, 0, $hull_coord, 5);

            def_coord $flood_coord = movecoord(loc_coord, 128, 0, 0);
            if (loc_find($flood_coord, game_trawler_hull) = true | loc_find($flood_coord, game_trawler_repaired_leak) = true) {
                loc_change(game_trawler_leak, 1000);
                ~sound_synth_area(leak, 0, $flood_coord, 5);
            }
            if (random(5) = 0) {
                if (.npc_find(^trawler_flood_center_under, 0_31_75_murphy, 5, 0) = true) {
                    .npc_queue(6, 0, 0);
                }
                npc_queue(6, 0, 0);
            }
            $leak_count = add($leak_count, 1);
        }
    }
    $i = add($i, 1);
}
// unflood if water is tossed out
if (%npc_trawler_flood_status < 30) {
    ~trawler_unflood;
}
if (loc_find(^trawler_start_net1, game_trawler_fish_net_broken1) = true | loc_find(^trawler_start_net2, game_trawler_fish_net_broken2) = true) {
    return;
}
if (random(16) = 0) {
    ~trawler_rip_net; // intentional, old videos the fish count doesnt update if net is ripped
}

// from 1697 caught, a player got an equal cut of 20 fish. theres 200 rolls in a trawler game on each player
// https://youtu.be/Yzu2wp2hJOw?list=PLn23LiLYLb1b7Lj_u-lnuUOa40FGWslbp This game, each player got 20 fish
// with a final caught of 1697. Means a 1/10 chance per roll for each player
$i = 0;
while ($i < $player_count) {
    if (random(10) = 0) {
        %npc_trawler_fish_caught = add(%npc_trawler_fish_caught, 1);
    }
    $i = add($i, 1);
}

[proc,trawler_rip_net]
if (loc_find(^trawler_start_net1, game_trawler_fish_net1) = true) {
    loc_change(game_trawler_fish_net_broken1, 1000);
}
if (loc_find(^trawler_start_net2, game_trawler_fish_net2) = true) {
    loc_change(game_trawler_fish_net_broken2, 1000); 
}
if (loc_find(^trawler_flood_net1, game_trawler_fish_net1) = true) {
    loc_change(game_trawler_fish_net_broken1, 1000);
}
if (loc_find(^trawler_flood_net2, game_trawler_fish_net2) = true) {
    loc_change(game_trawler_fish_net_broken2, 1000); 
}
huntall(^trawler_start_center_under, 8, 0);
while (huntnext = true) {
    queue(trawler_rip_net, 0);
}
huntall(^trawler_start_center, 8, 0);
while (huntnext = true) {
    queue(trawler_rip_net, 0);
}
huntall(^trawler_flood_center_under, 8, 0);
while (huntnext = true) {
    queue(trawler_rip_net, 0);
}
huntall(^trawler_flood_center, 8, 0);
while (huntnext = true) {
    queue(trawler_rip_net, 0);
}

[queue,trawler_rip_net]
mes("The net has ripped!");
~mesbox("The net has ripped!|You can't catch anything whilst the net is ripped!"); // https://imgur.com/sIkyhcN

[proc,trawler_flood]
huntall(^trawler_start_center_under, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_teleport, 0, movecoord(coord, 128, 0, 0));
}
huntall(^trawler_start_center, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_teleport, 0, movecoord(coord, 128, 0, 0));
}


[proc,trawler_unflood]
huntall(^trawler_flood_center_under, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_teleport, 0, movecoord(coord, -128, 0, 0));
}
huntall(^trawler_flood_center, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_teleport, 0, movecoord(coord, -128, 0, 0));
}

[queue,trawler_player_teleport](coord $coord)
if (~inzone_coord_pair_table(trawler_game_zones, coord) = false) {
    return;
}
if (~inzone_coord_pair_table(trawler_wreck_zones, $coord) = true) {
    ~bas_set_all(human_swim);
    p_animprotect(^true); // disable anims
    bas_running(null); // disable running
    cam_reset;
}
p_teleport($coord);
p_stopaction;


[proc,trawler_win](int $rolls)
huntall(^trawler_start_center_under, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_win, 0, $rolls);
}
huntall(^trawler_start_center, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_win, 0, $rolls);
}
huntall(^trawler_flood_center_under, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_win, 0, $rolls);
}
huntall(^trawler_flood_center, 8, 0);
while (huntnext = true) {
    if_close;
    queue(trawler_player_win, 0, $rolls);
}
