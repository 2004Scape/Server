[ai_timer,murphy_nonflood] @trawler_controller;
[ai_timer,murphy_flood] @trawler_controller;


[label,trawler_controller]
def_int $player_count = ~playercount_coord_pair_table(trawler_game_zones);
if ($player_count < 1) {
    ~trawler_reset;
    return;
}
if (add(%npc_trawler_start, 1030) < map_clock) {
    ~trawler_win(divide(%npc_trawler_fish_caught, $player_count));
    ~trawler_reset;
    return;
}

npc_settimer(5);

// "Murphy will not be much of a help around the boat, for he will just yell orders at you. 
// He will say things such as "My mother can bail better than you", "Nooooooo", or "Fix that net". 
// One useful thing he will say is how much time is left, but don?t pay attention to this but only to your tasks at hand."
// - https://web.archive.org/web/20041127044153/https://runescapecommunity.com/index.php%3fshowtopic%3d101380
def_int $minutes = sub(10, divide(sub(map_clock, %npc_trawler_start), 100));
def_int $ticks_near_minute = modulo(sub(map_clock, %npc_trawler_start), 100);
if ($minutes > 0 & $ticks_near_minute > -3 & $ticks_near_minute < 3) {
    npc_say("<~pluralise($minutes, "minute")> left!");
}

// increase water
def_int $leak_count = 0;
def_int $i = 0;
while ($i < enum_getoutputcount(trawler_hulls)) {
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_leak) = true) {
        $leak_count = add($leak_count, 1);
        %npc_trawler_flood_status = add(%npc_trawler_flood_status, 1);
    }
    $i = add($i, 1);
}
// max leaks:
// 1p = 4
// 2p = 7
def_int $max_leaks = min(add(multiply($player_count, 3), 1), 9);
def_int $leak_chance = max(divide(32, $player_count), 2);
// add new ship leaks
$i = 0;
while ($i < enum_getoutputcount(trawler_hulls) & $leak_count < $max_leaks) {
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_hull) = true | loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_repaired_leak) = true) {
        if (random($leak_chance) = 0) { // complete guess
            ~trawler_leak;
            if (random(5) = 0) {
                npc_queue(6, 0, 0);
            }
            $leak_count = add($leak_count, 1);
        }
    }
    $i = add($i, 1);
}
// handle ship events
if (%npc_trawler_flood_status >= 100) {
    ~trawler_sink;
    ~trawler_reset;
    return;
} else if (%npc_trawler_flood_status = 0 & npc_type = murphy_flood) {
    ~trawler_unflood;
    if (.npc_find(^trawler_start_center_under, murphy_nonflood, 5, 0) = true) {
        .%npc_trawler_fish_caught = %npc_trawler_fish_caught;
        .%npc_trawler_flood_status = %npc_trawler_flood_status;
        .%npc_trawler_start = %npc_trawler_start;
        .npc_settimer(5);
        npc_settimer(0);
        return;
    }
} else if (%npc_trawler_flood_status >= 30 & npc_type = murphy_nonflood) {
    ~trawler_flood;
    if (.npc_find(^trawler_flood_center_under, murphy_flood, 5, 0) = true) {
        .%npc_trawler_fish_caught = %npc_trawler_fish_caught;
        .%npc_trawler_flood_status = %npc_trawler_flood_status;
        .%npc_trawler_start = %npc_trawler_start;
        .npc_settimer(5);
        npc_settimer(0);
        return;
    }
}

if (random(5) = 0) { // handle murphy's sayings
    if (loc_find(^trawler_start_net1, game_trawler_fish_net_broken1) = true | loc_find(^trawler_start_net2, game_trawler_fish_net_broken2) = true) {
        npc_say("Arrh! Check that net!");
        return;
    }
    if (%npc_trawler_flood_status = 0 & npc_type = murphy_nonflood) {
        npc_say("Let's get this net full with fishies!"); //https://youtu.be/scKmu6QETRw?t=298
    } else if (%npc_trawler_flood_status < 20 & npc_type = murphy_nonflood) {
        switch_int (random(3)) {
            case 0 : npc_say("Let's get this net full with fishies!");
            case 1 : npc_say("Blistering barnacles!");
            case 2 : npc_say("That's the stuff, fill those holes!");
        }
    } else if (%npc_trawler_flood_status < 30 & npc_type = murphy_nonflood) {
        switch_int (random(2)) {
            case 0 : npc_say("The water is coming in matey!");
            case 1 : npc_say("You'll need to start bailing soon!");
        }
    } else if (%npc_trawler_flood_status < 80) {
        switch_int (random(4)) {
            case 0 : npc_say("It's a fierce sea today traveller.");
            case 1 : npc_say("Land lubbers!");
            case 2 : npc_say("My mother could bail better than that!");
            case 3 : npc_say("We'll all end up in a watery grave!");
        }
    } else if (%npc_trawler_flood_status < 100) {
        switch_int (random(4)) {
            case 0 : npc_say("Noooooo!");
            case 1 : npc_say("We're all doomed!");
            case 2 : npc_say("We're going under!");
            case 3 : npc_say("Mummy!");
        }
    }
}
if (random(16) = 0) {
    if (loc_find(^trawler_start_net1, game_trawler_fish_net_broken1) = false & loc_find(^trawler_start_net2, game_trawler_fish_net_broken2) = false) {    
        ~trawler_rip_net;
    }
}

// from 1697 caught, a player got an equal cut of 20 fish. theres 200 rolls in a trawler game on each player
// https://youtu.be/Yzu2wp2hJOw?list=PLn23LiLYLb1b7Lj_u-lnuUOa40FGWslbp This game, each player got 20 fish
// with a final caught of 1697. Means a 1/10 chance per roll for each player
$i = 0;
while ($i < $player_count) {
    if (random(10) = 0) {
        %npc_trawler_fish_caught = add(%npc_trawler_fish_caught, 1);
    }
    $i = add($i, 1);
}

[proc,trawler_reset]
if (npc_find(^trawler_flood_center_under, murphy_flood, 5, 0) = true) {
    %npc_trawler_start = null;
    %npc_trawler_flood_status = 0;
    %npc_trawler_fish_caught = 0;
    npc_settimer(0);
}
if (npc_find(^trawler_start_center_under, murphy_nonflood, 5, 0) = true) {
    %npc_trawler_start = null;
    %npc_trawler_flood_status = 0;
    %npc_trawler_fish_caught = 0;
    npc_settimer(0);
}
def_int $i = 0;
while ($i < enum_getoutputcount(trawler_hulls)) {
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    if (loc_find(enum(int, coord, trawler_hulls, $i), game_trawler_repaired_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    $i = add($i, 1);
}

$i = 0;
while ($i < enum_getoutputcount(trawler_hulls_flooded)) {
    if (loc_find(enum(int, coord, trawler_hulls_flooded, $i), game_trawler_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    if (loc_find(enum(int, coord, trawler_hulls_flooded, $i), game_trawler_repaired_leak) = true) {
        loc_change(game_trawler_hull, 1);
    }
    $i = add($i, 1);
}
// nets
if (loc_find(^trawler_start_net1, game_trawler_fish_net_broken1) = true) {
    loc_change(game_trawler_fish_net1, 1);
}
if (loc_find(^trawler_start_net2, game_trawler_fish_net_broken2) = true) {
    loc_change(game_trawler_fish_net2, 1); 
}
if (loc_find(^trawler_flood_net1, game_trawler_fish_net_broken1) = true) {
    loc_change(game_trawler_fish_net1, 1);
}
if (loc_find(^trawler_flood_net2, game_trawler_fish_net_broken2) = true) {
    loc_change(game_trawler_fish_net2, 1); 
}

[proc,trawler_login]
if (~inzone_coord_pair_table(trawler_game_zones, coord) = true | ~inzone_coord_pair_table(trawler_wreck_zones, coord) = true) {
    p_teleport(^trawler_escape);
}