[login,_]
mes("Welcome to RuneScape.");
if (map_localdev = false) {
    mes("The server is currently in the Alpha testing phase.");
    mes("Character progression will reset when Beta testing begins.");
    mes("Available commands during this phase can be found by running ::help.");
}
cam_reset;
//if_close; // come back to this if this proves to be problematic, commented so welcome screen is visible

%music_mode = 1; // set to auto on login
if (%game_brightness = 0) {
    // sane defaults for game controls
    %game_brightness = 2;
    %music_volume = 2;
    %sound_volume = 2;
}

// register the soft timer that handles replenishing stats
softtimer(stat_replenish, 100);
// same for health
softtimer(health_replenish, 100);
// random event timer
settimer(general_macro_events, 500);
// chest macro gas 
~check_chest_macro_gas;
// for logout out during a general macro event, they respawn when you log back in
// queue: 
// - https://youtu.be/T0ulsgorBkY?list=PLn23LiLYLb1Y3P9S9qZbijcJihiD416jT
// - https://youtu.be/HwGAzcmvF9k?list=PLn23LiLYLb1Y3P9S9qZbijcJihiD416jT
// npc spawns only after interface is closed
queue(macro_event_general_check, 0);
// so pk skulls persist after logging back in
~set_pk_skull_login;
// so antifire persists after logging back in
~set_antifire_login;
// so antipoison persists after logging back in
~set_antipoison_login;
// if player is in a duel, they are removed from the duel
~duel_arena_login;
// if player is in a gnomeball game, they login outside of the arena
~gnomeball_login;

if (%tutorial_progress < ^tutorial_complete) {
     if (%tutorial_progress = 5 & inzone(0_48_48_14_27, 0_48_48_27_41, coord) = false) {
        // This is a check to not bork every account that currently has a tutorial complete progress of 5.
        // Remove after alpha!
        %tutorial_progress = ^tutorial_complete;
        last_login_info;
        ~initalltabs;
    } else if (~in_tutorial_island(coord) = false & %tutorial_progress < ^tutorial_complete) {
        // Checking if you're off tutorial island but it's not complete
        ~update_bas;
        @tutorial_complete;
    } else {
        // Starting tutorial regularly
        ~update_bas;
        @start_tutorial;
    }
} else {
    last_login_info;
    ~initalltabs;
}
// after init tabs
~update_all(inv_getobj(worn, ^wearpos_rhand));
~update_stall_trade_timers;

[proc,initalltabs]
~update_weapon_category(inv_getobj(worn, ^wearpos_rhand));
if_settab(stats, ^tab_skills);
if_settab(questlist, ^tab_quest_journal);
~update_quests;

inv_transmit(inv, inventory:inv);
if_settab(inventory, ^tab_inventory);

inv_transmit(worn, wornitems:wear);
if_settab(wornitems, ^tab_wornitems);

if_settab(prayer, ^tab_prayer);
if_settab(magic, ^tab_magic);
if_settab(friends, ^tab_friends);
if_settab(ignore, ^tab_ignore);
if_settab(logout, ^tab_logout);
if_settab(controls, ^tab_player_controls);
if (lowmemory = true) {
    if_settab(options_ld, ^tab_game_options);
    if_settab(music_ld, ^tab_musicplayer);
} else {
    if_settab(options, ^tab_game_options);
    if_settab(music, ^tab_musicplayer);
}
