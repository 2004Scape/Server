[opobj3,_] @pickup_obj(obj_coord, obj_type, obj_count);

[label,pickup_obj](coord $coord, namedobj $obj, int $amount)
if (distance(coord, $coord) = 0) {
    @pickup_obj_floor($obj, $amount);
} else {
    @pickup_obj_table($obj, $amount);
}

[label,pickup_obj_floor](namedobj $obj, int $amount)
if (~pickup_obj_check_for_space($obj, $amount) = false) {
    return;
}
anim(null, 0);
obj_takeitem(inv);
sound_synth(pick2, 0, 0);

[label,pickup_obj_table](namedobj $obj, int $amount)
if (~pickup_obj_check_for_space($obj, $amount) = false) {
    return;
}
anim(null, 0);
p_delay(0);
anim(human_pickuptable, 0);
obj_takeitem(inv);
sound_synth(pick2, 0, 0);

[proc,pickup_loc_floor](coord $coord, namedobj $replacement, int $respawn_ticks, boolean $worldpop_dependant)
anim(human_pickupfloor, 0);
p_teleport($coord);
p_delay(0);
sound_synth(pick, 0, 0);

if ($worldpop_dependant = true) {
    $respawn_ticks = ~scale_by_playercount($respawn_ticks);
}

loc_del($respawn_ticks);
inv_add(inv, $replacement, 1);

[proc,pickup_obj_check_for_space](namedobj $obj, int $amount)(boolean)
if (inv_itemspace(inv, $obj, $amount, inv_size(inv)) = false) {
    mes("You don't have enough inventory space to hold that item.");
    return(false);
}
return(true);
