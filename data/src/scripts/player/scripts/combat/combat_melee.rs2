[label,combat_begin_melee]
mes("begin combat melee");
~combat_melee_swing;
p_delay(2); // TODO dont use delay just for test
~combat_melee_defend;

// do a combat melee swing
[proc,combat_melee_swing]
def_namedobj $weapon = inv_getobj(worn, 3);
def_int $style = ~combat_get_style_for_obj($weapon);
anim(~combat_melee_swing_anim($style), 0);
sound_synth(~combat_melee_swing_synth($style), 0, 0);

// do a combat melee defend
[proc,combat_melee_defend]
def_namedobj $weapon = inv_getobj(worn, 3);
def_int $style = ~combat_get_style_for_obj($weapon);
anim(~combat_melee_defend_anim($style), 0);

// returns the swing anim to use for this melee combat
[proc,combat_melee_swing_anim](int $style)(seq)
switch_int ($style) {
    case ^unarmed : return(~combat_swing_anim_unarmed);
    case ^weapon_2h_sword : return(~combat_swing_anim_2h_sword);
    case ^weapon_axe : return(~combat_swing_anim_axe);
    case ^weapon_blunt : return(~combat_swing_anim_blunt);
    case ^weapon_pickaxe : return(~combat_swing_anim_pickaxe);
    case ^weapon_scythe : return(~combat_swing_anim_scythe);
    case ^weapon_slash : return(~combat_swing_anim_slashing);
    case ^weapon_spear : return(~combat_swing_anim_spear);
    case ^weapon_stab : return(~combat_swing_anim_stabbing);
    case default : return(~combat_swing_anim_unarmed);
}

// returns the swing synth to use for this melee combat
[proc,combat_melee_swing_synth](int $style)(synth)
switch_int ($style) {
    case ^unarmed : return(~combat_swing_synth_unarmed);
    case ^weapon_2h_sword : return(~combat_swing_synth_2h_sword);
    case ^weapon_axe : return(~combat_swing_synth_axe);
    case ^weapon_blunt : return(~combat_swing_synth_blunt);
    case ^weapon_pickaxe : return(~combat_swing_synth_pickaxe);
    case ^weapon_scythe : return(~combat_swing_synth_scythe);
    case ^weapon_slash : return(~combat_swing_synth_slashing);
    case ^weapon_spear : return(~combat_swing_synth_spear);
    case ^weapon_stab : return(~combat_swing_synth_stabbing);
    case default : return(~combat_swing_synth_unarmed);
}

// returns the defend anim to use for this melee combat
[proc,combat_melee_defend_anim](int $style)(seq)
switch_int ($style) {
    case ^unarmed : return(~combat_defend_anim_unarmed);
    case ^weapon_2h_sword : return(~combat_defend_anim_2h_sword);
    case ^weapon_axe : return(~combat_defend_anim_axe);
    case ^weapon_blunt : return(~combat_defend_anim_blunt);
    case ^weapon_pickaxe : return(~combat_defend_anim_pickaxe);
    case ^weapon_scythe : return(~combat_defend_anim_scythe);
    case ^weapon_slash : return(~combat_defend_anim_slashing);
    case ^weapon_spear : return(~combat_defend_anim_spear);
    case ^weapon_stab : return(~combat_defend_anim_stabbing);
    case default : return(~combat_defend_anim_unarmed);
}