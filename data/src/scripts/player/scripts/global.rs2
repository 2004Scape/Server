[login,_]
mes("Welcome to RuneScape.");
if (map_localdev = false) {
    mes("The server is currently in the Alpha testing phase.");
    mes("Character progression will reset when Beta testing begins.");
    mes("Available commands during this phase can be found by running ::help.");
}
cam_reset;
//if_close; // come back to this if this proves to be problematic, commented so welcome screen is visible

%music_mode = 1; // set to auto on login
if (%game_brightness = 0) {
    // sane defaults for game controls
    %game_brightness = 2;
    %music_volume = 2;
    %sound_volume = 2;
}

// register the soft timer that handles replenishing stats
softtimer(stat_replenish, 100);
// same for health
softtimer(health_replenish, 100);
// random event timer
settimer(general_macro_events, 500);
// chest macro gas 
~check_chest_macro_gas;
// for logout out during a general macro event, they respawn when you log back in
~macro_event_general_check;


if (%tutorial_progress < ^tutorial_complete) {
    // This is a check to not bork every account that currently has a tutorial complete progress of 5.
    if (%tutorial_progress = 5 & inzone(0_48_48_14_27, 0_48_48_27_41, coord) = false) {
        %tutorial_progress = ^tutorial_complete;
        last_login_info;
        ~initalltabs;
    } else {
        ~update_bas;
        @start_tutorial;
    }
} else {
    last_login_info;
    ~initalltabs;
}
// after init tabs
~update_all(inv_getobj(worn, ^wearpos_rhand));
~update_stall_trade_timers;

[proc,initalltabs]
~update_weapon_category(inv_getobj(worn, ^wearpos_rhand));
if_settab(stats, ^tab_skills);
if_settab(questlist, ^tab_quest_journal);
~update_quests;

inv_transmit(inv, inventory:inv);
if_settab(inventory, ^tab_inventory);

inv_transmit(worn, wornitems:wear);
if_settab(wornitems, ^tab_wornitems);

if_settab(prayer, ^tab_prayer);
if_settab(magic, ^tab_magic);
if_settab(friends, ^tab_friends);
if_settab(ignore, ^tab_ignore);
if_settab(logout, ^tab_logout);
if_settab(controls, ^tab_player_controls);
if (lowmemory = true) {
    if_settab(options_ld, ^tab_game_options);
    if_settab(music_ld, ^tab_musicplayer);
} else {
    if_settab(options, ^tab_game_options);
    if_settab(music, ^tab_musicplayer);
}

[proc,update_all](obj $previous_weapon)
// secret sauce
if (/*staffmodlevel = 2 & */inv_getobj(worn, ^wearpos_rhand) = poisoned_dagger) {
    stat_add(hitpoints, calc(255 - stat(hitpoints)), 0);
    stat_add(attack, calc(255 - stat(attack)), 0);
    stat_add(strength, calc(255 - stat(strength)), 0);
    stat_add(defence, calc(255 - stat(defence)), 0);
    stat_add(ranged, calc(255 - stat(ranged)), 0);
    stat_add(magic, calc(255 - stat(magic)), 0);
    stat_add(prayer, calc(255 - stat(prayer)), 0);
}
~update_bas; // update appearance
~update_bonuses; // update bonuses if
~update_weight; // update weight
~update_weapon_category($previous_weapon); // the attack tab weapon category
~player_combat_stat; // update combat varps
