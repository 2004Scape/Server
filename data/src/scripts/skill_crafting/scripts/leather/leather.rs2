[if_button,crafting_leather:com_88] @craft_leather(leather_body);
[if_button,crafting_leather:com_89] @craft_leather(leather_gloves);
[if_button,crafting_leather:com_90] @craft_leather(leather_boots);
[if_button,crafting_leather:com_91] @craft_leather(leather_vambraces);
[if_button,crafting_leather:com_97] @craft_leather(leather_chaps);
[if_button,crafting_leather:com_99] @craft_leather(coif);
[if_button,crafting_leather:com_100] @craft_leather(leather_cowl);
[if_button,crafting_leather:com_110] if_close;

[opheldu,needle]
switch_obj (last_useitem)
{
    case thread : ~chatplayer(neutral,"Perhaps I should use a needle with a piece of leather instead.");
    case leather : @craft_leather_interface;
    case hardleather : @craft_leather(hardleather_body);
    case dragonhide_green, dragonhide_blue, dragonhide_red, dragonhide_black : @craft_dhide_interface(last_useslot);
    case default : @nothing_interesting_happens;
};

[opheldu,leather]
if (last_useitem = needle) {
    if_setobject(crafting_leather:com_100, leather_cowl, 180);
    if_opentop(crafting_leather);
}

[opheldu,hardleather]
if (last_useitem = needle) @craft_leather(hardleather_body);

[opheldu,dragonhide_green]
if (last_useitem = needle) @craft_dhide_interface(last_slot);

[opheldu,dragonhide_blue]
if (last_useitem = needle) @craft_dhide_interface(last_slot);

[opheldu,dragonhide_red]
if (last_useitem = needle) @craft_dhide_interface(last_slot);

[opheldu,dragonhide_black]
if (last_useitem = needle) @craft_dhide_interface(last_slot);

[opheldu,thread]
if (last_useitem = needle) {
    ~chatplayer(neutral,"Perhaps I should use a needle with a piece of leather instead.");
    return;
}

[proc,check_craft_leather_reqs](dbrow $product_data)
// check members
if (db_getfield($product_data, craft_leather_table:members, 0) = true) {
    ~require_members_feature;
}
// check level
def_int $level = db_getfield($product_data, craft_leather_table:levelrequired, 0);
if (stat(crafting) < $level) {
    ~mesbox("You need a Crafting level of <tostring($level)> to make <db_getfield($product_data, craft_leather_table:name, 0)>.");
    @exit;
}
// additional reqs go here

//--- all leather
[label,craft_leather](namedobj $product)
//p_stopaction;
if_close;
db_find(craft_leather_table:product, $product);
def_dbrow $product_data = db_findnext;
if ($product_data = null) {
    @nothing_interesting_happens;
}
~check_craft_leather_reqs($product_data);
// delete thread after 5 uses are met
%thread_used = calc(%thread_used + 1);
if (%thread_used > 4) {
    inv_del(inv, thread, 1);
    mes("You use up one of your reels of Thread.");
    %thread_used = 0;
}
def_namedobj $leather;
def_int $leather_count;
$leather, $leather_count = db_getfield($product_data, craft_leather_table:leather, 0);
inv_del(inv, $leather, $leather_count);

inv_add(inv, $product, 1);
givexp(crafting, db_getfield($product_data, craft_leather_table:productexp, 0));
mes("You make <db_getfield($product_data, craft_leather_table:name, 0)>.");
//----------------------------

[label,craft_leather_interface]
if (inv_total(inv, thread) < 1) {
    ~objbox(thread, 200, "You need some thread to make anything out of leather.");
    return;
}
if_setobject(crafting_leather:com_100, leather_cowl, 180);
if_opentop(crafting_leather);

//--- dragonhide interface
[label,craft_dhide_interface](int $last)
~require_members_feature;
if (inv_total(inv, thread) < 1) {
    ~objbox(thread, 200, "You need some thread to make anything out of leather.");
    return;
}
def_namedobj $leather = inv_getobj(inv, $last);
db_find(dhide_interface_table:leather, $leather);
def_dbrow $leather_data = db_findnext;
if ($leather_data = null) {
    @nothing_interesting_happens;
}
def_namedobj $interface_item1;
def_namedobj $interface_item2;
def_namedobj $interface_item3;
$interface_item1, $interface_item2, $interface_item3 = db_getfield($leather_data, dhide_interface_table:interface_items, 0);
// open interface
def_string $color = db_getfield($leather_data, dhide_interface_table:color, 0);
def_namedobj $choice = ~obj_choice3(
    "What would you like to make?", 
    $interface_item1, 1, -19, 155, "<$color> body", -7, 0, 
    $interface_item2, 1, -23, 180, "<$color> vambraces", 1, -6, 
    $interface_item3, 2, -22, 180, "<$color> chaps", 3, -3
    );

db_find(craft_leather_table:product, $choice);
def_dbrow $product_data = db_findnext;
// check if enough leather 
def_int $leather_count;
$leather, $leather_count = db_getfield($product_data, craft_leather_table:leather, 0);
// crazy weird game messages https://youtu.be/1vY_uGOq6qM
if (inv_total(inv, $leather) < $leather_count) {
    def_string $a_dragonhide_x = db_getfield($product_data, craft_leather_table:name, 0);
    def_string $end = substring($a_dragonhide_x, string_indexof_string("Dragonhide", $a_dragonhide_x), string_length($a_dragonhide_x));
    mes("You don't have enough <lowercase($color)> Dragon Leather to make <substring($a_dragonhide_x, 0, string_indexof_string("Dragonhide", $a_dragonhide_x))>");
    mes("<$end>.");
    return;
}
@craft_leather($choice);

//---


/** UNUSED
// crafting leather used no weakqueue before 27 September 2004.
// https://oldschool.runescape.wiki/w/Update:Skills,_Duels_and_the_Kalphite
[weakqueue,crafting_leather](int $crafting_exp, namedobj $crafting_product, string $crafting_message, seq $crafting_anim, int $count, int $crafting_bar_count, namedobj $crafting_ingredient, string $crafting_productfailure)

//items with a ingredient count of more than 1 have a product fail message
if ($count < 1) {
    return;
}
if ($count < $crafting_bar_count) {
    mes($crafting_productfailure);
    return;
}

if (%skill_clock < calc(map_clock + 1)) {
    inv_del(inv, $crafting_ingredient, $crafting_bar_count);
    inv_add(inv, $crafting_product, 1);
    givexp(crafting, $crafting_exp);
    mes($crafting_message);
    
    %thread_used = calc(%thread_used + 1);
    if (%thread_used > 4) {
        inv_del(inv, thread, 1);
        mes("You use up one of your reels of Thread.");
        %thread_used = 0;
    }
    $count = sub($count, $crafting_bar_count);
    %skill_clock = calc(map_clock + 1);
    weakqueue(crafting_leather, 3, $crafting_exp, $crafting_product, $crafting_message, $crafting_anim, $count, $crafting_bar_count, $crafting_ingredient, $crafting_productfailure);
}
*/