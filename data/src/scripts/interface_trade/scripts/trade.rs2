[proc,moveallinv](inv $src, inv $dest)
def_int $size = inv_size($src);
def_int $i = 0;
while ($i < $size) {
    def_obj $obj = inv_getobj($src, $i);
    if ($obj ! null) {
        inv_moveitem($src, $dest, $obj, inv_total($src, $obj));
    }
    $i = add($i, 1);
}

[proc,.moveallinv](inv $src, inv $dest)
def_int $size = .inv_size($src);
def_int $i = 0;
while ($i < $size) {
    def_obj $obj = .inv_getobj($src, $i);
    if ($obj ! null) {
        .inv_moveitem($src, $dest, $obj, .inv_total($src, $obj));
    }
    $i = add($i, 1);
}


// ----

[opplayer4,_]
if (~in_duel_arena = true) {
    mes("You can't trade in a duel arena."); // https://youtu.be/nUwvlFkcsqA?t=19
    return; 
}
if (.busy = true) {
    mes("<.displayname> is busy at the moment.");
    return;
}

// this message always sends, even if this player is responding to a trade request
mes("Sending trade offer...");
%tradepartner = .uid;

if (.%tradepartner = uid) {
    if_settext(trademain:status, "");
    if_settext(trademain:otherplayer, "Trading With: <.displayname>");
    inv_clear(tempinv);
    inv_transmit(tempinv, trademain:inv);
    invother_transmit(.uid, tempinv, trademain:otherinv);
    inv_transmit(inv, tradeside:inv);

    .if_settext(trademain:status, "");
    .if_settext(trademain:otherplayer, "Trading With: <displayname>");
    .inv_clear(tempinv);
    .inv_transmit(tempinv, trademain:inv);
    .invother_transmit(uid, tempinv, trademain:otherinv);
    .inv_transmit(inv, tradeside:inv);

    if_openmainmodalsideoverlay(trademain, tradeside);
    .if_openmainmodalsideoverlay(trademain, tradeside);

    %tradestatus = 0;
    .%tradestatus = 0;
} else {
    .mes("<displayname>:tradereq:");
}

[if_button,trademain:accept]
%tradestatus = 1;

if (.finduid(%tradepartner) = true) {
    if (.%tradestatus = 1) {
        inv_stoptransmit(trademain:inv);
        inv_stoptransmit(trademain:otherinv);
        inv_stoptransmit(tradeside:inv);

        .inv_stoptransmit(trademain:inv);
        .inv_stoptransmit(trademain:otherinv);
        .inv_stoptransmit(tradeside:inv);

        if (~enough_trade_space = false) {
            mes("Other player doesn't have enough inventory space for this trade.");
            .mes("You don't have enough inventory space for this trade.");
            if_close;
            .if_close;
            return;
        }

        if (~.enough_trade_space = false) {
            mes("You don't have enough inventory space for this trade.");
            .mes("Other player doesn't have enough inventory space for this trade.");
            if_close;
            .if_close;
            return;
        }

        def_int $tempinvused = sub(inv_size(tempinv), inv_freespace(tempinv));
        if ($tempinvused < 1) {
            if_settext(tradeconfirm:inv_nothing, "Absolutely nothing!");
            .if_settext(tradeconfirm:otherinv_nothing, "Absolutely nothing!");
        } else if ($tempinvused < 14) {
            if_settext(tradeconfirm:inv_nothing, "");
            .if_settext(tradeconfirm:otherinv_nothing, "");

            inv_transmit(tempinv, tradeconfirm:inv1);
            .invother_transmit(uid, tempinv, tradeconfirm:otherinv1);
        } else {
            if_settext(tradeconfirm:inv_nothing, "");
            .if_settext(tradeconfirm:otherinv_nothing, "");

            inv_transmit(tempinv, tradeconfirm:inv2);
            .invother_transmit(uid, tempinv, tradeconfirm:otherinv2);
        }

        def_int $other_tempinvused = sub(inv_size(tempinv), .inv_freespace(tempinv));
        if ($other_tempinvused < 1) {
            if_settext(tradeconfirm:otherinv_nothing, "Absolutely nothing!");
            .if_settext(tradeconfirm:inv_nothing, "Absolutely nothing!");
        } else if ($other_tempinvused < 14) {
            if_settext(tradeconfirm:otherinv_nothing, "");
            .if_settext(tradeconfirm:inv_nothing, "");

            invother_transmit(.uid, tempinv, tradeconfirm:otherinv1);
            .inv_transmit(tempinv, tradeconfirm:inv1);
        } else {
            if_settext(tradeconfirm:otherinv_nothing, "");
            .if_settext(tradeconfirm:inv_nothing, "");

            invother_transmit(.uid, tempinv, tradeconfirm:otherinv2);
            .inv_transmit(tempinv, tradeconfirm:inv2);
        }

        if_openmainmodal(tradeconfirm);
        .if_openmainmodal(tradeconfirm);

        if_settext(tradeconfirm:com_91, "Are you sure you want to make this trade?");
        .if_settext(tradeconfirm:com_91, "Are you sure you want to make this trade?");

        %tradestatus = 2;
        .%tradestatus = 2;
    } else {
        if_settext(trademain:status, "Waiting for other player..."); // https://youtu.be/uSO-ilQk5XY?list=PLn23LiLYLb1bQ7Hwp77KoNBjKvpZQTfJT&t=817
        .if_settext(trademain:status,"Other player has accepted."); // https://storage.googleapis.com/tannerdino/images/06Dec14-16.jpg
    }
}

[proc,enough_trade_space]()(boolean)
// check if contents of tempinv fits in other player's inv
def_int $size = inv_size(tempinv);
def_int $slot = 0;
while ($slot < $size) {
    def_obj $obj = inv_getobj(tempinv, $slot);
    def_int $num = inv_getnum(tempinv, $slot);

    if ($obj ! null) {
        if (.inv_itemspace(inv, $obj, $num, sub(.inv_size(inv), $slot)) = false) {
            return(false);
        }
    }

    $slot = add($slot, 1);
}
return(true);

[proc,.enough_trade_space]()(boolean)
def_int $size = .inv_size(tempinv);
def_int $slot = 0;
while ($slot < $size) {
    def_obj $obj = .inv_getobj(tempinv, $slot);
    def_int $num = .inv_getnum(tempinv, $slot);

    if ($obj ! null) {
        if (inv_itemspace(inv, $obj, $num, sub(inv_size(inv), $slot)) = false) {
            return(false);
        }
    }

    $slot = add($slot, 1);
}
return(true);

[if_close,trademain]
inv_stoptransmit(trademain:inv);
inv_stoptransmit(trademain:otherinv);
inv_stoptransmit(tradeside:inv);

~moveallinv(tempinv, inv);

if (.finduid(%tradepartner) = true) {
    .%tradepartner = null;
    .if_close;
    if (%tradestatus ! 1 & .%tradestatus ! 1) {
        .mes("Other player declined trade."); // osrs
    }
}

%tradepartner = null;

[if_button,tradeconfirm:accept]
%tradestatus = 3;

if (.finduid(%tradepartner) = true) {
    if (.%tradestatus = 3) {
        mes("Accepted trade.");
        .mes("Accepted trade.");

        both_moveinv(tempinv, inv);
        .both_moveinv(tempinv, inv);

        %tradepartner = null;
        .%tradepartner = null;

        if_close;
        .if_close;
    } else {
        .if_settext(tradeconfirm:com_91, "Other player has accepted."); // osrs
        if_settext(tradeconfirm:com_91, "Waiting for other player."); // https://youtu.be/uSO-ilQk5XY?list=PLn23LiLYLb1bQ7Hwp77KoNBjKvpZQTfJT&t=819
    }
}

[if_close,tradeconfirm]
inv_stoptransmit(tradeconfirm:inv1);
inv_stoptransmit(tradeconfirm:inv2);
inv_stoptransmit(tradeconfirm:otherinv1);
inv_stoptransmit(tradeconfirm:otherinv2);

if (%tradestatus ! 3) {
    ~moveallinv(tempinv, inv);

    if (.finduid(%tradepartner) = true) {
        .%tradepartner = null;
        .if_close;
        .mes("Other player declined trade."); // osrs
    }

    %tradepartner = null;
}

// ----

[inv_button1,trademain:inv] @removefromtrade(last_slot, 1);
[inv_button2,trademain:inv] @removefromtrade(last_slot, 5);
[inv_button3,trademain:inv] @removefromtrade(last_slot, 10);
[inv_button4,trademain:inv] @removefromtrade(last_slot, ^max_32bit_int);
[inv_button5,trademain:inv] @removefromtrade(last_slot, null);

[label,removefromtrade](int $slot, int $amount)
if ($amount <= 0) {
    p_countdialog;
    if (last_int <= 0) return;
    $amount = last_int;
}

def_obj $obj = inv_getobj(tempinv, $slot);
def_int $total = inv_total(tempinv, $obj);
if ($amount < $total) $total = $amount;
inv_moveitem(tempinv, inv, $obj, $total);

%tradestatus = 0;
if_settext(trademain:status, "");
if (.finduid(%tradepartner) = true) {
    .%tradestatus = 0;
    .if_settext(trademain:status, "");
}

// ----

[inv_button1,tradeside:inv] @movetotrade(last_slot, 1);
[inv_button2,tradeside:inv] @movetotrade(last_slot, 5);
[inv_button3,tradeside:inv] @movetotrade(last_slot, 10);
[inv_button4,tradeside:inv] @movetotrade(last_slot, ^max_32bit_int);
[inv_button5,tradeside:inv] @movetotrade(last_slot, null);

[label,movetotrade](int $slot, int $amount)
if ($amount <= 0) {
    p_countdialog;
    if (last_int <= 0) return;
    $amount = last_int;
}

def_obj $obj = inv_getobj(inv, $slot);

if (oc_tradeable($obj) = false) {
    mes("You can't trade this item.");
    return;
}

if (oc_members($obj) = true & map_members = false) {
    mes("You can't trade this item.");
    return;
}

def_int $total = inv_total(inv, $obj);
if ($amount < $total) $total = $amount;
inv_moveitem(inv, tempinv, $obj, $total);

%tradestatus = 0;
if_settext(trademain:status, "");
if (.finduid(%tradepartner) = true) {
    .%tradestatus = 0;
    .if_settext(trademain:status, "");
}
