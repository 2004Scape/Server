[label,pvp_ranged_attack]
if (~duel_arena_ranged_check = false) {
    return;
}
if (.stat(hitpoints) = 0) {
    p_stopaction;
    return;
}
def_obj $rhand = inv_getobj(worn, ^wearpos_rhand);
if ($rhand = null) {
    mes("That was your last one!");
    p_stopaction;
    ~update_all($rhand);
    return;
}
if (%action_delay > map_clock | getwalktrigger() = stunned) {
    p_opplayer(2);
    return;
}
// this can be either the quiver or rhand.
def_obj $ammo = ~player_ranged_check_ammo($rhand);
if ($ammo = null) {
    p_stopaction;
    ~update_all($rhand);
    return;
}

p_opplayer(2);
~set_pk_vars;

~player_combat_stat;
~.player_combat_stat;

def_int $damage = 0;
// not sure if xp multipler exists for us or not?!
// https://oldschool.runescape.wiki/w/Combat#PvP_bonus_experience
if (~pvp_hit_roll(%damagetype) = true) {
    def_int $maxhit = %com_maxhit;
    if (~.check_protect_prayer(^ranged_style) = true) {
        $maxhit = scale(6, 10, $maxhit); // reduction of 40%
    }
    $damage = min(randominc($maxhit), .stat(hitpoints)); // tick eating existed! https://oldschool.runescape.wiki/w/Update:The_Wintertodt
    ~give_combat_experience_pvp(%damagestyle, $damage, ~pvp_xp_multiplier(~.player_combat_level));
}
.if_close;
def_int $delay = ~pvp_ranged_use_weapon($rhand, $ammo);
anim(%com_attackanim, 0);
sound_synth(%com_attacksound, 0, 0);
.sound_synth(.%com_attacksound, 0, 0);

queue2(pvp_retaliate, calc($delay / 30), uid);
queue2(pvp_damage, calc($delay / 30), $damage);

both_heropoints($damage);

.anim(.%com_defendanim, $delay);
// .sound_synth(.%com_defendsound, 0, 20);
// sound_synth(.%com_defendsound, 0, 20);

def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
if ($weapon = null) {
    %action_delay = add(map_clock, 4);
} else {
    %action_delay = add(map_clock, oc_param($weapon, attackrate));
    def_int $poison_severity = oc_param($weapon, poison_severity);
    if ($damage > 0 & $poison_severity > 0 & random(4) = 0) { // 1/4 chance to poison
        queue2(poison_player, 0, $poison_severity);
    }
}
if (%damagestyle = ^style_ranged_rapid) {
    %action_delay = sub(%action_delay, 1);
}
def_int $random = random(5);
if (~in_duel_arena(coord) = true) {
    if ($random = 0) {
        inv_del(tempinv, $ammo, 1);
    }
} else if ($random ! 0) {
    world_delay(calc($delay / 30 - 2));
    if (map_blocked(.coord) = false) {
        if (p_finduid(uid) = true & .p_finduid(.uid) = true) {
            inv_dropslot(ranged_quiver_inv, .coord, 0, 200);
        }
    }
}
inv_clear(ranged_quiver_inv);


[proc,pvp_ranged_use_weapon](obj $rhand, obj $ammo)(int)
spotanim_pl(oc_param($ammo, proj_launch), 96, 0);
if (~in_duel_arena(coord) = true) {
    inv_moveitem(worn, tempinv, $ammo, 1); // give rangers their arrows back from duels
} else {
    inv_moveitem(worn, ranged_quiver_inv, $ammo, 1);
}
def_int $delay = 30;
switch_category(oc_category($rhand)) {
    case weapon_bow, weapon_crossbow: 
        $delay = ~player_projectile(coord, .coord, .uid, oc_param($ammo, proj_travel), 40, 36, 32, 15, 0, 11, 5);
    case weapon_thrown, weapon_javelin: 
        $delay = ~player_projectile(coord, .coord, .uid, oc_param($ammo, proj_travel), 40, 36, 32, 15, 0, 11, 5);
}
return($delay);