[opnpc2,_] ~player_melee_attack;
[apnpc2,_] 
mes(tostring(npc_range(coord)));
mes(tostring(%attackrange));
if (npc_range(coord) > %attackrange) {
    p_aprange(%attackrange);
    return;
}
// TODO: Range and mage check
mes(tostring(%damagetype));
mes(tostring(^ranged));
if (%damagetype = ^ranged) {
    ~player_ranged_attack;
    return;
}

//[apnpc2,_]
//mes("apnpc combat");
//
//def_int $attackrange = oc_param(inv_getobj(worn, ^wearpos_rhand), attackrange);
//mes("attack range is <tostring($attackrange)>");
//if (npc_range(coord) > $attackrange) {
//    p_aprange($attackrange);
//    return;
//}
//@combat_begin;

// do a combat defend
[proc,combat_defend]
anim(%com_defendanim, 0);

[proc,player_npc_melee_hit_roll](int $damagetype)(boolean)
def_int $attack_roll = ~player_attack_roll_specific($damagetype);
def_int $defence_roll = ~npc_defence_roll_specific($damagetype);
say("Clock: <tostring(map_clock)>, Player A: <tostring($attack_roll)>, NPC D: <tostring($defence_roll)>, Player Max: <tostring(%com_maxhit)>");
if (randominc($attack_roll) > randominc($defence_roll)) {
    return(true);
}
return(false);

// returns the correct combat calculated attack damage for weapon
[proc,player_attack_roll_specific](int $damagetype)(int)
def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
switch_int ($damagetype) {
    case ^stab: return(%com_stabattack);
    case ^slash: return(%com_slashattack);
    case ^crush: return(%com_crushattack);
    case ^ranged: return(%com_rangeattack);
    case ^magic: return(%com_magicattack);
}
error("combat style of <tostring($damagetype)> not defined in switch for p_npc_melee_roll");

// returns the player's defence roll, depending on style
[proc,player_defence_roll_specific](int $damagetype)(int)
switch_int ($damagetype) {
    case ^stab: return(%com_stabdef);
    case ^slash: return(%com_slashdef);
    case ^crush: return(%com_crushdef);
    case ^ranged: return(%com_rangedef);
    case ^magic: return(%com_magicdef);
}
error("style of <tostring($damagetype)> not defined in switch for player_defence_roll_specific");