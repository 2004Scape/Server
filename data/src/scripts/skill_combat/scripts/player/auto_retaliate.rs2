[queue,playerhit_n_retaliate](npc_uid $nid)
if (%auto_retaliate = ^player_auto_retaliate_on & npc_finduid($nid) = true & ~npc_is_attackable(npc_type) = true & busy2 = false) {
    // npc flinches player
    if (%action_delay < map_clock) {
        def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
        def_int $delay = 4;
        if ($weapon ! null) {
            $delay = oc_param($weapon, attackrate);
        }
        
        $delay = divide($delay, 2);

        if (%damagestyle = ^style_ranged_rapid) {
            $delay = sub($delay, 1);
        }

        %action_delay = add(map_clock, $delay);
    }

    p_opnpc(2);
}

// this needs fixing, and .queue support
[queue,pvp_retaliate](player_uid $uid)
if (%auto_retaliate = ^player_auto_retaliate_on & .finduid($uid) = true & busy2 = false) {
    // npc flinches player
    if (%action_delay < map_clock) {
        def_obj $weapon = inv_getobj(worn, ^wearpos_rhand);
        def_int $delay = 4;
        if ($weapon ! null) {
            $delay = oc_param($weapon, attackrate);
        }
        
        $delay = divide($delay, 2);

        if (%damagestyle = ^style_ranged_rapid) {
            $delay = sub($delay, 1);
        }

        %action_delay = add(map_clock, $delay);
    }

    p_opplayer(2);
}
