// returns the calculated max hit for this npc
[proc,npc_melee_maxhit]()(int)
def_int $strength_level = npc_stat(strength);
def_int $strengthbonus = npc_param(strengthbonus);
//npcs are essentially always on controlled
return(~combat_melee_maximum_hit(~combat_effective_strength(1, $strength_level, 0), $strengthbonus));

// perform a basic melee attack from the npc to the player.
[proc,npc_meleeattack]
def_int $attack_roll = ~npc_attack_roll;
def_int $defence_roll = ~player_defence_roll_specific(npc_param(damagetype));
def_int $maxhit = ~npc_melee_maxhit;

// npc_say("Clock: <tostring(map_clock)>, NPC A: <tostring($attack_roll)>, Player D: <tostring($defence_roll)>, NPC Max: <tostring($maxhit)>");

if (randominc($attack_roll) > randominc($defence_roll)) {
    ~playerhit_n_melee(randominc($maxhit), npc_param(attackrate));
    return;
}
~playerhit_n_melee(0, npc_param(attackrate));

[proc,playerhit_n_melee](int $damage, int $delay)
~damage_self($damage);
queue(playerhit_n_retaliate, 0, npc_uid); // this should be a queue* command
%npc_action_delay = add(map_clock, $delay);
%lastcombat = map_clock;