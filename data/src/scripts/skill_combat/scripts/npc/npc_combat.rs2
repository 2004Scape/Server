[ai_queue1,_] gosub(npc_default_retaliate);
[ai_queue2,_] ~npc_default_damage(randominc(7)); // TODO damage
[ai_queue3,_] gosub(npc_default_death);
[ai_opplayer2,_] gosub(npc_default_attack);

// a default melee retaliate script.
[proc,npc_default_retaliate]
if (finduid(%npc_retaliation_pid) = true) {
    npc_setmode(opplayer2);
}

// a default melee attack script.
[proc,npc_default_attack]
if (%npc_action_delay > map_clock) return;
anim(%com_defendanim, 0);

def_seq $attack_anim;
def_synth $attack_sound;
$attack_anim, $attack_sound = ~npc_combat_swing_anim_and_synth;

npc_anim($attack_anim, 0);
sound_synth($attack_sound, 0, 0);
~npc_meleeattack;

// a default damage script.
[proc,npc_default_damage](int $damage)
// if the npc is already dead
if (npc_stat(hitpoints) = 0) {
    return;
}
// damage the npc
if ($damage = 0) {
    npc_damage(^hitmark_block, 0);
} else {
    npc_damage(^hitmark_damage, $damage);
}
if (npc_stat(hitpoints) > 0) {
    return;
}
// if the npc died from this damage
npc_setmode(none);
npc_queue(3, 0);

// a default death script.
[proc,npc_default_death]
gosub(npc_death);
def_obj $drop = npc_param(death_drop);
if ($drop = null | finduid(%npc_retaliation_pid) = false) {
    return;
}
obj_add(npc_coord, $drop, 1, 200);

// perform a basic melee attack from the npc to the player.
[proc,npc_meleeattack]
def_int $accuracy = ~npc_melee_accuracy;
def_int $maxhit = ~npc_melee_maxhit;

npc_say("Clock: <tostring(map_clock)>, Accuracy: <tostring($accuracy)>, Max Hit: <tostring($maxhit)>");

if (randominc($accuracy) > randominc(~player_effective_defence(npc_param(damagetype)))) {
    ~playerhit_n_melee(randominc($maxhit), ~npc_combat_attackspeed);
    return;
}
~playerhit_n_melee(0, ~npc_combat_attackspeed);

[proc,playerhit_n_melee](int $damage, int $delay)
~damage_self($damage);
queue(playerhit_n_retaliate, 0, npc_uid); // this should be a queue* command
%npc_action_delay = add(map_clock, $delay);
%combat_logout_delay = add(map_clock, 17); // 10 seconds

[queue,playerhit_n_retaliate](npc_uid $nid)
if (%auto_retaliate = ^player_auto_retaliate_on & p_finduid(uid) = true & npc_finduid($nid) = true) {
    // npc flinches player
    if (%action_delay < map_clock) {
        %action_delay = add(map_clock, divide(~npc_combat_attackspeed, 2));
    }
    p_opnpc(2);
}
