[ai_queue1,_](int $arg) gosub(npc_default_retaliate);
[ai_queue2,_](int $damage) ~npc_default_damage($damage);
[ai_queue3,_](int $arg) gosub(npc_default_death);
[ai_opplayer2,_] gosub(npc_default_attack);

// a default melee retaliate script.
[proc,npc_default_retaliate]
if (npc_findhero = true) {
    npc_setmode(opplayer2);
}

// a default melee attack script.
[proc,npc_default_attack]
if (%npc_action_delay > map_clock) return;
anim(%com_defendanim, 0);

npc_anim(npc_param(attack_anim), 0);
sound_synth(npc_param(attack_sound), 0, 0);
~npc_meleeattack;

// a default damage script.
[proc,npc_default_damage](int $damage)
// if the npc is already dead
if (npc_stat(hitpoints) = 0) {
    return;
}
// damage the npc
if ($damage = 0) {
    npc_damage(^hitmark_block, 0);
} else {
    npc_damage(^hitmark_damage, $damage);
}
if (npc_stat(hitpoints) > 0) {
    return;
}
// if the npc died from this damage
npc_setmode(none);
npc_queue(3, 0, 0);

// a default death script.
[proc,npc_default_death]
gosub(npc_death);
def_obj $drop = npc_param(death_drop);
if ($drop ! null & npc_findhero = true) {
    obj_add(npc_coord, $drop, 1, 200);
}

// perform a basic melee attack from the npc to the player.
[proc,npc_meleeattack]
def_int $attack_roll = ~npc_attack_roll;
def_int $defence_roll = ~player_defence_roll_specific(npc_param(damagetype));
def_int $maxhit = ~npc_melee_maxhit;

npc_say("Clock: <tostring(map_clock)>, NPC A: <tostring($attack_roll)>, Player D: <tostring($defence_roll)>, NPC Max: <tostring($maxhit)>");

if (randominc($attack_roll) > randominc($defence_roll)) {
    ~playerhit_n_melee(randominc($maxhit), npc_param(attackrate));
    return;
}
~playerhit_n_melee(0, npc_param(attackrate));

[proc,playerhit_n_melee](int $damage, int $delay)
~damage_self($damage);
queue(playerhit_n_retaliate, 0, npc_uid); // this should be a queue* command
%npc_action_delay = add(map_clock, $delay);
%combat_logout_delay = add(map_clock, 17); // 10 seconds

[queue,playerhit_n_retaliate](npc_uid $nid)
if (%auto_retaliate = ^player_auto_retaliate_on & npc_finduid($nid) = true) {
    // npc flinches player
    if (%action_delay < map_clock) {
        %action_delay = add(map_clock, divide(npc_param(attackrate), 2));
    }
    p_opnpc(2);
}
