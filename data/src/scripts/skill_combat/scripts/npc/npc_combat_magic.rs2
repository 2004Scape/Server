[proc,npc_magic_attack_roll]()(int)
if (~check_protect_prayer(^magic_style) = true) {
    return(0);
}
def_int $magicattack = npc_param(magicattack);
def_int $effective_magic = ~combat_effective_stat(1, npc_stat(magic), 100); // no prayerbonus
return(~combat_stat($effective_magic, $magicattack));

[proc,npc_magic_attack_roll_no_prot]()(int)
def_int $magicattack = npc_param(magicattack);
def_int $effective_magic = ~combat_effective_stat(1, npc_stat(magic), 100); // no prayerbonus
return(~combat_stat($effective_magic, $magicattack));

[walktrigger,frozen]
if (map_clock < %frozen) {
    mes("A magical force stops you from moving.");
    p_walk(coord);
    walktrigger(frozen);
}

[proc,npc_cast_spell](int $spell, int $attackspeed)
~npc_cast_spell_with_forced_max_hit($spell,$attackspeed,null);

[proc,npc_cast_spell_with_forced_max_hit](int $spell, int $attackspeed, int $defined_max_hit)
if (~npc_combat_spell_checks = false) {
    return;
}
def_dbrow $spell_data = ~get_spell_data($spell);
if (~npc_freeze_allowed($spell_data) = false) {
    return;
}
if (~npc_debuff_allowed($spell_data) = false) {
    return;
}
def_int $duration = ~npc_spell_cast($spell_data, $attackspeed);

def_int $maxhit;
if($defined_max_hit ! null) {
    $maxhit = $defined_max_hit;
} else {
    $maxhit = db_getfield($spell_data, magic_spell_table:maxhit, 0);
}

if (~npc_player_hit_roll(^magic_style) = true) {
    ~npc_spell_success($spell_data, $maxhit, $duration);
    ~npc_stat_change_effect($spell_data);
    ~npc_freeze_effect($spell_data);
} else {
    ~npc_spell_fail($spell_data, $duration);
}
~npc_set_attack_vars;


// todo: dunno if this should be queued but protected access lol
[queue,npc_freeze_player](int $duration)
mes("You've been frozen!");
%frozen = calc(map_clock + $duration + 1);
walktrigger(frozen);

[proc,npc_combat_spell_checks](boolean)
if (stat(hitpoints) = 0) { // no idea if this should exist
    return(false);
}
if (%npc_action_delay > map_clock) {
    npc_setmode(applayer2);
    return(false);
}
if (~npc_can_attack_player = false) {
    npc_setmode(null);
    return(false);
}
return(true);

[proc,npc_freeze_allowed](dbrow $spell_data)(boolean)
if (db_getfield($spell_data, magic_spell_table:freeze_time, 0) > 0) {
    if (%frozen > map_clock) {
        return(false);
    }
}

[proc,npc_debuff_allowed](dbrow $spell_data)(boolean)
def_stat $stat;
def_int $constant;
def_int $percent;
def_int $i = 0;
def_int $spell = db_getfield($spell_data, magic_spell_table:spell, 0);
while ($i < db_getfieldcount($spell_data, magic_spell_table:stat_change) & $spell ! ^flames_of_zamorak & $spell ! ^claws_of_guthix & $spell ! ^saradomin_strike) {
    $stat, $constant, $percent = db_getfield($spell_data, magic_spell_table:stat_change, $i);
    if (stat($stat) < stat_base($stat)) {
        return(false);
    }
    $i = add($i, 1);
}
return(true);

[proc,npc_spell_cast](dbrow $spell_data, int $attackspeed)(int)
if_close;
if (npc_param(magicattack_anim) = null) {
    npc_anim(db_getfield($spell_data, magic_spell_table:anim, 0), 0);
} else {
    npc_anim(npc_param(magicattack_anim), 0);
}
if (db_getfieldcount($spell_data, magic_spell_table:spotanim_origin) > 0) {
    spotanim_npc(db_getfield($spell_data, magic_spell_table:spotanim_origin, 0), 92, 0);
}
%npc_action_delay = add(map_clock, $attackspeed);
def_int $duration = 64;
if (db_getfieldcount($spell_data, magic_spell_table:spotanim_proj) > 0) {
    $duration = ~player_projectile(npc_coord, coord, uid, db_getfield($spell_data, magic_spell_table:spotanim_proj, 0), 51, 16, -5, 64, 10);
}
return($duration);

[proc,npc_spell_success](dbrow $spell_data, int $maxhit, int $duration)
if_close;
sound_synth(db_getfield($spell_data, magic_spell_table:sound_success, 0), 0, 0);
def_int $damage = randominc($maxhit);
if ($maxhit ! null) {
    // npc vs player spells have no 1t extra damage delay. Whereas player vs npc spells do (osrs)
    if (getqueue(player_death) < 1) {
        queue(damage_player, calc($duration / 30), $damage);
        if (npc_param(poison_severity) > 0 & $damage > 0) {
            queue(poison_player, 0, npc_param(poison_severity));
        }
    }
    // player anim for flinching doesnt exist, even in osrs
    // anim(~combat_defend_anim(inv_getobj(worn, ^wearpos_rhand)), $duration);
}
spotanim_pl(db_getfield($spell_data, magic_spell_table:spotanim_target, 0), $duration);
if (getqueue(player_death) < 1) {
    queue(playerhit_n_retaliate, calc($duration / 30), npc_uid);
}

[proc,npc_stat_change_effect](dbrow $spell_data)
def_stat $stat;
def_int $constant;
def_int $percent;
def_int $i = 0;
while ($i < db_getfieldcount($spell_data, magic_spell_table:stat_change)) {
    $stat, $constant, $percent = db_getfield($spell_data, magic_spell_table:stat_change, $i);
    if ($constant > 0 & $percent > 0) {
        // if both positive assume statadd
        // nothing ever uses this but i guess if someone wants to add some heal spell or something
        stat_add($stat, $constant, $percent);
    } else {
        if ($constant < 0) $constant = multiply($constant, -1);
        if ($percent < 0) $percent = multiply($percent, -1);
        mes("You feel weakened.");
        stat_sub($stat, $constant, $percent);
    }
    $i = add($i, 1);
}

[proc,npc_freeze_effect](dbrow $spell_data)
def_int $freeze_time = db_getfield($spell_data, magic_spell_table:freeze_time, 0);
if ($freeze_time > 0) {
    queue(npc_freeze_player, 0, $freeze_time);
}

[proc,npc_spell_fail](dbrow $spell_data, int $duration)
if_close;
if (db_getfieldcount($spell_data, magic_spell_table:sound_fail) > 0) {
    sound_synth(db_getfield($spell_data, magic_spell_table:sound_fail, 0), 0, 0);
} else {
    // reduce stat, and freeze spells dont have fail sounds, so i assume they just play their normal sound
    // every time?
    sound_synth(db_getfield($spell_data, magic_spell_table:sound_success, 0), 0, 0);
}
// splash sound would play here, doesnt exist in this rev?
// sound_synth(, 0, $duration);
spotanim_pl(failedspell_impact, 92, $duration);
// splashing in osrs causes insta auto retal
queue(playerhit_n_retaliate, 0, npc_uid);
