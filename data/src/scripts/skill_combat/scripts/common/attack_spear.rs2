// lunge -> controlled/stab
// swipe -> controlled/slash
// pound -> controlled/crush
// block -> defensive/stab

[proc,attack_spear_swing](obj $obj, int $style)(seq, synth)
switch_int ($style) {
    case ^style_spear_lunge, ^style_spear_block:
        return(oc_param($obj, stabattack_anim), oc_param($obj, stab_sound));
    case ^style_spear_swipe:
        return(oc_param($obj, slashattack_anim), oc_param($obj, slash_sound));
    case ^style_spear_pound:
        return(oc_param($obj, crushattack_anim), oc_param($obj, crush_sound));
}
error("style of <tostring($style)> not defined in switch for attack_spear_swing");

[proc,attack_spear_strengthbonus](int $style)(int)
switch_int ($style) {
    case ^style_spear_lunge, ^style_spear_swipe, ^style_spear_pound:
        return(1);
    case ^style_spear_block:
        return(0);
}
error("style of <tostring($style)> not defined in switch for attack_spear_strengthbonus");

[proc,attack_spear_accuracybonus](int $style)(int)
switch_int ($style) {
    case ^style_spear_lunge, ^style_spear_swipe, ^style_spear_pound:
        return(1);
    case ^style_spear_block:
        return(0);
}
error("style of <tostring($style)> not defined in switch for attack_spear_accuracybonus");

[proc,attack_spear_style](int $style)(int)
switch_int ($style) {
    case ^style_spear_lunge, ^style_spear_block:
        return(^stab);
    case ^style_spear_swipe:
        return(^slash);
    case ^style_spear_pound:
        return(^crush);
}
error("style of <tostring($style)> not defined in switch for attack_spear_style");
