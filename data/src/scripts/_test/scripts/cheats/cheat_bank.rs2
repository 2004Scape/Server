[debugproc,bank]
if_close;
if (p_finduid(uid) = true) {
    @openbank;
} else {
    @please_finish;
}

[debugproc,bank_preset]
if_close;
if (p_finduid(uid) = true) {
    inv_clear(bank);

    inv_add(bank, coins, ^max_32bit_int);
    inv_add(bank, christmas_cracker, 255);
    inv_add(bank, purple_partyhat, 255);
    inv_add(bank, red_partyhat, 255);
    inv_add(bank, white_partyhat, 255);
    inv_add(bank, blue_partyhat, 255);
    inv_add(bank, green_partyhat, 255);
    inv_add(bank, yellow_partyhat, 255);
    inv_add(bank, santa_hat, 255);
    inv_add(bank, green_halloween_mask, 255);
    inv_add(bank, blue_halloween_mask, 255);
    inv_add(bank, red_halloween_mask, 255);
    inv_add(bank, obj_1961, 255);
    inv_add(bank, pumpkin, 255);
    inv_add(bank, obj_981, 255);
    inv_add(bank, obj_1989, 255);

    inv_add(bank, firerune, ^max_32bit_int);
    inv_add(bank, waterrune, ^max_32bit_int);
    inv_add(bank, airrune, ^max_32bit_int);
    inv_add(bank, earthrune, ^max_32bit_int);
    inv_add(bank, mindrune, ^max_32bit_int);
    inv_add(bank, bodyrune, ^max_32bit_int);
    inv_add(bank, deathrune, ^max_32bit_int);
    inv_add(bank, naturerune, ^max_32bit_int);
    inv_add(bank, chaosrune, ^max_32bit_int);
    inv_add(bank, lawrune, ^max_32bit_int);
    inv_add(bank, cosmicrune, ^max_32bit_int);
    inv_add(bank, bloodrune, ^max_32bit_int);
    inv_add(bank, soulrune, ^max_32bit_int);
    inv_add(bank, blankrune, ^max_32bit_int);

    inv_add(bank, air_talisman, 65535);
    inv_add(bank, earth_talisman, 65535);
    inv_add(bank, fire_talisman, 65535);
    inv_add(bank, water_talisman, 65535);
    inv_add(bank, body_talisman, 65535);
    inv_add(bank, mind_talisman, 65535);
    inv_add(bank, blood_talisman, 65535);
    inv_add(bank, chaos_talisman, 65535);
    inv_add(bank, cosmic_talisman, 65535);
    inv_add(bank, death_talisman, 65535);
    inv_add(bank, law_talisman, 65535);
    inv_add(bank, soul_talisman, 65535);
    inv_add(bank, nature_talisman, 65535);

    inv_add(bank, bronze_pickaxe, 255);
    inv_add(bank, iron_pickaxe, 255);
    inv_add(bank, steel_pickaxe, 255);
    inv_add(bank, mithril_pickaxe, 255);
    inv_add(bank, adamant_pickaxe, 255);
    inv_add(bank, rune_pickaxe, 255);

    inv_add(bank, clay, 65535);
    inv_add(bank, copper_ore, 65535);
    inv_add(bank, tin_ore, 65535);
    inv_add(bank, iron_ore, 65535);
    inv_add(bank, silver_ore, 65535);
    inv_add(bank, gold_ore, 65535);
    inv_add(bank, mithril_ore, 65535);
    inv_add(bank, adamantite_ore, 65535);
    inv_add(bank, runite_ore, 65535);
    inv_add(bank, coal, 65535);

    inv_add(bank, bronze_bar, 65535);
    inv_add(bank, iron_bar, 65535);
    inv_add(bank, steel_bar, 65535);
    inv_add(bank, silver_bar, 65535);
    inv_add(bank, gold_bar, 65535);
    inv_add(bank, mithril_bar, 65535);
    inv_add(bank, adamantite_bar, 65535);
    inv_add(bank, runite_bar, 65535);

    inv_add(bank, shield_left_half, ^max_32bit_int);
    inv_add(bank, shield_right_half, ^max_32bit_int);

    inv_add(bank, bones, ^max_32bit_int);
    inv_add(bank, burnt_bones, ^max_32bit_int);
    inv_add(bank, bat_bones, ^max_32bit_int);
    inv_add(bank, big_bones, ^max_32bit_int);
    inv_add(bank, wolf_bones, ^max_32bit_int);
    inv_add(bank, babydragon_bones, ^max_32bit_int);
    inv_add(bank, dragon_bones, ^max_32bit_int);

    inv_add(bank, vial_empty, ^max_32bit_int);
    inv_add(bank, vial_water, ^max_32bit_int);

    inv_add(bank, unidentified_guam_leaf, 255);
    inv_add(bank, unidentified_marrentill, 255);
    inv_add(bank, unidentified_tarromin, 255);
    inv_add(bank, unidentified_harralander, 255);
    inv_add(bank, unidentified_ranarr_weed, 255);
    inv_add(bank, unidentified_irit_leaf, 255);
    inv_add(bank, unidentified_avantoe, 255);
    inv_add(bank, unidentified_kwuarm, 255);
    inv_add(bank, unidentified_cadantine, 255);
    inv_add(bank, unidentified_dwarf_weed, 255);
    inv_add(bank, unidentified_torstol, 255);
    inv_add(bank, unidentified_snake_weed, 255);
    inv_add(bank, unidentified_ardrigal, 255);
    inv_add(bank, unidentified_sito_foil, 255);
    inv_add(bank, unidentified_volencia_moss, 255);
    inv_add(bank, unidentified_rogues_purse, 255);
    inv_add(bank, unidentified_lantadyme, 255);

    inv_add(bank, unicorn_horn, 255);
    inv_add(bank, blue_dragon_scale, 255);
    inv_add(bank, eye_of_newt, 255);
    inv_add(bank, red_spiders_eggs, 255);
    inv_add(bank, limpwurt_root, 255);
    inv_add(bank, snape_grass, 255);
    inv_add(bank, white_berries, 255);
    inv_add(bank, wine_of_zamorak, 255);
    inv_add(bank, jangerberries, 255);

    inv_add(bank, bronze_axe, 255);
    inv_add(bank, iron_axe, 255);
    inv_add(bank, black_axe, 255);
    inv_add(bank, steel_axe, 255);
    inv_add(bank, mithril_axe, 255);
    inv_add(bank, adamant_axe, 255);
    inv_add(bank, rune_axe, 255);

    inv_add(bank, logs, 65535);
    inv_add(bank, oak_logs, 65535);
    inv_add(bank, willow_logs, 65535);
    inv_add(bank, maple_logs, 65535);
    inv_add(bank, yew_logs, 65535);
    inv_add(bank, magic_logs, 65535);

    inv_add(bank, lobster_pot, 255);
    inv_add(bank, net, 255);
    inv_add(bank, net_big, 255);
    inv_add(bank, fishing_rod, 255);
    inv_add(bank, fly_fishing_rod, 255);
    inv_add(bank, harpoon, 65535);
    inv_add(bank, fishing_bait, ^max_32bit_int);
    inv_add(bank, feather, ^max_32bit_int);

    inv_add(bank, shrimps, 65535);
    inv_add(bank, raw_shrimps, 65535);
    inv_add(bank, anchovies, 65535);
    inv_add(bank, raw_anchovies, 65535);
    inv_add(bank, sardine, 65535);
    inv_add(bank, raw_sardine, 65535);
    inv_add(bank, salmon, 65535);
    inv_add(bank, raw_salmon, 65535);
    inv_add(bank, trout, 65535);
    inv_add(bank, raw_trout, 65535);
    inv_add(bank, giant_carp, 65535);
    inv_add(bank, raw_giant_carp, 65535);
    inv_add(bank, cod, 65535);
    inv_add(bank, raw_cod, 65535);
    inv_add(bank, raw_herring, 65535);
    inv_add(bank, herring, 65535);
    inv_add(bank, raw_pike, 65535);
    inv_add(bank, pike, 65535);
    inv_add(bank, raw_mackerel, 65535);
    inv_add(bank, mackerel, 65535);
    inv_add(bank, raw_tuna, 65535);
    inv_add(bank, tuna, 65535);
    inv_add(bank, raw_bass, 65535);
    inv_add(bank, bass, 65535);
    inv_add(bank, raw_swordfish, 65535);
    inv_add(bank, swordfish, 65535);
    inv_add(bank, raw_lobster, 65535);
    inv_add(bank, lobster, 65535);
    inv_add(bank, raw_shark, 65535);
    inv_add(bank, shark, 65535);
    inv_add(bank, raw_manta_ray, 65535);
    inv_add(bank, manta_ray, 65535);
    inv_add(bank, raw_sea_turtle, 65535);
    inv_add(bank, sea_turtle, 65535);
    inv_add(bank, casket, ^max_32bit_int);

    inv_add(bank, chisel, 255);
    inv_add(bank, uncut_diamond, 65535);
    inv_add(bank, uncut_ruby, 65535);
    inv_add(bank, uncut_emerald, 65535);
    inv_add(bank, uncut_sapphire, 65535);
    inv_add(bank, uncut_opal, 65535);
    inv_add(bank, uncut_jade, 65535);
    inv_add(bank, uncut_red_topaz, 65535);
    inv_add(bank, uncut_dragonstone, 65535);
} else {
    @please_finish;
}

[debugproc,clearbank]
if_close;
if (p_finduid(uid) = true) {
    inv_clear(bank);
} else {
    @please_finish;
}
